[
    {
        "id": "a640aab2.a9f768",
        "type": "tab",
        "label": "Test",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b7f67da0.fbf1",
        "type": "tab",
        "label": "Start",
        "disabled": false,
        "info": ""
    },
    {
        "id": "df0dd648.98daa8",
        "type": "tab",
        "label": "SMHI 1.1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "358baec9.c8b902",
        "type": "tab",
        "label": "Indoor 1.1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "960078e.e3e6d88",
        "type": "tab",
        "label": "Price 1.1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fa4686d6.c21688",
        "type": "tab",
        "label": "Hotwater 1.1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eee76599.b5f0d8",
        "type": "tab",
        "label": "RMU 1.1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e884fc9.b6c45",
        "type": "tab",
        "label": "Tibber",
        "disabled": true,
        "info": ""
    },
    {
        "id": "ade2c7a9.e97ba8",
        "type": "tab",
        "label": "New",
        "disabled": true,
        "info": ""
    },
    {
        "id": "dedc2653.57a3d8",
        "type": "tab",
        "label": "Inomhustempstyrning",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a7a0164d.f58e58",
        "type": "tab",
        "label": "Airflow (Beta)",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7f0122f1.22d60c",
        "type": "tab",
        "label": "Airflow",
        "disabled": true,
        "info": ""
    },
    {
        "id": "9e6c8a27.1c7bd8",
        "type": "tab",
        "label": "Example of ui-list",
        "disabled": true,
        "info": ""
    },
    {
        "id": "64327e50.8f365",
        "type": "subflow",
        "name": "Skrivläge",
        "info": "",
        "category": "output",
        "in": [
            {
                "x": 193,
                "y": 539,
                "wires": [
                    {
                        "id": "24d4f99f.449346"
                    }
                ]
            }
        ],
        "out": [],
        "icon": "node-red/alert.png"
    },
    {
        "id": "c16a87b4.50f188",
        "type": "subflow",
        "name": "Update Plugin",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 448,
                "y": 98,
                "wires": [
                    {
                        "id": "2285dba8.d33464"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 916,
                "y": 98,
                "wires": [
                    {
                        "id": "2285dba8.d33464",
                        "port": 0
                    },
                    {
                        "id": "f085947d.651808",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c191a5d.5d76258",
        "type": "subflow",
        "name": "Update core config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 70,
                "y": 77,
                "wires": [
                    {
                        "id": "eb6f8564.c5a668"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 706,
                "y": 168,
                "wires": [
                    {
                        "id": "6905e0f5.dd875",
                        "port": 0
                    }
                ]
            },
            {
                "x": 706,
                "y": 224,
                "wires": [
                    {
                        "id": "a38b1ef.5259be",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "outputLabels": [
            "Node Config",
            "Config"
        ]
    },
    {
        "id": "d7f6b34d.d13d6",
        "type": "mqtt-broker",
        "z": "",
        "name": "NibePi",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6aa61182.b42ed",
        "type": "ui_tab",
        "z": 0,
        "name": "Inställningar",
        "icon": "settings",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "74cc47a5.9ee208",
        "type": "ui_tab",
        "z": 0,
        "name": "Prognosreglering",
        "icon": "wi-wu-sunny",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "72d88fa0.a760e",
        "type": "ui_tab",
        "z": 0,
        "name": "Inomhusreglering",
        "icon": "home",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57a2c311.41401c",
        "type": "ui_tab",
        "z": 0,
        "name": "Lufthastighet",
        "icon": "wi-darksky-tornado",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ad3904c7.ceae48",
        "type": "ui_tab",
        "z": 0,
        "name": "Elprisreglering",
        "icon": "flash_on",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9efe2aac.f80568",
        "type": "ui_tab",
        "z": 0,
        "name": "List",
        "icon": "dashboard",
        "order": 7
    },
    {
        "id": "d814a7db.5cdc38",
        "type": "ui_group",
        "z": 0,
        "name": "Uppdateringar",
        "tab": "6aa61182.b42ed",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4f8b35d1.5c8fec",
        "type": "ui_group",
        "z": "",
        "name": "Registerhantering",
        "tab": "1dc0b5a5.8e56aa",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ed53104a.a7fac",
        "type": "ui_group",
        "z": "",
        "name": "Datahantering",
        "tab": "6aa61182.b42ed",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "810e862f.c36438",
        "type": "ui_group",
        "z": 0,
        "name": "SMHI",
        "tab": "74cc47a5.9ee208",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "a2cfe148.70708",
        "type": "ui_group",
        "z": "",
        "name": "Inomhusreglering S1",
        "tab": "72d88fa0.a760e",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ad7a33f3.24adf",
        "type": "ui_group",
        "z": 0,
        "name": "Automatisk lufthastighet",
        "tab": "57a2c311.41401c",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "90803197.41c34",
        "type": "ui_group",
        "z": "",
        "name": "Graf",
        "tab": "ad3904c7.ceae48",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "53b18b65.7718c4",
        "type": "ui_group",
        "z": "",
        "name": "Temperaturgraf",
        "tab": "72d88fa0.a760e",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4a7ab836.172ae8",
        "type": "ui_group",
        "z": "",
        "name": "Information",
        "tab": "6aa61182.b42ed",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "89f97b1b.8278f8",
        "type": "ui_group",
        "z": 0,
        "name": "Loggning",
        "tab": "6aa61182.b42ed",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "72d428b5.3b0eb8",
        "type": "ui_group",
        "z": 0,
        "name": "Default",
        "tab": "9efe2aac.f80568",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7e910a08.c6c984",
        "type": "ui_group",
        "z": "",
        "name": "Prognosreglering S1",
        "tab": "74cc47a5.9ee208",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "b561c5cd.249a58",
        "type": "ui_group",
        "z": "",
        "name": "Inställningar Värme",
        "tab": "ad3904c7.ceae48",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "2e9c7d75.ee6312",
        "type": "ui_group",
        "z": "",
        "name": "Inställningar Varmvatten",
        "tab": "ad3904c7.ceae48",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f481a5f0.f9f1c8",
        "type": "ui_group",
        "z": 0,
        "name": "Inställningar",
        "tab": "ad3904c7.ceae48",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e13feb70.134618",
        "type": "ui_base",
        "z": 0,
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cd0101",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Nibe",
                "default": "#4B7930",
                "baseColor": "#a80202",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#a80202",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#a80202",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#f40303",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#a80202",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NibePi",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY/MM/DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d342c0ba.f2418",
        "type": "ui_group",
        "z": "",
        "name": "Solfaktor",
        "tab": "74cc47a5.9ee208",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "455ba55e.e91e8c",
        "type": "ui_group",
        "z": "",
        "name": "Vindfaktor",
        "tab": "74cc47a5.9ee208",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1409f0ed.f2d6cf",
        "type": "ui_group",
        "z": 0,
        "name": "Automatisk lufthastighet",
        "tab": "88b70b91.66f338",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "88b70b91.66f338",
        "type": "ui_tab",
        "z": 0,
        "name": "Lufthastighet",
        "icon": "wi-darksky-tornado",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "844659a2.8d8508",
        "type": "nibe-config",
        "z": "",
        "mqtt": true,
        "mqtt_discovery": true,
        "mqtt_topic": "nibe/modbus/",
        "mqtt_host": "127.0.0.1",
        "mqtt_port": "1883",
        "mqtt_user": "",
        "mqtt_pass": "",
        "connection_series": "fSeries",
        "connection": "serial",
        "serial_port": "/dev/ttyAMA0",
        "tcp_server": "",
        "tcp_port": ""
    },
    {
        "id": "b75c3bdd.9e0ae8",
        "type": "ui_tab",
        "z": "",
        "name": "Startsida",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ada224d8.213a68",
        "type": "ui_group",
        "z": "",
        "name": "MQTT",
        "tab": "b75c3bdd.9e0ae8",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5a361c77.6aadb4",
        "type": "ui_group",
        "z": "",
        "name": "Plugins",
        "tab": "b75c3bdd.9e0ae8",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a8bf2b6e.6abc18",
        "type": "ui_group",
        "z": "",
        "name": "Husdata",
        "tab": "b75c3bdd.9e0ae8",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "197ce413.27432c",
        "type": "ui_group",
        "z": "",
        "name": "Prognosreglering S2",
        "tab": "74cc47a5.9ee208",
        "order": 6,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "794cdfce.3f74f",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "ecddb018.0e4f3",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ecddb018.0e4f3",
        "type": "ui_tab",
        "z": "",
        "name": "List",
        "icon": "dashboard",
        "order": 9
    },
    {
        "id": "1dc0b5a5.8e56aa",
        "type": "ui_tab",
        "z": "",
        "name": "Datahantering",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bd199d65.157fc",
        "type": "ui_group",
        "z": "",
        "name": "Data",
        "tab": "1dc0b5a5.8e56aa",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "261b1f51.5c37e",
        "type": "ui_group",
        "z": "",
        "name": "Graf",
        "tab": "1dc0b5a5.8e56aa",
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "33ed6fb8.2f3ce",
        "type": "ui_group",
        "z": "",
        "name": "Inställningar",
        "tab": "74cc47a5.9ee208",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "fb207b28.da59b8",
        "type": "ui_group",
        "z": "",
        "name": "Extra givare",
        "tab": "6aa61182.b42ed",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "95b0af9c.89089",
        "type": "ui_group",
        "z": "",
        "name": "Inställningar",
        "tab": "72d88fa0.a760e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "70965431.b26cbc",
        "type": "ui_group",
        "z": "",
        "name": "Data",
        "tab": "72d88fa0.a760e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1b40f24f.7b6d9e",
        "type": "ui_group",
        "z": "",
        "name": "Elprisreglering S1",
        "tab": "ad3904c7.ceae48",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "94305680.d32c48",
        "type": "ui_group",
        "z": "",
        "name": "Elprisreglering S2",
        "tab": "ad3904c7.ceae48",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e6946a7.5e1e698",
        "type": "ui_group",
        "z": "",
        "name": "Information",
        "tab": "ad3904c7.ceae48",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "6ee1e12a.a6f04",
        "type": "ui_group",
        "z": "",
        "name": "Inomhusreglering S2",
        "tab": "72d88fa0.a760e",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "da3c0db0.9c6aa",
        "type": "ui_group",
        "z": "",
        "name": "System",
        "tab": "6aa61182.b42ed",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "605e2041.0137e",
        "type": "ui_group",
        "z": "",
        "name": "Värmekurva S1",
        "tab": "6aa61182.b42ed",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ea24545a.5d7038",
        "type": "ui_group",
        "z": "",
        "name": "Värmekurva S2",
        "tab": "6aa61182.b42ed",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "958d2405.84c788",
        "type": "ui_tab",
        "z": "",
        "name": "Varmvattenreglering",
        "icon": "hot_tub",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bcb5f9e4.9bc858",
        "type": "ui_group",
        "z": "",
        "name": "Automatisk Tillfällig Lyx",
        "tab": "958d2405.84c788",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "38b6d907.520796",
        "type": "ui_group",
        "z": "",
        "name": "Varmvatten Prioritet",
        "tab": "958d2405.84c788",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "97526682.5406d8",
        "type": "ui_group",
        "z": "",
        "name": "Loggning",
        "tab": "6aa61182.b42ed",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ef983ace.21f138",
        "type": "ui_group",
        "z": "",
        "name": "RMU40 S1",
        "tab": "6aa61182.b42ed",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "32b15b25.77ef94",
        "type": "ui_group",
        "z": "",
        "name": "RMU40 S2",
        "tab": "6aa61182.b42ed",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1d61b1b5.3ea93e",
        "type": "ui_group",
        "z": "",
        "name": "Kompressorförbrukning",
        "tab": "b75c3bdd.9e0ae8",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "fe94277c.dcd118",
        "type": "ui_group",
        "z": "",
        "name": "Avancerat",
        "tab": "6aa61182.b42ed",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "3cdc3a0c.02b986",
        "type": "ui_group",
        "z": "",
        "name": "Two dimension Array",
        "tab": "9a403c9b.86b71",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9a403c9b.86b71",
        "type": "ui_tab",
        "z": "",
        "name": "Table Examples",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "723a0250.fd7dcc",
        "type": "ui_group",
        "z": "",
        "name": "MQTT",
        "tab": "6aa61182.b42ed",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6dbad083.a9946",
        "type": "ui_group",
        "z": "",
        "name": "Förbrukning strömavkännare",
        "tab": "b75c3bdd.9e0ae8",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "24d4f99f.449346",
        "type": "exec",
        "z": "64327e50.8f365",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 582,
        "y": 539,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b42ae080.74e16",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) { return; }\nvar time = Date.now();\nvar lastSent = context.get('last')||0;\nvar mode = msg.payload;\nvar tempInside = data[40033];\nif(data.indoorSensor!==undefined && config.plugins.indoor.nibesensor!==undefined && config.plugins.indoor.nibesensor===false) {\n    tempInside = data.indoorSensor;\n}\nvar hotwater = data[47041]\nvar tempOutside = data[40004];\nvar heatCurve = data[47007];\nvar setTemp = data[47398];\nvar dM = data[43005];\nvar dMstart = data[47206];\n//var time = Number(getTime());\nif(tempInside===undefined || tempOutside===undefined) {\n    return;\n}\n\n\ntempInside = Number(tempInside);\ntempOutside = Number(tempOutside);\nheatCurve = Number(heatCurve);\nsetTemp = Number(setTemp);\ndMstart = Number(dMstart);\nif(mode===\"super_low\") { // Super lågt pris\n    if(config.plugins.tibber.hotwater_active===true) {\n        if(hotwater!=config.plugins.tibber.hotwater_price_superlow) {\n            node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_superlow});\n        }\n    }\nif(tempInside<=(setTemp-0.5)) {\n    global.set('priceSet',config.plugins.tibber.adjust_superlow);\n} else {\n    global.set('priceSet',0);\n}\n} else if (mode==\"low\") { // Lågt pris\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_low) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_low});\n    }\n}\nif(tempInside<=(setTemp-0.5)) {\n    global.set('priceSet',config.plugins.tibber.adjust_low);\n} else {\n    global.set('priceSet',0);\n}\n} else if (mode==\"normal\") { //Normalt\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_normal) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_normal});\n    }\n}\n    global.set('priceSet',0);\n/*\nvar hW1 = config.hotWaterPriority1.split(\"-\");\nvar hW2 = config.hotWaterPriority2.split(\"-\");\nnode.send([null,null,{debug:\"Klockan är: \"+time+\", Varmvatten period 1: \"+hW1[0]+\"-\"+hW1[1]+\", Varmvatten period 2: \"+hW2[0]+\"-\"+hW2[1]}]);\n    if((time>=Number(hW1[0]) && time <=Number(hW1[1])) || (time>=Number(hW2[0]) && time <=Number(hW2[1]))) {\n        node.send([null,null,{debug:\"Normalt elpris. Prioriterad varmvatten period.\"}]);\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:\"1\"});\n    } else {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:\"0\"});\n        node.send([null,null,{debug:\"Normalt elpris. Ej prioriterad varmvatten period.\"}]);\n    }*/\n} else if (mode==\"high\") { // Dyrt pris\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_high) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_high});\n    }\n}\nif(tempInside>=setTemp) {\n    if(dM<(dMstart-50) && time>=lastSent) { // Får endast sända gradminuter en gång var 55e minut.\n        node.send({topic:config.defaultTopic+\"43005/set\",payload:0});\n        context.set('last',time+3300000);\n    }\n    global.set('priceSet',config.plugins.tibber.adjust_high);\n} else {\n    global.set('priceSet',0);\n}\n}\n\n\nfunction getTime() {\nvar now     = new Date(); \nvar hour    = now.getHours();\nvar minute  = now.getMinutes();\n\nif(hour.toString().length == 1) {\n    hour = '0'+hour;\n}\nif(minute.toString().length == 1) {\n    minute = '0'+minute;\n}\nvar result = hour.toString()+minute.toString();\nreturn result;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 988,
        "y": 126,
        "wires": [
            [
                "a8f3ce3d.6e11f",
                "b7e82bb8.f034f8"
            ]
        ]
    },
    {
        "id": "a8f3ce3d.6e11f",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1243,
        "y": 126,
        "wires": []
    },
    {
        "id": "9c213bd7.0504d8",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "low",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 918,
        "y": 217,
        "wires": [
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "91fc2c12.52fc9",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 182,
        "y": 196,
        "wires": [
            [
                "c7131a.4e2b3ce8"
            ]
        ]
    },
    {
        "id": "1d9c0012.d1f53",
        "type": "http request",
        "z": "7e884fc9.b6c45",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://api.tibber.com/v1-beta/gql",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 582,
        "y": 136,
        "wires": [
            [
                "b93d065.261edf8",
                "f4f542f1.cf26c"
            ]
        ]
    },
    {
        "id": "c7131a.4e2b3ce8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.tibber===undefined) { return; }\nif(config.plugins.tibber.active===undefined || config.plugins.tibber.active===false) {\n    global.set('priceSet',0);\n    return;\n}\nvar token = config.plugins.tibber.token;\nif(config.plugins.tibber.token===undefined || config.plugins.tibber.token===\"\") return;\nmsg.headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n};\n\nmsg.payload = { \"query\": \"{\\\n  viewer {\\\n    homes {\\\n      currentSubscription {\\\n        status\\\n        priceInfo {\\\n          today{\\\n            startsAt\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n          }\\\n          current{\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n            startsAt\\\n          }\\\n          tomorrow {\\\n            startsAt\\\n            total\\\n            level\\\n            energy\\\n            tax\\\n          }\\\n        }\\\n      }\\\n      consumption(resolution: HOURLY, last: 48) {\\\n        nodes {\\\n          from\\\n          to\\\n          consumption\\\n          consumptionUnit\\\n        }\\\n      }\\\n    }\\\n  }\\\n}\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 382,
        "y": 136,
        "wires": [
            [
                "1d9c0012.d1f53"
            ]
        ]
    },
    {
        "id": "3e0c18fc.202108",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 35,
        "wires": [
            [
                "a8f64026.b3645"
            ]
        ]
    },
    {
        "id": "a8f64026.b3645",
        "type": "subflow:64327e50.8f365",
        "z": "7e884fc9.b6c45",
        "name": "Skrivläge",
        "x": 256,
        "y": 35,
        "wires": []
    },
    {
        "id": "d9222c3c.131db",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "high",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 918,
        "y": 175,
        "wires": [
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "b7e82bb8.f034f8",
        "type": "mqtt out",
        "z": "7e884fc9.b6c45",
        "name": "NibePi",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 1114,
        "y": 126,
        "wires": []
    },
    {
        "id": "b67355f5.eda608",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register/#",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 147,
        "y": 189,
        "wires": [
            [
                "b90a2cad.51aaf"
            ]
        ]
    },
    {
        "id": "b90a2cad.51aaf",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 364,
        "y": 175,
        "wires": []
    },
    {
        "id": "1e33929a.5d641d",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var configTopic = \"nibe/config\";\nvar registerTopic = \"nibe/register\";\nvar config = global.get('config');\nvar register = global.get('register');\nvar data = global.get('data')||{};\nif(msg.topic==configTopic) {\n    config = JSON.parse(msg.payload);\n    global.set('config',config);\n    node.send({debug:config});\n} else if(msg.topic==registerTopic) {\n    register = JSON.parse(msg.payload);\n    global.set('register',register);\n    node.send({debug:\"Register set\"});\n}\nif(config===undefined) { return; }\nif(config.defaultTopic!==undefined) {\n    var topic = msg.topic.split(\"/\");\n    var topicConfig = config.defaultTopic.split(\"/\");\n    if(topic[0]==topicConfig[0] && topic[1]==topicConfig[1]) {\n        if(data!==undefined) {\n            data[topic[2]] = String(msg.payload);\n            global.set('data',data)\n            node.send({topic:topic[2],payload:msg.payload});\n        }\n        \n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 267,
        "y": 133,
        "wires": [
            [
                "4455ea2b.ac5ff4"
            ]
        ]
    },
    {
        "id": "6e961ad9.7732f4",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 119,
        "y": 133,
        "wires": [
            [
                "1e33929a.5d641d"
            ]
        ]
    },
    {
        "id": "4455ea2b.ac5ff4",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 441,
        "y": 133,
        "wires": []
    },
    {
        "id": "cfe77047.38f09",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 95,
        "y": 371,
        "wires": [
            [
                "ea88ea0.02bd218"
            ]
        ]
    },
    {
        "id": "ea88ea0.02bd218",
        "type": "json",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 288,
        "y": 364,
        "wires": [
            [
                "bd9bd75.b78e028",
                "bac692c0.11e84",
                "a7a2f16e.8deca",
                "db862c6c.0430d",
                "c8a189c9.71c2b8",
                "4c5fe2e7.3d8a7c",
                "2a75b220.bceb6e",
                "a71fc0a0.cbad4",
                "3cf2e9a5.ebb2c6"
            ]
        ]
    },
    {
        "id": "1adfd7ff.d67468",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1009,
        "y": 406,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "21dde779.a6ecf8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 166,
        "y": 35,
        "wires": [
            [
                "2dd86788.1e59d8"
            ]
        ]
    },
    {
        "id": "f86a78bd.8e2088",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config[msg.topic]===undefined) {\n    config[msg.topic] = {};\n}\nvar value = msg.payload;\nvar check = value.endsWith(\"/\");\nif(check===false) {\n    value = value+\"/\";\n}\nconfig[msg.topic] = value;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 743,
        "y": 700,
        "wires": [
            [
                "89600b26.de1618"
            ]
        ]
    },
    {
        "id": "bac692c0.11e84",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.defaultTopic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 437,
        "y": 581,
        "wires": [
            [
                "2fde2d1c.371fe2"
            ]
        ]
    },
    {
        "id": "bd9bd75.b78e028",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Remove Registers",
        "func": "var value = msg.payload.registers;\nif(value===undefined) { return; }\nvar newArr = [];\nfor( var i = 0; i < value.length; i++){\n    var word = value[i].register+\": \"+value[i].titel;\n    newArr.push({[word]:value[i].register});\n}\nmsg = {\n    options:newArr\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 552,
        "y": 826,
        "wires": [
            [
                "1d13a496.42fbeb"
            ]
        ]
    },
    {
        "id": "d8c999e2.2eeb08",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.defaultTopic===undefined) { return; }\nmsg.topic = \"nibe/register/\"+msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 946,
        "y": 833,
        "wires": [
            [
                "d8bcd8d9.023928",
                "6f1a350c.cf66cc"
            ]
        ]
    },
    {
        "id": "d8bcd8d9.023928",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1138,
        "y": 787,
        "wires": []
    },
    {
        "id": "be4833a.6b1c6d",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Check Heatoffset",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nvar indoorSet = global.get('indoorSet')||0;\nvar priceSet = global.get('priceSet')||0;\nvar weatherSet = global.get('weatherSet')||0;\nvar heatOffset = data[47011];\nif(heatOffset===undefined) return;\nheatOffset = Number(heatOffset);\nvar dataSet = (indoorSet+priceSet+weatherSet);\nif(heatOffset!==(dataSet)) {\n    if(dataSet>10) { dataSet = 10; }\n    if(dataSet<-10) { dataSet = -10; }\n    if(dataSet>(heatOffset+0.75)) {\n        node.send({topic:config.defaultTopic+\"47011/set\",payload:heatOffset+1});\n    } else if(dataSet<(heatOffset-0.75)) {\n        node.send({topic:config.defaultTopic+\"47011/set\",payload:heatOffset-1});\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1042,
        "y": 168,
        "wires": [
            [
                "45623e44.ead91",
                "ec40492b.624e98"
            ]
        ]
    },
    {
        "id": "736c491e.4533e8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 843,
        "y": 168,
        "wires": [
            [
                "be4833a.6b1c6d"
            ]
        ]
    },
    {
        "id": "45623e44.ead91",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1204,
        "y": 105,
        "wires": []
    },
    {
        "id": "374fb1bb.45aace",
        "type": "mqtt in",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 193,
        "y": 147,
        "wires": [
            [
                "c7131a.4e2b3ce8"
            ]
        ]
    },
    {
        "id": "e145733f.34baa",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 858,
        "y": 119,
        "wires": [
            [
                "be4833a.6b1c6d"
            ]
        ]
    },
    {
        "id": "13b35cd8.69bf23",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.plugins.airflow===undefined || config.plugins.airflow.active===false) {\n    return;\n}\n\nif(msg.topic==(config.defaultTopic+\"40050\")) {\nvar set_normal = config.plugins.airflow.setpoint_normal;\nvar set_low = config.plugins.airflow.setpoint_low;\nvar data = global.get('data');\nif(data[40050]===undefined || data[47265]===undefined || data[40026]===undefined || data[45001]===undefined) { return; }\nvar flow = Number(data[40050]);\nvar alarm = data[45001];\nvar fan = Number(data[47265]);\nvar temp = Number(data[40026]);\nvar comp_set = Number(data[43182]);\nvar saved_speed = context.get('saved')||fan;\nvar low = context.get('low')||false;\nif(alarm==\"Avfrostning\" || alarm==\"183\") {\n    // Dont regulate when defrosting\n    return;\n} else if(temp<0) {\n    // Dont regulate when the vented air is below 0\n    return;\n}\nvar setpoint = flow;\nif(config.plugins.airflow.setpoint_low_active===true && comp_set<1) {\n    if(low===false) {\n        context.set('saved',fan);\n        low = true;\n        context.set('low',low);\n    }\n    if(config.plugins.airflow.co2_active!==undefined && config.plugins.airflow.co2_active===true) {\n        if(data.co2_sensor!==undefined) {\n            let co2 = Number(data.co2_sensor);\n            if(co2<800) {\n                setpoint = set_low;\n            } else {\n                setpoint = set_normal;\n            }\n        } else {\n            setpoint = set_normal;\n            node.error('CO2 mätning',{topic:\"CO2 mätning\",payload:\"Saknar värde från CO2 givare.\"})\n        }\n    } else {\n        setpoint = set_low;\n    }\n    \n} else {\n    if(low===true) {\n        fan = saved_speed;\n        low = false;\n        context.set('low',low);\n        node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan});\n        return;\n    }\n    setpoint = set_normal;\n}\nnode.send([null,{topic:\"Börvärde\",payload:setpoint}]);\nif(flow>(setpoint+10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan-1});\n} else if(flow<(setpoint-10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan+1});\n} else {\n    // Normal flow\n}\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 441,
        "y": 266,
        "wires": [
            [
                "3d540f9e.34644",
                "cf52d634.bf76f8"
            ],
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "cf52d634.bf76f8",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 610,
        "y": 266,
        "wires": []
    },
    {
        "id": "3d540f9e.34644",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 217,
        "wires": []
    },
    {
        "id": "5d9895ac.e08dbc",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 274,
        "y": 224,
        "wires": [
            [
                "13b35cd8.69bf23",
                "ec0ef000.10059"
            ]
        ]
    },
    {
        "id": "ec0ef000.10059",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 469,
        "y": 168,
        "wires": []
    },
    {
        "id": "3efc68c8.673a58",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 254,
        "y": 77,
        "wires": [
            [
                "2dd86788.1e59d8"
            ]
        ]
    },
    {
        "id": "5c005507.a444bc",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 655,
        "y": 154,
        "wires": [
            [
                "e145733f.34baa"
            ]
        ]
    },
    {
        "id": "da287d0.563f48",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 876,
        "y": 56,
        "wires": []
    },
    {
        "id": "ec40492b.624e98",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1233,
        "y": 168,
        "wires": []
    },
    {
        "id": "7549880b.1596a8",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1212,
        "y": 406,
        "wires": []
    },
    {
        "id": "6f1a350c.cf66cc",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1156,
        "y": 875,
        "wires": []
    },
    {
        "id": "89600b26.de1618",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 946,
        "y": 763,
        "wires": []
    },
    {
        "id": "2dd86788.1e59d8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var topic = msg.topic;\nif(topic==\"nibe/config/get\") {\n    var config = global.get('config');\n    if(config===undefined) {\n        return msg;\n    }\n} else if(topic==\"nibe/register/get\") {\n    var register = global.get('register');\n    if(register===undefined) {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 637,
        "y": 77,
        "wires": [
            [
                "da287d0.563f48"
            ]
        ]
    },
    {
        "id": "e0d9e754.e1fac8",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/log",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 484,
        "y": 1176,
        "wires": [
            [
                "342ffa8c.3c0a46",
                "651b0f09.82b08"
            ]
        ]
    },
    {
        "id": "651b0f09.82b08",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1085,
        "y": 1190,
        "wires": []
    },
    {
        "id": "4cb1221f.21d22c",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 386,
        "y": 721,
        "wires": []
    },
    {
        "id": "71454f91.9089f",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "ff98bcf7.53366"
            ]
        ]
    },
    {
        "id": "ff98bcf7.53366",
        "type": "subflow:64327e50.8f365",
        "z": "ade2c7a9.e97ba8",
        "name": "Skrivläge",
        "x": 306,
        "y": 1220,
        "wires": []
    },
    {
        "id": "db862c6c.0430d",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.host",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 952,
        "wires": [
            [
                "1c132ce4.f75973"
            ]
        ]
    },
    {
        "id": "c8a189c9.71c2b8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.port",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 994,
        "wires": [
            [
                "608dd9cd.f906c8"
            ]
        ]
    },
    {
        "id": "4c5fe2e7.3d8a7c",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.username",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 1036,
        "wires": [
            [
                "8c131446.9508f8"
            ]
        ]
    },
    {
        "id": "674eb780.7d3f48",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.mqtt===undefined) {\n    config.mqtt = {};\n}\nconfig.mqtt[msg.topic] = msg.payload;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 694,
        "y": 987,
        "wires": [
            [
                "89600b26.de1618"
            ]
        ]
    },
    {
        "id": "acd630c8.c616f",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "x": 530,
        "y": 20,
        "wires": [
            [
                "da287d0.563f48"
            ]
        ]
    },
    {
        "id": "a7a2f16e.8deca",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 528,
        "y": 378,
        "wires": [
            [
                "342ae14d.99583e"
            ]
        ]
    },
    {
        "id": "17ef8467.8996bc",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 165,
        "y": 364,
        "wires": [
            [
                "cd46d2e9.8844"
            ]
        ]
    },
    {
        "id": "cd46d2e9.8844",
        "type": "json",
        "z": "a7a0164d.f58e58",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 302,
        "y": 364,
        "wires": [
            [
                "22ec9df1.685f92",
                "14521232.8c30be",
                "cdb23f74.05ffb",
                "89473eb3.9e903",
                "48a2d02a.cd62e",
                "bf99319c.d4c2c",
                "190f986d.7221f8"
            ]
        ]
    },
    {
        "id": "22ec9df1.685f92",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 451,
        "y": 364,
        "wires": [
            [
                "675ff912.8423a8",
                "a775503.592a7b",
                "93968741.f232f8",
                "6b292ae8.4b8c84"
            ]
        ]
    },
    {
        "id": "33568b.ffedf974",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 364,
        "wires": [
            [
                "33672ca8.e3f9d4"
            ]
        ]
    },
    {
        "id": "33672ca8.e3f9d4",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1023,
        "y": 364,
        "wires": []
    },
    {
        "id": "93968741.f232f8",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 633,
        "y": 420,
        "wires": [
            [
                "9f14d280.2b3ec",
                "fc1f6629.6bf228",
                "31d982bd.6bd72e",
                "1bc9e3e0.e20b0c",
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "14521232.8c30be",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_normal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 416,
        "y": 420,
        "wires": [
            [
                "9f14d280.2b3ec"
            ]
        ]
    },
    {
        "id": "a775503.592a7b",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.active!==true) return;\nif(msg.topic==config.defaultTopic+\"47265\") {\n    node.send([null,null,{payload:msg.payload}]);\n}\nif(msg.topic==\"nibe/config\" || msg.topic==config.defaultTopic+\"40050\" || msg.topic==\"setpoint_low_active\" || msg.topic==\"setpoint_low\" || msg.topic==\"setpoint_normal\") {\n    if(config.plugins.airflow===undefined) {\n        config.plugins.airflow = {};\n    }\n    var flow = data[40050]||getData(40050);\n    node.send([null,{payload:flow}]);\n    if(config.plugins.airflow.active===true && config.plugins.airflow.setpoint===0) {\n    config.plugins.airflow.setpoint = Number(flow);\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_normal\") {\n    config.plugins.airflow.setpoint_normal = msg.payload;\n    // Ta bort gammalt configvärde...\n    config.plugins.airflow.setpoint = undefined;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_low_active\") {\n    config.plugins.airflow.setpoint_low_active = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_low\") {\n    config.plugins.airflow.setpoint_low = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n}\n} else if(msg.topic==config.defaultTopic+\"40026\") {\n    node.send([null,null,null,{topic:\"Avluftstemperatur\",payload:msg.payload}])\n} else if(msg.topic==config.defaultTopic+\"43136\") {\n    node.send([null,null,null,{topic:\"Kompressorfrekvens\",payload:msg.payload}])\n}\n\nfunction getData(data) {\n    msg.topic = config.defaultTopic+data+\"/get\";\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 1058,
        "y": 462,
        "wires": [
            [
                "33672ca8.e3f9d4"
            ],
            [
                "e10cbbfe.72daf8",
                "65c9977e.e69a98"
            ],
            [
                "4460715e.f373d",
                "fd7adca5.df6e7"
            ],
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "46d26b56.1971a4",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 904,
        "y": 462,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "3a917b4c.221354",
        "type": "mqtt in",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 193,
        "y": 301,
        "wires": [
            [
                "e309a359.2adb8"
            ]
        ]
    },
    {
        "id": "e309a359.2adb8",
        "type": "json",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 344,
        "y": 301,
        "wires": [
            [
                "38c659c3.8513e6",
                "e1fe02ec.04cc2",
                "6389784c.9ff848",
                "71870400.355edc",
                "6fe00afc.6d1094",
                "770a86d3.63f768",
                "c7283d6.f9f13c",
                "8893aef2.e7679",
                "106b55a7.fd5aca",
                "e1cf7e24.eb737",
                "bd161436.f78cf8",
                "9c97283a.361698",
                "8f60de7b.3b9e4",
                "db7158f3.3350d8"
            ]
        ]
    },
    {
        "id": "38c659c3.8513e6",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 507,
        "y": 301,
        "wires": [
            [
                "b6e5148a.e929b8"
            ]
        ]
    },
    {
        "id": "d8c7691f.8b40b8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 946,
        "y": 301,
        "wires": [
            [
                "ab7c7238.65431"
            ]
        ]
    },
    {
        "id": "ab7c7238.65431",
        "type": "mqtt out",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1121,
        "y": 301,
        "wires": []
    },
    {
        "id": "342ffa8c.3c0a46",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Logg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1220,
        "wires": [
            [
                "a858843a.2748e8"
            ]
        ]
    },
    {
        "id": "cdb23f74.05ffb",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 458,
        "y": 322,
        "wires": [
            [
                "d14d71e6.bbf26",
                "f8afc1f9.b1076"
            ]
        ]
    },
    {
        "id": "d14d71e6.bbf26",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 623,
        "wires": [
            [
                "675ff912.8423a8",
                "9f14d280.2b3ec",
                "fc1f6629.6bf228",
                "31d982bd.6bd72e",
                "1bc9e3e0.e20b0c",
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "f8afc1f9.b1076",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 609,
        "y": 497,
        "wires": []
    },
    {
        "id": "6b9db807.c099a8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/modbus/47011/set",
        "payload": "9",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 932,
        "y": 273,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "93c66530.2e43d8",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.indoor===undefined) {\n    config.plugins.indoor = {};\n}\n    config.plugins.indoor[msg.topic] = msg.payload;\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "22050671.3254aa",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "if(msg.payload===true) {\n    msg.payload = false;\n} else if(msg.payload===false) {\n    msg.payload = true;\n}\nmsg = {\n    enabled:msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 860,
        "wires": [
            [
                "b6165c50.d7caf"
            ]
        ]
    },
    {
        "id": "c5b04105.316c7",
        "type": "mqtt in",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "nibe/plugins/indoor/mqttsensor",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 186,
        "y": 896,
        "wires": [
            [
                "2311aef7.9dd162",
                "7a68bca9.5903b4",
                "5e479433.4ccbfc"
            ]
        ]
    },
    {
        "id": "2311aef7.9dd162",
        "type": "debug",
        "z": "dedc2653.57a3d8",
        "name": "MQTT Sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 486,
        "y": 854,
        "wires": []
    },
    {
        "id": "7a68bca9.5903b4",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.indoor.mqttsensor_value!==undefined && config.plugins.indoor.mqttsensor_value===true) {\n    global.set('data.mqttSensor',String(msg.payload))\n} else {\n    global.set('data.mqttSensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "65c9977e.e69a98",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ärvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "fd7adca5.df6e7",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Fläkthastighet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "6b292ae8.4b8c84",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 560,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "19b34a9a.741395",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/VERSION",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "a5bf2e2c.f92b1",
                "af2bd49d.43f988"
            ]
        ]
    },
    {
        "id": "9cc0ab54.e9e558",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "check",
        "payload": "",
        "payloadType": "date",
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 170,
        "y": 1340,
        "wires": [
            [
                "19b34a9a.741395"
            ]
        ]
    },
    {
        "id": "a5bf2e2c.f92b1",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 1320,
        "wires": []
    },
    {
        "id": "afaaa0c4.2ed3",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nvar url = context.get('url');\nvar url2 = context.get('url2');\nvar version = context.get('version');\nif(config===undefined) { return; }\nif(msg.topic==\"check\") {\n    node.status('Hello')\nif(msg.statusCode==200) {\n    if(msg.payload[0].version!=config.version) {\n        node.send({payload:`Ny version finns tillgänglig. Version: ${msg.payload[0].version}<br>\n        Ändringar:<br>\n        ${msg.payload[0].changelog}\n        `})\n        context.set('url',msg.payload[0].url);\n        context.set('url2',msg.payload[0].url2);\n        context.set('version',msg.payload[0].version);\n        node.send([null,{enabled:true}])\n        \n    } else {\n        msg.payload = \"Den senaste versionen av NibePi är installerad.\";\n        node.send([null,{enabled:false}])\n        return msg;\n    }\n}\n} else if(msg.topic==\"install\") {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Installerar uppdatering...\"})\n    node.send([null,null,{url:url,url2:url2,version:version}])\n    // Hämta ny version\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 687,
        "y": 1547,
        "wires": [
            [
                "511d1c67.799404"
            ],
            [
                "1503abff.27c9b4",
                "7acd2ab4.a406f4"
            ],
            [
                "14276be2.4beb14"
            ]
        ]
    },
    {
        "id": "7acd2ab4.a406f4",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1051,
        "y": 1463,
        "wires": []
    },
    {
        "id": "af2bd49d.43f988",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "afaaa0c4.2ed3"
            ]
        ]
    },
    {
        "id": "d955baaf.b75258",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "cp /home/pi/.node-red/flows.json /home/pi/.node-red/flows_saved.bak && cp /home/pi/.nibepi/heatpump.js /home/pi/.nibepi/heatpump_saved.js && cp /home/pi/.nibepi/config.json /home/pi/.nibepi/config_saved.json",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Gör backup",
        "x": 672,
        "y": 1631,
        "wires": [
            [],
            [],
            [
                "1da9bc87.900333"
            ]
        ]
    },
    {
        "id": "7b34c8bf.d17b68",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 1700,
        "wires": []
    },
    {
        "id": "1da9bc87.900333",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "if(msg.payload.code===0) {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Backup sparad\"})\n    node.send({topic:\"install\",payload:true});\n} else {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Fel. Uppdatering avbruten.\"})\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 834,
        "y": 1638,
        "wires": [
            [
                "afaaa0c4.2ed3"
            ]
        ]
    },
    {
        "id": "63c6b5ca.9c704c",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 330,
        "y": 1740,
        "wires": [
            [
                "ca6f38ba.2e1a58"
            ]
        ]
    },
    {
        "id": "ca6f38ba.2e1a58",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.node-red/flows.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 560,
        "y": 1740,
        "wires": [
            [
                "7b34c8bf.d17b68",
                "7df122c9.9139dc"
            ]
        ]
    },
    {
        "id": "14276be2.4beb14",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 160,
        "y": 1740,
        "wires": [
            [
                "63c6b5ca.9c704c"
            ]
        ]
    },
    {
        "id": "45d95338.bad07c",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 410,
        "y": 1800,
        "wires": [
            [
                "fbc2612a.67d37"
            ]
        ]
    },
    {
        "id": "fbc2612a.67d37",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/heatpump.js",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 640,
        "y": 1800,
        "wires": [
            [
                "be1b9475.0e6e58",
                "dae895ea.bf1e18"
            ]
        ]
    },
    {
        "id": "7df122c9.9139dc",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "url2",
                "pt": "msg",
                "to": "url",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1740,
        "wires": [
            [
                "45d95338.bad07c"
            ]
        ]
    },
    {
        "id": "be1b9475.0e6e58",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c04603d2.4106f",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Färdig",
        "func": "if(msg.topic==\"done\") {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Uppdatering färdig, startar om...\"})\n    node.send({payload:true});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 1880,
        "wires": [
            [
                "4af779bd.44f368"
            ]
        ]
    },
    {
        "id": "dae895ea.bf1e18",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 882,
        "y": 1876,
        "wires": [
            [
                "c04603d2.4106f"
            ]
        ]
    },
    {
        "id": "5b467146.2e43a",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nibepi restart && sudo service nodered restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Starta om",
        "x": 1480,
        "y": 1880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d50e6442.977348",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 253,
        "y": 1589,
        "wires": [
            [],
            [],
            [
                "668766a4.1e7618"
            ]
        ]
    },
    {
        "id": "668766a4.1e7618",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 442,
        "y": 1603,
        "wires": [
            [
                "d955baaf.b75258"
            ]
        ]
    },
    {
        "id": "d2f51b3d.dd74a8",
        "type": "comment",
        "z": "ade2c7a9.e97ba8",
        "name": "Version 1.0.6",
        "info": "",
        "x": 115,
        "y": 273,
        "wires": []
    },
    {
        "id": "2a75b220.bceb6e",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.debug",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 322,
        "wires": [
            [
                "3a3f02b8.10d73e"
            ]
        ]
    },
    {
        "id": "b6d60ac6.a4d8d8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config[msg.topic]===undefined) {\n    config[msg.topic] = {};\n} \nconfig[msg.topic] = msg.payload;\n\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1212,
        "y": 280,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "f27788df.8f7638",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/node-red-static/log/nodered.log",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1112,
        "y": 357,
        "wires": [
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "ab38f4c.12d7608",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 862,
        "y": 322,
        "wires": [
            [
                "f27788df.8f7638"
            ],
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "589d9437.b335fc",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 442,
        "y": 2205,
        "wires": [
            [],
            [],
            [
                "d0b5da7b.589cf8"
            ]
        ]
    },
    {
        "id": "d0b5da7b.589cf8",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 603,
        "y": 2268,
        "wires": [
            [
                "f1beddd7.12012"
            ]
        ]
    },
    {
        "id": "ca8aea85.7b36e8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 189,
        "y": 2275,
        "wires": [
            [
                "589d9437.b335fc"
            ]
        ]
    },
    {
        "id": "f1beddd7.12012",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "touch /home/pi/node-red-static/nodered.log && sudo mv /home/pi/node-red-static/nodered.log /home/pi/node-red-static/log/nodered.log",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Skapa logg",
        "x": 784,
        "y": 2261,
        "wires": [
            [],
            [],
            [
                "d56a6693.5d08a8"
            ]
        ]
    },
    {
        "id": "d56a6693.5d08a8",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1044,
        "y": 2261,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e7be9d5b.c0bff",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 330,
        "y": 252,
        "wires": [
            [
                "77d14157.16f5a"
            ]
        ]
    },
    {
        "id": "77d14157.16f5a",
        "type": "subflow:64327e50.8f365",
        "z": "ade2c7a9.e97ba8",
        "name": "Skrivläge",
        "env": [],
        "x": 466,
        "y": 252,
        "wires": []
    },
    {
        "id": "6ce01c79.d82294",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 658,
        "y": 616,
        "wires": [
            [
                "92709014.a8fb2"
            ]
        ]
    },
    {
        "id": "ad071f9c.747ff",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1267,
        "y": 651,
        "wires": []
    },
    {
        "id": "92709014.a8fb2",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Add Registers",
        "func": "var register = JSON.parse(msg.payload);\nif(register===undefined) return;\nvar outRegister = [];\nfor( var i = 0; i < register.length; i++){\n    outRegister[i] = {};\n    outRegister[i].title = register[i].register+\" (\"+register[i].mode+\"): \"+register[i].titel;\n    outRegister[i].description = register[i].info;\n    outRegister[i].register = register[i].register;\n    outRegister[i].mode = register[i].mode;\n    outRegister[i].unit = register[i].unit;\n    outRegister[i].isChecked = register[i].isChecked;\n    \n}\nif(outRegister!==undefined && outRegister!==[]) {\n    node.send({payload:outRegister});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 864,
        "y": 602,
        "wires": [
            [
                "d3e7b620.1b5828"
            ]
        ]
    },
    {
        "id": "b69122fd.049d2",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Add Registers",
        "func": "if(msg.payload.isChecked===true) {\n    node.send({topic:\"nibe/register/add\",payload:msg.payload.register});\n} else if (msg.payload.isChecked===false) {\n    node.send({topic:\"nibe/register/remove\",payload:msg.payload.register});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1172,
        "y": 560,
        "wires": [
            [
                "f262755c.4c82e8"
            ]
        ]
    },
    {
        "id": "f262755c.4c82e8",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1282,
        "y": 602,
        "wires": []
    },
    {
        "id": "883f5e20.3b7f5",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 658,
        "y": 560,
        "wires": [
            [
                "92709014.a8fb2"
            ]
        ]
    },
    {
        "id": "5ac35585.a0f14c",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1092,
        "y": 1071,
        "wires": []
    },
    {
        "id": "17f52438.4a54cc",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 903,
        "y": 1085,
        "wires": [
            [
                "5ac35585.a0f14c"
            ]
        ]
    },
    {
        "id": "f4f542f1.cf26c",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Tibber",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 757,
        "y": 189,
        "wires": []
    },
    {
        "id": "b93d065.261edf8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(msg.statusCode!==200) {\n    global.set('priceSet',0);\n    node.warn('Får ej kontakt med Tibber servern. Ställer in reglering till 0.')\n    return;\n}\nvar today = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.today;\nvar tomorrow;\nvar current = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.current.energy*100;\nvar consumption = msg.payload.data.viewer.homes[0].consumption.nodes;\n\nnode.send({payload:[]});\nif(consumption!==undefined) {\nfor( var i = 0; i < consumption.length; i++){\n    let timestamp = toTimestamp(consumption[i].from)\n    let topic = \"Förbrukning\"\n    let value = consumption[i].consumption;\n    node.send({topic:topic,timestamp:timestamp,payload:value})\n}\n}\n\nif(msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.tomorrow!==undefined) {\n    tomorrow = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.tomorrow;\n}\nvar priceArray = today.concat(tomorrow);\npriceArray.sort(function(a,b){return a.energy - b.energy});\nvar time = toTimestamp(new Date());\nvar lowestPrice = toTimestamp(priceArray[0].startsAt);\nvar Min = priceArray[config.plugins.tibber.price_min].energy*100;\nvar Max = priceArray[(priceArray.length-1)-config.plugins.tibber.price_max].energy*100;\n\nvar MinArray = [];\nvar MaxArray = [];\nvar valueArray = [];\nvar adjustArray = [];\nfor( var o = 0; o < priceArray.length; o++){\n    let timestamp = toTimestamp(priceArray[o].startsAt)\n    let topic = \"Pris\"\n    var adjust = 0;\n    var hotwater_adjust = Number(config.plugins.tibber.hotwater_price_normal);\n    let value = Number(priceArray[o].energy*100).toFixed(2);\n    if(value>Max) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_high);\n        adjust = config.plugins.tibber.adjust_high;\n    }\n    if(value<=(config.plugins.tibber.price_low)) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_superlow);\n        adjust = config.plugins.tibber.adjust_superlow;\n    } else if(timestamp>=lowestPrice) {\n        if(value<Min) {\n            hotwater_adjust = Number(config.plugins.tibber.hotwater_price_low);\n            adjust = config.plugins.tibber.adjust_low;\n        }\n    }\n    if((Max-Min)<config.plugins.tibber.adjust_active) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_normal);\n        adjust = 0;\n    }\n    if(config.plugins.tibber.hotwater_active===true) {\n        //node.send({topic:\"Varmvattenläge\",timestamp:timestamp,payload:hotwater_adjust})\n    }\n    MinArray.push({x:timestamp,y:Number(Min.toFixed(2))});\n    MaxArray.push({x:timestamp,y:Number(Max.toFixed(2))});\n    valueArray.push({x:timestamp,y:Number(value)});\n    adjustArray.push({x:timestamp,y:Number(adjust.toFixed(2))})\n    //node.send({topic:\"Nedre Brytpunkt\",timestamp:timestamp,payload:Min})\n    //node.send({topic:\"Övre Brytpunkt\",timestamp:timestamp,payload:Max})\n    //node.send({topic:topic,timestamp:timestamp,payload:value})\n    //node.send({topic:\"Kurvjustering\",timestamp:timestamp,payload:adjust})\n    \n}\n//var test = valueArray.sort(function(a,b){return a.x - b.y});\nvalueArray.sort((a, b) => (a.x > b.x) ? 1 : -1)\nadjustArray.sort((a, b) => (a.x > b.x) ? 1 : -1)\n\nvar sendArray = [\n    {\n        \"series\":[\"Nedre Brytpunkt\",\"Övre Brytpunkt\",\"Pris\",\"Kurvjustering\"],\n        \"data\":[MinArray,MaxArray,valueArray,adjustArray],\n        \"labels\":[\"Nedre Brytpunkt\",\"Övre Brytpunkt\",\"Pris\",\"Kurvjustering\"]\n    }];\nnode.send({topic:\"Kostnad\",payload:sendArray});\nif(current<=(config.plugins.tibber.price_low)) {\n    node.send([null,null,{payload:\"super_low\"}])\n    node.send([null,{payload:`Super lågt elpris: ${(current).toFixed(2)} öre`}])\n} else if(current<Min) {\n    if(time>lowestPrice) {\n        node.send([null,null,{payload:\"low\"}])\n    }\n    node.send([null,{payload:`Lågt elpris: ${(current).toFixed(2)} öre`}])\n} else if(current>Max) {\n    node.send([null,null,{payload:\"high\"}])\n    node.send([null,{payload:`Högt elpris: ${(current).toFixed(2)} öre`}])\n} else {\n    node.send([null,null,{payload:\"normal\"}])\n    node.send([null,{payload:`Normalt elpris: ${(current).toFixed(2)} öre`}])\n}\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number(datum.toFixed());\n}\n",
        "outputs": 3,
        "noerr": 0,
        "x": 757,
        "y": 119,
        "wires": [
            [
                "4a2a2d38.a43634"
            ],
            [
                "436e890f.3ad428"
            ],
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "c7ba3d3a.9fc47",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 673,
        "y": 2457,
        "wires": [
            [],
            [],
            [
                "837cf52c.d61658"
            ]
        ]
    },
    {
        "id": "837cf52c.d61658",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 883,
        "y": 2471,
        "wires": [
            [
                "f402d761.947788"
            ]
        ]
    },
    {
        "id": "f402d761.947788",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service smbd start",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1069,
        "y": 2471,
        "wires": [
            [],
            [],
            [
                "348adf28.64b49"
            ]
        ]
    },
    {
        "id": "348adf28.64b49",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 848,
        "y": 2548,
        "wires": [
            [
                "137f172d.c16289"
            ]
        ]
    },
    {
        "id": "137f172d.c16289",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba startad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1001,
        "y": 2548,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "f0425f62.2aeb3",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1079,
        "y": 2611,
        "wires": [
            [],
            [],
            [
                "6c3b102d.a104"
            ]
        ]
    },
    {
        "id": "7bd5c5ee.85cb2c",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 884,
        "y": 2611,
        "wires": [
            [
                "f0425f62.2aeb3"
            ]
        ]
    },
    {
        "id": "1687716.fde818f",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service smbd stop",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 649,
        "y": 2611,
        "wires": [
            [],
            [],
            [
                "7bd5c5ee.85cb2c"
            ]
        ]
    },
    {
        "id": "6c3b102d.a104",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 849,
        "y": 2688,
        "wires": [
            [
                "80a6c3de.615d4"
            ]
        ]
    },
    {
        "id": "80a6c3de.615d4",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba stoppad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1002,
        "y": 2688,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "dffd293e.1ad458",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nibepi restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 2751,
        "wires": [
            [],
            [],
            [
                "30706f58.df4e1"
            ]
        ]
    },
    {
        "id": "30706f58.df4e1",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 666,
        "y": 2765,
        "wires": [
            [
                "b773d189.5b2c8"
            ]
        ]
    },
    {
        "id": "b773d189.5b2c8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Startar om kärnan.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 836,
        "y": 2765,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "bca6a0a2.63d97",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nodered restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 477,
        "y": 2835,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "56679770.c1bc78",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\n\nif(config.plugins.tibber===undefined) {\n    config.plugins.tibber = {};\n}\n\nnode.send([null,{payload:\" \"}]);\nconfig.plugins.tibber[msg.topic] = msg.payload;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 855,
        "y": 385,
        "wires": [
            [
                "ab7c7238.65431"
            ],
            []
        ]
    },
    {
        "id": "333e437b.43764c",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Token är inlagd i databasen",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "a95559b9.c53f88"
            ]
        ]
    },
    {
        "id": "e1fe02ec.04cc2",
        "type": "switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "payload.plugins.tibber.token",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 343,
        "y": 350,
        "wires": [
            [
                "333e437b.43764c"
            ],
            [
                "d7caab2f.99b4c8"
            ]
        ]
    },
    {
        "id": "6389784c.9ff848",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 479,
        "y": 511,
        "wires": [
            []
        ]
    },
    {
        "id": "71870400.355edc",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 479,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6fe00afc.6d1094",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_high",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 658,
        "wires": [
            []
        ]
    },
    {
        "id": "770a86d3.63f768",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 707,
        "wires": [
            []
        ]
    },
    {
        "id": "c7283d6.f9f13c",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 805,
        "wires": [
            []
        ]
    },
    {
        "id": "89c06450.933638",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 434,
        "y": 2905,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e1cf7e24.eb737",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 952,
        "wires": [
            []
        ]
    },
    {
        "id": "106b55a7.fd5aca",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_normal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 903,
        "wires": [
            []
        ]
    },
    {
        "id": "8893aef2.e7679",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_high",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 854,
        "wires": [
            []
        ]
    },
    {
        "id": "b6e5148a.e929b8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 206,
        "y": 854,
        "wires": [
            []
        ]
    },
    {
        "id": "bd161436.f78cf8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_superlow",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 1001,
        "wires": [
            []
        ]
    },
    {
        "id": "9c97283a.361698",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 609,
        "wires": [
            []
        ]
    },
    {
        "id": "8f60de7b.3b9e4",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_superlow",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 756,
        "wires": [
            []
        ]
    },
    {
        "id": "db7158f3.3350d8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 1050,
        "wires": [
            []
        ]
    },
    {
        "id": "4a2a2d38.a43634",
        "type": "switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Förbrukning",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 897,
        "y": 49,
        "wires": [
            [],
            [
                "ef9345be.279118"
            ]
        ]
    },
    {
        "id": "58d74bdf.3f88f4",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/modbus/43005/set",
        "payload": "-1000",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1191,
        "y": 224,
        "wires": [
            [
                "b7e82bb8.f034f8"
            ]
        ]
    },
    {
        "id": "5baab153.3e4a4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kolla efter uppdateringar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "19b34a9a.741395"
            ]
        ]
    },
    {
        "id": "1503abff.27c9b4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Installera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "install",
        "x": 305,
        "y": 1484,
        "wires": [
            [
                "d50e6442.977348"
            ]
        ]
    },
    {
        "id": "8863a431.f38be8",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta Samba",
        "tooltip": "Startar fildelningsservern och sätter NibePi i skrivläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 415,
        "y": 2457,
        "wires": [
            [
                "c7ba3d3a.9fc47"
            ]
        ]
    },
    {
        "id": "7c970ca4.e53bb4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Stoppa Samba",
        "tooltip": "Stoppar fildelningsservern och sätter NibePi i läsläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 416,
        "y": 2597,
        "wires": [
            [
                "1687716.fde818f"
            ]
        ]
    },
    {
        "id": "5bc2966c.2059e8",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta om NibePi kärnan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 201,
        "y": 2751,
        "wires": [
            [
                "dffd293e.1ad458"
            ]
        ]
    },
    {
        "id": "a99ecaad.329118",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta om Node-RED",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 198,
        "y": 2835,
        "wires": [
            [
                "bca6a0a2.63d97",
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "44438af8.2cf0d4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta om NibePi hårdvara",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 225,
        "y": 2905,
        "wires": [
            [
                "89c06450.933638"
            ]
        ]
    },
    {
        "id": "1d13a496.42fbeb",
        "type": "ui_dropdown",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Ta bort Register",
        "tooltip": "",
        "place": "Välj register",
        "group": "4f8b35d1.5c8fec",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "remove",
        "x": 745,
        "y": 826,
        "wires": [
            [
                "d8c999e2.2eeb08"
            ]
        ]
    },
    {
        "id": "342ae14d.99583e",
        "type": "ui_switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Extern MQTT Broker",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "mqtt",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 786,
        "y": 392,
        "wires": [
            [
                "1adfd7ff.d67468"
            ]
        ]
    },
    {
        "id": "675ff912.8423a8",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Automatisk lufthastighet",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "airflow",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 691,
        "y": 364,
        "wires": [
            [
                "33568b.ffedf974"
            ]
        ]
    },
    {
        "id": "3a3f02b8.10d73e",
        "type": "ui_switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Debug log",
        "tooltip": "",
        "group": "89f97b1b.8278f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "debug",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 721,
        "y": 322,
        "wires": [
            [
                "ab38f4c.12d7608"
            ]
        ]
    },
    {
        "id": "9f14d280.2b3ec",
        "type": "ui_slider",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Lufthastighet Normal Börvärde",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 3,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "setpoint_normal",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 914,
        "y": 406,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "2fde2d1c.371fe2",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Topic",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "defaultTopic",
        "x": 588,
        "y": 700,
        "wires": [
            [
                "f86a78bd.8e2088"
            ]
        ]
    },
    {
        "id": "608dd9cd.f906c8",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Port",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "port",
        "x": 396,
        "y": 994,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "8c131446.9508f8",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Username",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "username",
        "x": 416,
        "y": 1036,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "13b9bd4f.27e183",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Password",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "password",
        "x": 416,
        "y": 1078,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "1c132ce4.f75973",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Host",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "host",
        "x": 399,
        "y": 952,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "b6165c50.d7caf",
        "type": "ui_text_input",
        "z": "dedc2653.57a3d8",
        "name": "MQTT Topic text",
        "label": "",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "mqttsensor",
        "x": 900,
        "y": 840,
        "wires": [
            [
                "93c66530.2e43d8"
            ]
        ]
    },
    {
        "id": "e10cbbfe.72daf8",
        "type": "ui_text",
        "z": "a7a0164d.f58e58",
        "group": "ad7a33f3.24adf",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Ärvärde",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1260,
        "y": 420,
        "wires": []
    },
    {
        "id": "4460715e.f373d",
        "type": "ui_text",
        "z": "a7a0164d.f58e58",
        "group": "ad7a33f3.24adf",
        "order": 8,
        "width": "4",
        "height": "1",
        "name": "",
        "label": "Fläkthastighet",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "436e890f.3ad428",
        "type": "ui_text",
        "z": "7e884fc9.b6c45",
        "group": "90803197.41c34",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Elpris: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 988,
        "y": 91,
        "wires": []
    },
    {
        "id": "d1eba932.145588",
        "type": "ui_chart",
        "z": "a7a0164d.f58e58",
        "name": "",
        "group": "ad7a33f3.24adf",
        "order": 9,
        "width": "12",
        "height": "12",
        "label": "Lufthastighet",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1274,
        "y": 602,
        "wires": [
            []
        ]
    },
    {
        "id": "e12c845b.003a68",
        "type": "ui_chart",
        "z": "7e884fc9.b6c45",
        "name": "",
        "group": "90803197.41c34",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Förbrukning",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1162,
        "y": 63,
        "wires": [
            []
        ]
    },
    {
        "id": "a858843a.2748e8",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 870,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4ea7d6bc.4e7168",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1267,
        "y": 2548,
        "wires": []
    },
    {
        "id": "4ceb17d1.eea6d8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "89f97b1b.8278f8",
        "name": "Visa logg knapp",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<button onclick=\"redirect()\">Visa logfil</button>\n<script>\nvar redirect = function(){\nwindow.location.href = \"../log/nodered.log\";\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 916,
        "y": 224,
        "wires": [
            []
        ]
    },
    {
        "id": "bf49e0e6.35bdf",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "89f97b1b.8278f8",
        "name": "Logg information",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>OBS. Loggning bör endast utföras en kortare period (Max 1h).<br>\nAll information sparas till minnet och försvinner vid en omstart av hårdvaran.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6664c578.0da70c",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "d814a7db.5cdc38",
        "name": "Uppdatering Förtext",
        "order": 1,
        "width": 12,
        "height": 2,
        "format": "<div>Kolla efter uppdateringar för NibePi mjukvaran.<br>\nOBS. efter uppdateringen startar mjukvaran om och larm om Kom.avbrott kommer att genereras på pumpen.<br>\nVid uppstart återställs detta.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1143,
        "y": 1414,
        "wires": [
            []
        ]
    },
    {
        "id": "a71fc0a0.cbad4",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "4a7ab836.172ae8",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<br>Värmepump: Nibe {{msg.payload.pump}}<br>\nFirmware: {{msg.payload.firmware}}<br>\nNibePi Version: {{msg.payload.version}}",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 520,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ca1c457e.642ea8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "ed53104a.a7fac",
        "name": "MQTT Info",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Anslut en egen MQTT broker.\n    Välj vilket topic data ska publiceras under. T.ex register 43005 (Gradminuter) kommer att publiceras på\n    nibe/modbus/43005.<br>\n    Vill du skriva data skickar man värdet man vill skriva med /set på slutet.<br>\n    Exempelvis topic nibe/modbus/43005/set\n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 248,
        "y": 1113,
        "wires": [
            []
        ]
    },
    {
        "id": "7c041900.6396f8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "4f8b35d1.5c8fec",
        "name": "Register Info",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Välj i listan vilket register som ska hämtas data från.<br>\n    Register märkta (R/W) är även skrivbara.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 987,
        "y": 693,
        "wires": [
            []
        ]
    },
    {
        "id": "a95559b9.c53f88",
        "type": "ui_template",
        "z": "7e884fc9.b6c45",
        "group": "f481a5f0.f9f1c8",
        "name": "Token text",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "På den här sidan kan du hämta ditt Tibber token.<br>\nhttps://developer.tibber.com/settings/accesstoken<br>\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 630,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d3e7b620.1b5828",
        "type": "ui_list",
        "z": "ade2c7a9.e97ba8",
        "group": "4f8b35d1.5c8fec",
        "name": "",
        "order": 3,
        "width": "12",
        "height": "12",
        "lineType": "three",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 1027,
        "y": 609,
        "wires": [
            [
                "ad071f9c.747ff",
                "b69122fd.049d2"
            ]
        ]
    },
    {
        "id": "dd86ab18.aab248",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1160,
        "y": 380,
        "wires": []
    },
    {
        "id": "ef9345be.279118",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1160,
        "y": 420,
        "wires": []
    },
    {
        "id": "5c99e36c.80d42c",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 610,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7500426e.4f401c",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "Pump manuell",
        "label": "Pump: ",
        "tooltip": "Vid problem med autodetektering, skriv in pumpens modell manuellt. T.ex. \"F1255\"",
        "group": "4a7ab836.172ae8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "pump",
        "x": 840,
        "y": 480,
        "wires": [
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "3cf2e9a5.ebb2c6",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pump",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "7500426e.4f401c"
            ]
        ]
    },
    {
        "id": "d7caab2f.99b4c8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "a95559b9.c53f88"
            ]
        ]
    },
    {
        "id": "511d1c67.799404",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "d814a7db.5cdc38",
        "name": "Uppdatering Info",
        "order": 6,
        "width": 12,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "5e479433.4ccbfc",
        "type": "trigger",
        "z": "dedc2653.57a3d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "60",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "MQTT Sensor Timeout",
        "x": 460,
        "y": 960,
        "wires": [
            [
                "dfb4deae.88a6c"
            ]
        ]
    },
    {
        "id": "dfb4deae.88a6c",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(msg.payload===false) {\n    if(config.plugins.indoor.mqttsensor_value!==undefined && config.plugins.indoor.mqttsensor_value===true) {\n        node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"MQTT Givare har tappat kontakten.\"})\n    }\n    global.set('data.mqttSensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "7532efb4.f5af6",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 1880,
        "wires": []
    },
    {
        "id": "4274466a.ee8098",
        "type": "catch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 1880,
        "wires": [
            [
                "7532efb4.f5af6",
                "9dad4fe.4e1f1b"
            ]
        ]
    },
    {
        "id": "9dad4fe.4e1f1b",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 420,
        "y": 1920,
        "wires": []
    },
    {
        "id": "4af779bd.44f368",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1320,
        "y": 1880,
        "wires": [
            [
                "5b467146.2e43a"
            ]
        ]
    },
    {
        "id": "6df53909.ff0088",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Återställ Backup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "restore",
        "x": 160,
        "y": 2100,
        "wires": [
            [
                "9a8d676.7f37898"
            ]
        ]
    },
    {
        "id": "9a8d676.7f37898",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 428,
        "y": 2105,
        "wires": [
            [],
            [],
            [
                "cf7a9956.7f0d68"
            ]
        ]
    },
    {
        "id": "cf7a9956.7f0d68",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 2120,
        "wires": [
            [
                "557e5528.03745c"
            ]
        ]
    },
    {
        "id": "557e5528.03745c",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "cp /home/pi/.node-red/flows_saved.bak /home/pi/.node-red/flows.json && cp /home/pi/.nibepi/heatpump_saved.js /home/pi/.nibepi/heatpump.js",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Återställ backup",
        "x": 840,
        "y": 2120,
        "wires": [
            [],
            [],
            [
                "ba009915.da27e8"
            ]
        ]
    },
    {
        "id": "ba009915.da27e8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "if(msg.payload.code===0) {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Backup återställd! Startar om...\"})\n    node.send({payload:true});\n} else {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Fel. Backup inte återställd.\"})\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 2120,
        "wires": [
            [
                "4af779bd.44f368"
            ]
        ]
    },
    {
        "id": "73b40cb7.7af494",
        "type": "ui_template",
        "z": "dedc2653.57a3d8",
        "group": "a2cfe148.70708",
        "name": "MQTT Givare info",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "Välj nedan vilka givare du vill använda dig av att reglera efter<br>\nVäljer du flera givare så kommer ett medelvärde tas från dem<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 970,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "d7bb706.040b29",
        "type": "inject",
        "z": "dedc2653.57a3d8",
        "name": "Uppstart",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "5e479433.4ccbfc"
            ]
        ]
    },
    {
        "id": "fc1f6629.6bf228",
        "type": "ui_slider",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Lufthastighet Låg Börvärde",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 4,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "setpoint_low",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 750,
        "y": 728,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "89473eb3.9e903",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 423,
        "y": 462,
        "wires": [
            [
                "fc1f6629.6bf228"
            ]
        ]
    },
    {
        "id": "31d982bd.6bd72e",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Låg ventilation vid kompressorstopp",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "setpoint_low_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 756,
        "y": 623,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "48a2d02a.cd62e",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_low_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 416,
        "y": 504,
        "wires": [
            [
                "31d982bd.6bd72e",
                "9c7e2635.ed2368"
            ]
        ]
    },
    {
        "id": "9c7e2635.ed2368",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 367,
        "y": 763,
        "wires": [
            [
                "fc1f6629.6bf228"
            ]
        ]
    },
    {
        "id": "68830a79.407d64",
        "type": "inject",
        "z": "a7a0164d.f58e58",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 134,
        "y": 133,
        "wires": [
            [
                "7e0ee3de.6e139c"
            ]
        ]
    },
    {
        "id": "7e0ee3de.6e139c",
        "type": "subflow:64327e50.8f365",
        "z": "a7a0164d.f58e58",
        "name": "Skrivläge",
        "x": 270,
        "y": 133,
        "wires": []
    },
    {
        "id": "bf99319c.d4c2c",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.co2_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 861,
        "wires": [
            [
                "1bc9e3e0.e20b0c"
            ]
        ]
    },
    {
        "id": "1bc9e3e0.e20b0c",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "CO2 Givare",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "co2_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 777,
        "y": 861,
        "wires": [
            [
                "d7e520e7.935bf",
                "3fee6d90.390fd2"
            ]
        ]
    },
    {
        "id": "d7e520e7.935bf",
        "type": "trigger",
        "z": "a7a0164d.f58e58",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "60",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "MQTT Sensor Timeout",
        "x": 514,
        "y": 1144,
        "wires": [
            [
                "51868d3c.02c9b4"
            ]
        ]
    },
    {
        "id": "51868d3c.02c9b4",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(msg.payload===false) {\n    if(config.plugins.airflow.co2_sensor!==undefined && config.plugins.airflow.co2_sensor===true) {\n        node.error('Lufthastighet',{topic:\"Lufthastighet\",payload:\"CO2 MQTT Givare har tappat kontakten.\"})\n    }\n    global.set('data.co2_sensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 704,
        "y": 1144,
        "wires": [
            []
        ]
    },
    {
        "id": "4957499f.1ff778",
        "type": "inject",
        "z": "a7a0164d.f58e58",
        "name": "Uppstart",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 254,
        "y": 1164,
        "wires": [
            [
                "d7e520e7.935bf"
            ]
        ]
    },
    {
        "id": "bcb19949.03f188",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "nibe/plugins/airflow/co2_sensor",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "790e2108.5c427",
                "46556d68.213964",
                "d7e520e7.935bf"
            ]
        ]
    },
    {
        "id": "46556d68.213964",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.co2_active!==undefined && config.plugins.airflow.co2_active===true) {\n    global.set('data.co2_sensor',String(msg.payload))\n    node.send({topic:'CO2 Värde',payload:msg.payload});\n    node.send({topic:'Gränsvärde',payload:800});\n} else {\n    global.set('data.co2_sensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 575,
        "y": 1078,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "790e2108.5c427",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "MQTT Sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 500,
        "y": 980,
        "wires": []
    },
    {
        "id": "190f986d.7221f8",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.co2_topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 903,
        "wires": [
            [
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "e15df6d6.6809a8",
        "type": "ui_text_input",
        "z": "a7a0164d.f58e58",
        "name": "MQTT Topic text",
        "label": "CO2 MQTT Topic",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "co2_topic",
        "x": 787,
        "y": 910,
        "wires": [
            [
                "3fee6d90.390fd2"
            ]
        ]
    },
    {
        "id": "3fee6d90.390fd2",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.airflow===undefined) {\n    config.plugins.airflow = {};\n}\n    config.plugins.airflow[msg.topic] = msg.payload;\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 953,
        "y": 882,
        "wires": [
            [
                "35eec4bf.33610c"
            ]
        ]
    },
    {
        "id": "56c8f9cb.aeaef8",
        "type": "catch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 858,
        "y": 98,
        "wires": [
            [
                "de5f6812.a35428",
                "81d723c0.768a"
            ]
        ]
    },
    {
        "id": "81d723c0.768a",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 998,
        "y": 158,
        "wires": []
    },
    {
        "id": "de5f6812.a35428",
        "type": "ui_toast",
        "z": "a7a0164d.f58e58",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1108,
        "y": 98,
        "wires": []
    },
    {
        "id": "35eec4bf.33610c",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1114,
        "y": 882,
        "wires": []
    },
    {
        "id": "449c1f6b.86b58",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM225.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3206,
        "wires": [
            [
                "d1fc039e.ecb4d"
            ]
        ]
    },
    {
        "id": "d1fc039e.ecb4d",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM225.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3206,
        "wires": [
            [
                "fa90672f.41a5c8"
            ]
        ]
    },
    {
        "id": "327d2fe7.fd3e9",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM225.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3206,
        "wires": [
            [
                "317c9840.35c308"
            ]
        ]
    },
    {
        "id": "f8fe2e8f.adf41",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 126,
        "y": 3038,
        "wires": [
            [
                "92696de5.62776"
            ]
        ]
    },
    {
        "id": "317c9840.35c308",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3206,
        "wires": [
            [
                "50ca2446.e9453c"
            ],
            [
                "fa90672f.41a5c8"
            ]
        ]
    },
    {
        "id": "9e98a1eb.868",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM310.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3262,
        "wires": [
            [
                "3748f542.fb33ca"
            ]
        ]
    },
    {
        "id": "3748f542.fb33ca",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM310.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3262,
        "wires": [
            [
                "f098085f.a53998"
            ]
        ]
    },
    {
        "id": "fa90672f.41a5c8",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM310.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3262,
        "wires": [
            [
                "c6a3d68e.38c868"
            ]
        ]
    },
    {
        "id": "c6a3d68e.38c868",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3262,
        "wires": [
            [
                "f2672897.c90058"
            ],
            [
                "f098085f.a53998"
            ]
        ]
    },
    {
        "id": "4583cd7f.2cc774",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM320.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3318,
        "wires": [
            [
                "64cd8a3b.49a3a4"
            ]
        ]
    },
    {
        "id": "64cd8a3b.49a3a4",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM320.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3318,
        "wires": [
            [
                "c77544a5.816a88"
            ]
        ]
    },
    {
        "id": "f098085f.a53998",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM320.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3318,
        "wires": [
            [
                "4a44e145.a5326"
            ]
        ]
    },
    {
        "id": "4a44e145.a5326",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3318,
        "wires": [
            [
                "bf1fa004.159ea"
            ],
            [
                "c77544a5.816a88"
            ]
        ]
    },
    {
        "id": "3757a6cc.3938ea",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM325.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3367,
        "wires": [
            [
                "1d8c3cc2.20ff53"
            ]
        ]
    },
    {
        "id": "1d8c3cc2.20ff53",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM325.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3367,
        "wires": [
            [
                "835b62fb.95c2c"
            ]
        ]
    },
    {
        "id": "c77544a5.816a88",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM325.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3367,
        "wires": [
            [
                "e5d57ca5.fcde6"
            ]
        ]
    },
    {
        "id": "e5d57ca5.fcde6",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3367,
        "wires": [
            [
                "10c8c78d.98c0f8"
            ],
            [
                "835b62fb.95c2c"
            ]
        ]
    },
    {
        "id": "a600b667.6373c8",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM500.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3423,
        "wires": [
            [
                "4d3d1e1e.84ad1"
            ]
        ]
    },
    {
        "id": "4d3d1e1e.84ad1",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM500.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3423,
        "wires": [
            [
                "c010b83.76a7148"
            ]
        ]
    },
    {
        "id": "835b62fb.95c2c",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM500.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3423,
        "wires": [
            [
                "8dd31ae2.1a4918"
            ]
        ]
    },
    {
        "id": "8dd31ae2.1a4918",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3423,
        "wires": [
            [
                "b2ff3e21.fc829"
            ],
            [
                "c010b83.76a7148"
            ]
        ]
    },
    {
        "id": "14473112.dec0ef",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.plugins.airflow===undefined || config.plugins.airflow.active===false) {\n    return;\n}\n\nif(msg.topic==(config.defaultTopic+\"40050\")) {\nvar setpoint = config.plugins.airflow.setpoint;\nvar data = global.get('data');\nif(data[40050]===undefined || data[47265]===undefined || data[40026]===undefined || data[45001]===undefined) { return; }\nvar flow = Number(data[40050]);\nvar alarm = data[45001];\nvar fan = Number(data[47265]);\nvar temp = Number(data[40026]);\nif(alarm==\"Avfrostning\") {\n    // Dont regulate when defrosting\n    return;\n} else if(temp<0) {\n    // Dont regulate when the vented air is below 0\n    return;\n}\nif(flow>(setpoint+10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan-1});\n} else if(flow<(setpoint-10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan+1});\n} else {\n    // Normal flow\n}\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 203,
        "wires": [
            [
                "4e19756d.216fec",
                "ec69fce1.46a63"
            ]
        ]
    },
    {
        "id": "ec69fce1.46a63",
        "type": "mqtt out",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 569,
        "y": 203,
        "wires": []
    },
    {
        "id": "4e19756d.216fec",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 589,
        "y": 154,
        "wires": []
    },
    {
        "id": "27cb130c.4fcc3c",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 233,
        "y": 161,
        "wires": [
            [
                "14473112.dec0ef",
                "6c61de0b.fab73"
            ]
        ]
    },
    {
        "id": "6c61de0b.fab73",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 428,
        "y": 105,
        "wires": []
    },
    {
        "id": "9303e7b1.bf1b08",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 124,
        "y": 301,
        "wires": [
            [
                "908432e0.3c65b"
            ]
        ]
    },
    {
        "id": "908432e0.3c65b",
        "type": "json",
        "z": "7f0122f1.22d60c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 261,
        "y": 301,
        "wires": [
            [
                "87fc4b09.6f42b8",
                "28aa772b.3b9a28",
                "847df127.8f8ff"
            ]
        ]
    },
    {
        "id": "87fc4b09.6f42b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 417,
        "y": 301,
        "wires": [
            [
                "debdc00d.b0e16",
                "5d26f844.bb1f88",
                "578093b1.8c1c6c",
                "1065652d.bc493b"
            ]
        ]
    },
    {
        "id": "65e982e5.bdf7cc",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 842,
        "y": 301,
        "wires": [
            [
                "ea189810.302938"
            ]
        ]
    },
    {
        "id": "ea189810.302938",
        "type": "mqtt out",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 982,
        "y": 301,
        "wires": []
    },
    {
        "id": "578093b1.8c1c6c",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 641,
        "y": 371,
        "wires": [
            [
                "c3b73c1b.1c458"
            ]
        ]
    },
    {
        "id": "28aa772b.3b9a28",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 379,
        "y": 357,
        "wires": [
            [
                "c3b73c1b.1c458",
                "c81f068f.f086e8"
            ]
        ]
    },
    {
        "id": "5d26f844.bb1f88",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.active!==true) return;\nif(msg.topic==config.defaultTopic+\"47265\") {\n    node.send([null,null,{payload:msg.payload}]);\n}\nif(msg.topic==\"nibe/config\" || msg.topic==config.defaultTopic+\"40050\" || msg.topic==\"airflow\") {\n    if(config.plugins.airflow===undefined) {\n        config.plugins.airflow = {};\n    }\n    var flow = data[40050]||getData(40050);\n    node.send([null,{payload:flow}]);\n    if(config.plugins.airflow.active===true && config.plugins.airflow.setpoint===0) {\n    config.plugins.airflow.setpoint = Number(flow);\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"airflow\") {\n    config.plugins.airflow.setpoint = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n}\n} else if(msg.topic==config.defaultTopic+\"40026\") {\n    node.send([null,null,null,{topic:\"Avluftstemperatur\",payload:msg.payload}])\n} else if(msg.topic==config.defaultTopic+\"43136\") {\n    node.send([null,null,null,{topic:\"Kompressorfrekvens\",payload:msg.payload}])\n}\n\nfunction getData(data) {\n    msg.topic = config.defaultTopic+data+\"/get\";\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 1017,
        "y": 399,
        "wires": [
            [
                "ea189810.302938"
            ],
            [
                "2e810c67.e97c74",
                "c1df6445.e297b8"
            ],
            [
                "a644dc97.3ef01",
                "4e1c77c6.65d9b8"
            ],
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "4ad1047f.70927c",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 863,
        "y": 399,
        "wires": [
            [
                "5d26f844.bb1f88"
            ]
        ]
    },
    {
        "id": "847df127.8f8ff",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 417,
        "y": 259,
        "wires": [
            [
                "8e179081.e7edc",
                "6d1abecf.749a3"
            ]
        ]
    },
    {
        "id": "8e179081.e7edc",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 606,
        "y": 259,
        "wires": [
            [
                "debdc00d.b0e16",
                "c3b73c1b.1c458"
            ]
        ]
    },
    {
        "id": "6d1abecf.749a3",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 568,
        "y": 434,
        "wires": []
    },
    {
        "id": "c1df6445.e297b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ärvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 537,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "4e1c77c6.65d9b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Fläkthastighet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 577,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "c81f068f.f086e8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Börvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 497,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "1065652d.bc493b",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 759,
        "y": 497,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "debdc00d.b0e16",
        "type": "ui_switch",
        "z": "7f0122f1.22d60c",
        "name": "",
        "label": "Automatisk lufthastighet",
        "tooltip": "",
        "group": "1409f0ed.f2d6cf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "airflow",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 650,
        "y": 301,
        "wires": [
            [
                "65e982e5.bdf7cc"
            ]
        ]
    },
    {
        "id": "c3b73c1b.1c458",
        "type": "ui_slider",
        "z": "7f0122f1.22d60c",
        "name": "",
        "label": "Lufthastighet börvärde",
        "tooltip": "",
        "group": "1409f0ed.f2d6cf",
        "order": 2,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "airflow",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 850,
        "y": 343,
        "wires": [
            [
                "5d26f844.bb1f88"
            ]
        ]
    },
    {
        "id": "2e810c67.e97c74",
        "type": "ui_text",
        "z": "7f0122f1.22d60c",
        "group": "1409f0ed.f2d6cf",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Ärvärde",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1219,
        "y": 357,
        "wires": []
    },
    {
        "id": "a644dc97.3ef01",
        "type": "ui_text",
        "z": "7f0122f1.22d60c",
        "group": "1409f0ed.f2d6cf",
        "order": 4,
        "width": "4",
        "height": "1",
        "name": "",
        "label": "Fläkthastighet",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "x": 1219,
        "y": 437,
        "wires": []
    },
    {
        "id": "16f5c53d.49ad3b",
        "type": "ui_chart",
        "z": "7f0122f1.22d60c",
        "name": "",
        "group": "1409f0ed.f2d6cf",
        "order": 5,
        "width": "0",
        "height": "0",
        "label": "Lufthastighet",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1209,
        "y": 537,
        "wires": [
            []
        ]
    },
    {
        "id": "92696de5.62776",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 372,
        "y": 3038,
        "wires": [
            [],
            [],
            [
                "f174a918.36ccd8"
            ]
        ]
    },
    {
        "id": "f174a918.36ccd8",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 582,
        "y": 3038,
        "wires": [
            [
                "aadd6802.49ef28"
            ]
        ]
    },
    {
        "id": "c010b83.76a7148",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 764,
        "y": 3486,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "50ca2446.e9453c",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3206,
        "wires": [
            [
                "449c1f6b.86b58"
            ]
        ]
    },
    {
        "id": "f2672897.c90058",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3262,
        "wires": [
            [
                "9e98a1eb.868"
            ]
        ]
    },
    {
        "id": "bf1fa004.159ea",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3318,
        "wires": [
            [
                "4583cd7f.2cc774"
            ]
        ]
    },
    {
        "id": "10c8c78d.98c0f8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3367,
        "wires": [
            [
                "3757a6cc.3938ea"
            ]
        ]
    },
    {
        "id": "b2ff3e21.fc829",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3423,
        "wires": [
            [
                "a600b667.6373c8"
            ]
        ]
    },
    {
        "id": "4a4c6a1b.17abe4",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/F1355.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3150,
        "wires": [
            [
                "9285b70c.d765d8"
            ]
        ]
    },
    {
        "id": "9285b70c.d765d8",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1355.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1155,
        "y": 3150,
        "wires": [
            [
                "327d2fe7.fd3e9"
            ]
        ]
    },
    {
        "id": "3d801bcb.55d514",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1355.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 315,
        "y": 3150,
        "wires": [
            [
                "731eb5b8.c37f2c"
            ]
        ]
    },
    {
        "id": "731eb5b8.c37f2c",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3150,
        "wires": [
            [
                "9689b3b0.97eb7"
            ],
            [
                "327d2fe7.fd3e9"
            ]
        ]
    },
    {
        "id": "9689b3b0.97eb7",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3150,
        "wires": [
            [
                "4a4c6a1b.17abe4"
            ]
        ]
    },
    {
        "id": "2f261ed0.bfc192",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/F1345.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3094,
        "wires": [
            [
                "850145b6.865e88"
            ]
        ]
    },
    {
        "id": "850145b6.865e88",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1345.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1155,
        "y": 3094,
        "wires": [
            [
                "3d801bcb.55d514"
            ]
        ]
    },
    {
        "id": "aadd6802.49ef28",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1345.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 315,
        "y": 3094,
        "wires": [
            [
                "2cf50207.257bde"
            ]
        ]
    },
    {
        "id": "2cf50207.257bde",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3094,
        "wires": [
            [
                "240c5145.24e45e"
            ],
            [
                "3d801bcb.55d514"
            ]
        ]
    },
    {
        "id": "240c5145.24e45e",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3094,
        "wires": [
            [
                "2f261ed0.bfc192"
            ]
        ]
    },
    {
        "id": "70b95995.bde3e8",
        "type": "nibe-output",
        "z": "a640aab2.a9f768",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 532,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a2f044b.faceab8",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "removeRegister",
        "payload": "40032",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 205,
        "y": 140,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "39b0fc16.7de5c4",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "let data = global.get('data')||[];\nif(msg.raw!==undefined) {\n    let index = data.findIndex(n => n.register == msg.raw.register);\n    if(index!==-1) {\n        data[index] = msg.raw;\n    } else {\n        data.push(msg.raw);\n    }\n    global.set('data',data)\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 267,
        "y": 112,
        "wires": [
            [
                "9e97fa96.89ec78"
            ]
        ]
    },
    {
        "id": "9e97fa96.89ec78",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 400,
        "y": 112,
        "wires": []
    },
    {
        "id": "c29f08ae.ec2588",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Check Heatoffset",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nvar indoorSet = global.get('indoorSet')||0;\nvar priceSet = global.get('priceSet')||0;\nvar weatherSet = global.get('weatherSet')||0;\nvar heatOffset = msg.curveadjust;\nif(heatOffset===undefined) return;\nheatOffset = Number(heatOffset);\nvar dataSet = (indoorSet+priceSet+weatherSet+0.5);\nif(heatOffset!==(dataSet)) {\n    if(dataSet>10) { dataSet = 10; }\n    if(dataSet<-10) { dataSet = -10; }\n    if(dataSet>(heatOffset+0.75)) {\n        node.send({payload:heatOffset+1});\n    } else if(dataSet<(heatOffset-0.75)) {\n        node.send({payload:heatOffset-1});\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 475,
        "y": 175,
        "wires": [
            [
                "bc36a442.1154d8"
            ]
        ]
    },
    {
        "id": "9ce049af.4ea4c8",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "",
        "add": false,
        "x": 112,
        "y": 112,
        "wires": [
            [],
            [
                "39b0fc16.7de5c4"
            ]
        ]
    },
    {
        "id": "bc36a442.1154d8",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "curveadjust",
        "x": 686,
        "y": 175,
        "wires": [
            []
        ]
    },
    {
        "id": "644d6fea.a1d07",
        "type": "nibe-request",
        "z": "a640aab2.a9f768",
        "server": "844659a2.8d8508",
        "name": "44908",
        "x": 512,
        "y": 602,
        "wires": [
            [],
            [
                "46cfe380.7e79cc"
            ]
        ]
    },
    {
        "id": "7de1e17f.0fe74",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Request data",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 518,
        "y": 553,
        "wires": [
            [
                "644d6fea.a1d07"
            ]
        ]
    },
    {
        "id": "46cfe380.7e79cc",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "Requested data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 514,
        "y": 700,
        "wires": []
    },
    {
        "id": "741d3cf7.e17584",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "getConfig",
        "payload": "true",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 175,
        "y": 56,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "da854f32.84c7f",
        "type": "inject",
        "z": "df0dd648.98daa8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 91,
        "y": 43,
        "wires": [
            [
                "8ab34ba6.4ee288"
            ]
        ]
    },
    {
        "id": "8ab34ba6.4ee288",
        "type": "subflow:64327e50.8f365",
        "z": "df0dd648.98daa8",
        "name": "Skrivläge",
        "env": [],
        "x": 227,
        "y": 43,
        "wires": []
    },
    {
        "id": "6b181179.f7cdf",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "",
        "func": "var config = global.get('config');\nvar windSet = global.get('windSet');\nif(config===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar config fil.\"})\n    return;\n}\nvar hours = (config.home.hours-1);\nvar sunrise = toTimestamp(msg.astro.sunrise);\nvar sunset = toTimestamp(msg.astro.sunset);\n\nvar timeNow = Number((Date.now()/1000).toFixed());\nvar time = Number((Date.now()/1000).toFixed())+(config.home.hours*3600);\nlet sun;\nif(time>sunrise && time<sunset) {\n    sun = true;\n} else {\n    sun = false;\n}\nvar temp = msg.payload.timeSeries[hours].parameters.find(temp => temp.name == \"t\");\nvar tempNow = msg.payload.timeSeries[0].parameters.find(tempNow => tempNow.name == \"t\");\nvar weather = msg.payload.timeSeries[hours].parameters.find(weather => weather.name == \"Wsymb2\");\n\nvar tempPredicted;\nif (temp!==undefined) {\ntempPredicted = temp.values[0];\n}\nvar weatherPredicted;\nif (weather!==undefined) {\nweatherPredicted = Number(weather.values[0]);\n}\nvar tempOutside = msg.outside;\nvar tempInside ;\nvar heatCurve = msg.heatcurve;\nvar setOffset;\nvar sunFactor = 0;\nif(tempOutside===undefined || heatCurve===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar värde från utomhusgivaren eller värmekurvan.\"});\n    return;\n}\nif(weatherPredicted===1 && sun===true) {\n    sunFactor = config.weather.clear;\n} else if(weatherPredicted===2 && sun===true) {\n    sunFactor = config.weather.mostly_clear;\n} else if(weatherPredicted===3 && sun===true) {\n    sunFactor = config.weather.half_clear;\n}\n// Test prognosjustering\n\nif(windSet!==undefined) {\n    tempPredicted = windSet;\n}\ntempPredicted = Number(((tempOutside-tempNow.values[0])+tempPredicted).toFixed(2));\nif(config.weather.sun_enable===undefined || config.weather.sun_enable===false) sunFactor = 0;\nsetOffset = Number(((tempOutside-tempPredicted-sunFactor)*(heatCurve*1.2/10)/((heatCurve/10)+1)).toFixed(2));\n\nglobal.set('weatherSet',Number(setOffset));\n\nnode.send({topic:\"Utomhustemp\",payload:tempOutside});\nnode.send({topic:\"Inomhustemp\",payload:tempInside});\nnode.send({topic:\"Prognos nu\",payload:tempNow.values[0]});\n\nnode.send({topic:\"Prognos (Nu) \"+config.home.hours+\"h\",payload:tempPredicted});\nnode.send([{topic:\"Prognos \"+config.home.hours+\"h\",payload:tempPredicted,timestamp:Date.now()+(config.home.hours*3600000)},{topic:\"SMHI Utomhustemp\",payload:tempPredicted,delay:(config.home.hours*3600000)}]);\nnode.send({topic:\"Kurvjustering\",payload:setOffset});\n\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number((datum/1000).toFixed());\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1079,
        "y": 938,
        "wires": [
            []
        ]
    },
    {
        "id": "5b087f5d.586d1",
        "type": "ui_chart",
        "z": "df0dd648.98daa8",
        "name": "Prognostemperatur S1",
        "group": "7e910a08.c6c984",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1010,
        "y": 231,
        "wires": [
            []
        ]
    },
    {
        "id": "f31aa5c9.c6b598",
        "type": "ui_button",
        "z": "df0dd648.98daa8",
        "name": "Rensa graf S1",
        "group": "7e910a08.c6c984",
        "order": 6,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 787,
        "y": 231,
        "wires": [
            [
                "5b087f5d.586d1"
            ]
        ]
    },
    {
        "id": "415ceb72.bb9114",
        "type": "ui_toast",
        "z": "df0dd648.98daa8",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 720,
        "y": 42,
        "wires": []
    },
    {
        "id": "3e9a73d2.df1c3c",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Norr ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_n",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1002,
        "y": 735,
        "wires": [
            [
                "e2a1ad3d.f8237"
            ]
        ]
    },
    {
        "id": "e0568cfa.ce37d",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Söder",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_s",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1003,
        "y": 784,
        "wires": [
            [
                "21ec51aa.8d21ce"
            ]
        ]
    },
    {
        "id": "c0ca403c.4cd65",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Väst ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_w",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1003,
        "y": 833,
        "wires": [
            [
                "7ea5d6a2.6b6f78"
            ]
        ]
    },
    {
        "id": "de90adfc.3a51d",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Öst  ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_e",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1003,
        "y": 882,
        "wires": [
            [
                "66f72656.28acb8"
            ]
        ]
    },
    {
        "id": "73f9e0db.d20a2",
        "type": "ui_chart",
        "z": "df0dd648.98daa8",
        "name": "",
        "group": "455ba55e.e91e8c",
        "order": 5,
        "width": "0",
        "height": "0",
        "label": "Vindprognos",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 910,
        "y": 294,
        "wires": [
            []
        ]
    },
    {
        "id": "2050771b.5288a8",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar konfiguration\"})\n    return;\n}\nvar hours = (config.home.hours-1);\nvar array = msg.payload.timeSeries;\n\nvar tempOutside = msg.outside;\nvar tempInside = msg.inside;\nvar heatCurve = msg.heatcurve;\nvar setOffset;\nif(tempOutside===undefined || heatCurve===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar värde från utomhusgivaren eller värmekurvan.\"});\n    return;\n}\n\nvar wind_speed_arr = [];\nvar wind_gust_arr = [];\nvar temp_arr = [];\nvar feel_arr = [];\nvar direction_arr = [];\nfor( var o = 0; o < 49; o++){\n    let timestamp = toTimestamp(array[o].validTime)\n    let topic = \"Vind\"\n    let speed = array[o].parameters.find(speed => speed.name == \"ws\");\n    let dir = array[o].parameters.find(dir => dir.name == \"wd\");\n    let gust = array[o].parameters.find(gust => gust.name == \"gust\");\n    let temp = array[o].parameters.find(temp => temp.name == \"t\");\n    speed = speed.values[0];\n    gust = gust.values[0];\n    temp = temp.values[0];\n    dir = dir.values[0];\n    let direction = 0;\n    let factor = 1;\n    if(((1 <= dir) && (dir <= 45)) || ((315 <= dir) && (dir <= 360))) {\n        direction = -1;\n        factor = config.weather.wind_factor_n;\n    } else if(136 <= dir && dir <= 225) {\n        direction = -2;\n        factor = config.weather.wind_factor_s;\n    } else if(226 <= dir && dir <= 314) {\n        direction = -3;\n        factor = config.weather.wind_factor_w;\n    } else if(46 <= dir && dir <= 135) {\n        direction = -4;\n        factor = config.weather.wind_factor_e;\n    }\n    let v = Math.pow(speed, 0.16);\n    feel = Number((13.12+(0.6215*temp)-(13.956*v)+(0.48669*temp*v)).toFixed(2));\n    if(feel>0) {\n        feel = feel/factor;\n        if(feel>temp) {\n            feel = temp;\n        }\n    } else {\n        feel = feel*factor\n        if(feel>temp) {\n            feel = temp;\n        }\n    }\n    if(speed<2 || temp>10 || speed>35 || direction===0) feel = temp;\n    wind_speed_arr.push({x:timestamp,y:Number(speed)});\n    wind_gust_arr.push({x:timestamp,y:Number(gust)});\n    temp_arr.push({x:timestamp,y:Number(temp)});\n    feel_arr.push({x:timestamp,y:feel});\n    direction_arr.push({x:timestamp,y:direction});\n    if(config.weather.wind_enable!==undefined && config.weather.wind_enable===true) {\n        if(o===hours) {\n            global.set('windSet',feel);\n        }\n    } else {\n        global.set('windSet',undefined);\n    }\n}\n//var test = wind_speed_arr.sort(function(a,b){return a.x - b.y});\nwind_speed_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nwind_gust_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\ntemp_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nfeel_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\ndirection_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nvar sendArray = [\n    {\n        \"series\":[\"Vindhastighet\",\"Byvind\",\"Utomhustemp\",\"Köldeffekt\",\"Riktning\"],\n        \"data\":[wind_speed_arr,wind_gust_arr,temp_arr,feel_arr,direction_arr],\n        \"labels\":[\"Vindhastighet\",\"Byvind\",\"Utomhustemp\",\"Köldeffekt\",\"Riktning\"]\n    }];\nnode.send({topic:\"Vindhastighet\",payload:sendArray});\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number((datum).toFixed());\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1219,
        "y": 938,
        "wires": [
            []
        ]
    },
    {
        "id": "d9645915.c269b8",
        "type": "ui_button",
        "z": "df0dd648.98daa8",
        "name": "Rensa graf Vind",
        "group": "455ba55e.e91e8c",
        "order": 10,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 689,
        "y": 287,
        "wires": [
            [
                "73f9e0db.d20a2"
            ]
        ]
    },
    {
        "id": "a1689e47.01c06",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "455ba55e.e91e8c",
        "name": "SMHI Riktning info",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "Riktning: Norr: -1, Söder: -2, Väst: -3, Öst: -4<br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1245,
        "y": 336,
        "wires": [
            []
        ]
    },
    {
        "id": "58b34d6c.bba0c4",
        "type": "nibe-input",
        "z": "a640aab2.a9f768",
        "server": "844659a2.8d8508",
        "name": "",
        "add": false,
        "x": 165,
        "y": 196,
        "wires": [
            [
                "af00391f.20e0c8",
                "d6658891.e52a68",
                "55a07470.e2632c"
            ],
            []
        ]
    },
    {
        "id": "af00391f.20e0c8",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "Config",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 316,
        "y": 196,
        "wires": []
    },
    {
        "id": "c1619725.feea28",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "addRegister",
        "payload": "40014",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 195,
        "y": 98,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "d8140a37.688338",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 155,
        "y": 462,
        "wires": [
            [
                "c3c30dd0.f6525"
            ]
        ]
    },
    {
        "id": "c3c30dd0.f6525",
        "type": "nibe-output",
        "z": "a640aab2.a9f768",
        "server": "844659a2.8d8508",
        "name": "curveadjust",
        "x": 357,
        "y": 462,
        "wires": [
            [
                "8b76788e.558d58"
            ]
        ]
    },
    {
        "id": "888f8bab.8b3f38",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "44908",
        "payload": "30",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 396,
        "y": 35,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "1d1c593e.bdd0c7",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "MQTT Broker",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 157,
        "y": 224,
        "wires": [
            [
                "68fb54e2.e8cb7c"
            ]
        ]
    },
    {
        "id": "2285dba8.d33464",
        "type": "function",
        "z": "c16a87b4.50f188",
        "name": "",
        "func": "let pluginName = env.get(\"Name\");\nlet functionName = env.get('Function');\nvar plugins = global.get(pluginName)||{};\nplugins[functionName] = msg.payload;\nglobal.set(pluginName,plugins);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 575,
        "y": 98,
        "wires": [
            []
        ]
    },
    {
        "id": "6733fb0a.ca5af4",
        "type": "inject",
        "z": "c16a87b4.50f188",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 679,
        "y": 28,
        "wires": [
            [
                "f085947d.651808"
            ]
        ]
    },
    {
        "id": "f085947d.651808",
        "type": "function",
        "z": "c16a87b4.50f188",
        "name": "",
        "func": "let pluginName = env.get(\"Name\");\nlet functionName = env.get('Function');\nlet plugins = global.get(pluginName);\nif(plugins===undefined) {\n    msg.filename = `nibepi/${pluginName}.json`\n    return msg;\n} else {\n    node.send([null,{payload:plugins[functionName]}])\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 820,
        "y": 28,
        "wires": [
            [
                "bf74430b.4dab4"
            ],
            []
        ]
    },
    {
        "id": "bf74430b.4dab4",
        "type": "file in",
        "z": "c16a87b4.50f188",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 939,
        "y": 28,
        "wires": [
            [
                "1da45367.6fc7ed"
            ]
        ]
    },
    {
        "id": "1da45367.6fc7ed",
        "type": "function",
        "z": "c16a87b4.50f188",
        "name": "",
        "func": "let pluginName = env.get(\"Name\");\nif(JSON.parse(msg.payload)!==undefined) {\n    global.set(pluginName,JSON.parse(msg.payload))\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1086,
        "y": 28,
        "wires": [
            [
                "f085947d.651808"
            ]
        ]
    },
    {
        "id": "3f2df90a.87e2f6",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "MQTT Topic",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "x": 147,
        "y": 322,
        "wires": [
            [
                "5a6f14bc.96beac"
            ]
        ]
    },
    {
        "id": "1dd16422.6e81ec",
        "type": "function",
        "z": "c191a5d.5d76258",
        "name": "",
        "func": "let config = msg.config;\nlet pluginName = env.get(\"Name\");\nif(config===undefined) return;\nif(config[pluginName]===undefined) {config[pluginName] = {}}\nconfig[pluginName][msg.topic] = msg.payload;\nnode.send({payload:config});",
        "outputs": 1,
        "noerr": 0,
        "x": 344,
        "y": 112,
        "wires": [
            [
                "b562cc0e.728b4"
            ]
        ]
    },
    {
        "id": "b562cc0e.728b4",
        "type": "nibe-output",
        "z": "c191a5d.5d76258",
        "server": "844659a2.8d8508",
        "name": "setConfig",
        "x": 529,
        "y": 112,
        "wires": [
            []
        ]
    },
    {
        "id": "eb6f8564.c5a668",
        "type": "nibe-request",
        "z": "c191a5d.5d76258",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 197,
        "y": 77,
        "wires": [
            [
                "1dd16422.6e81ec"
            ],
            []
        ]
    },
    {
        "id": "9110855e.8bfd98",
        "type": "function",
        "z": "c191a5d.5d76258",
        "name": "",
        "func": "    let topic = env.get(\"Function\");\n    let pluginName = env.get(\"Name\");\n    \n    if(topic!==undefined) {\n        if(msg.payload[pluginName]===undefined) {\n            msg.payload[pluginName] = {};\n        }\n        if(msg.payload[pluginName][topic]!==undefined) {\n            node.send({payload:msg.payload[pluginName][topic],topic:\"Input\"});\n            node.send([null,{topic:\"config\",payload:msg.payload}]);\n        }\n    }",
        "outputs": 2,
        "noerr": 0,
        "x": 344,
        "y": 168,
        "wires": [
            [
                "6905e0f5.dd875"
            ],
            [
                "a38b1ef.5259be"
            ]
        ]
    },
    {
        "id": "68fb54e2.e8cb7c",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable",
                "type": "str"
            }
        ],
        "x": 395,
        "y": 224,
        "wires": [
            [
                "1d1c593e.bdd0c7",
                "b4a9d18b.4c69a"
            ],
            []
        ]
    },
    {
        "id": "2b22f2ea.5b3ece",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "topic",
                "type": "str"
            }
        ],
        "x": 496,
        "y": 322,
        "wires": [
            [
                "3f2df90a.87e2f6"
            ],
            []
        ]
    },
    {
        "id": "c559c6e7.c4b388",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Latitud",
        "tooltip": "",
        "group": "a8bf2b6e.6abc18",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lat",
        "x": 820,
        "y": 525,
        "wires": [
            [
                "8b79bac6.370258"
            ]
        ]
    },
    {
        "id": "3698a0bc.b86fc",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Longitud",
        "tooltip": "",
        "group": "a8bf2b6e.6abc18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lon",
        "x": 830,
        "y": 574,
        "wires": [
            [
                "3118479a.5faed8"
            ]
        ]
    },
    {
        "id": "97d47914.109668",
        "type": "comment",
        "z": "b7f67da0.fbf1",
        "name": "Husdata",
        "info": "",
        "x": 711,
        "y": 427,
        "wires": []
    },
    {
        "id": "ef643ddd.c667f",
        "type": "ui_chart",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "a8bf2b6e.6abc18",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Värmeinformation",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1231,
        "y": 833,
        "wires": [
            []
        ]
    },
    {
        "id": "4c38519b.aeeab",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "outside",
        "x": 277,
        "y": 833,
        "wires": [
            [
                "40f570f3.e161b"
            ],
            []
        ]
    },
    {
        "id": "40f570f3.e161b",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "inside",
        "x": 431,
        "y": 833,
        "wires": [
            [
                "d3b6328e.1b609"
            ],
            []
        ]
    },
    {
        "id": "d3b6328e.1b609",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "curveadjust",
        "x": 584,
        "y": 833,
        "wires": [
            [
                "fc8e2b29.3e7da8"
            ],
            []
        ]
    },
    {
        "id": "3e7fe8f9.0f2ab8",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 119,
        "y": 833,
        "wires": [
            [
                "4c38519b.aeeab",
                "d267ee3c.9e4e9"
            ]
        ]
    },
    {
        "id": "c54ce52d.73cd58",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "node.send({timestamp:msg.payload,topic:\"Utomhustemperatur\",payload:msg.outside});\nnode.send({timestamp:msg.payload,topic:\"Kurvjustering\",payload:msg.curveadjust});\nif(msg.inside>-3276) {\n    node.send({timestamp:msg.payload,topic:\"Inomhustemperatur\",payload:msg.inside});\n}\nnode.send({timestamp:msg.payload,topic:\"Börvärde S1\",payload:msg.setpoint_s1});\nnode.send({timestamp:msg.payload,topic:\"Framledning S1\",payload:msg.supply_s1});\nnode.send({timestamp:msg.payload,topic:\"Börvärde S2\",payload:msg.setpoint_s2});\nnode.send({timestamp:msg.payload,topic:\"Framledning S2\",payload:msg.supply_s2});\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1037,
        "y": 833,
        "wires": [
            [
                "ef643ddd.c667f"
            ]
        ]
    },
    {
        "id": "6b8355d0.18512c",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "cpr_tot_kwh",
        "x": 609,
        "y": 1134,
        "wires": [
            [
                "c1d7dd0f.8b712"
            ],
            []
        ]
    },
    {
        "id": "c1d7dd0f.8b712",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "cpr_hw_kwh",
        "x": 770,
        "y": 1134,
        "wires": [
            [
                "d34de900.a6d0d8"
            ],
            []
        ]
    },
    {
        "id": "99ffc02f.7bb77",
        "type": "ui_chart",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "1d61b1b5.3ea93e",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Kompressorförbrukning",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#d20000",
            "#0000ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1139,
        "y": 1127,
        "wires": [
            []
        ]
    },
    {
        "id": "d34de900.a6d0d8",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "if(msg.cpr_tot_kwh!==undefined && msg.cpr_tot_kwh!==0) {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Startsida_Kompressorförbrukning\"]\n            }\n        }\n    node.send([null,null,{payload:hide}]);\n    node.send({topic:\"Värme\",payload:Number((msg.cpr_tot_kwh-msg.cpr_hw_kwh).toFixed(0))});\n    node.send([null,{topic:\"Varmvatten\",payload:Number(msg.cpr_hw_kwh.toFixed(0))}]);\n} else {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Startsida_Kompressorförbrukning\"]\n            }\n        }\n    node.send([null,null,{payload:hide}]);\n}\n",
        "outputs": 3,
        "noerr": 0,
        "x": 918,
        "y": 1134,
        "wires": [
            [
                "99ffc02f.7bb77",
                "a508560f.9d9228"
            ],
            [
                "b7aacf55.4c083",
                "99ffc02f.7bb77"
            ],
            [
                "bbeace10.c8e3d"
            ]
        ]
    },
    {
        "id": "a5330dfd.4dd73",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 918,
        "y": 1092,
        "wires": [
            [
                "99ffc02f.7bb77"
            ]
        ]
    },
    {
        "id": "a508560f.9d9228",
        "type": "ui_text",
        "z": "b7f67da0.fbf1",
        "group": "1d61b1b5.3ea93e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}} kWh",
        "layout": "row-left",
        "x": 1065,
        "y": 1225,
        "wires": []
    },
    {
        "id": "b7aacf55.4c083",
        "type": "ui_text",
        "z": "b7f67da0.fbf1",
        "group": "1d61b1b5.3ea93e",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}} kWh",
        "layout": "row-left",
        "x": 1065,
        "y": 1183,
        "wires": []
    },
    {
        "id": "116b9a89.73baf5",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "",
        "events": "change",
        "x": 130,
        "y": 1134,
        "wires": [
            [
                "67efbfba.ccf4a"
            ]
        ]
    },
    {
        "id": "67efbfba.ccf4a",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Startsida",
        "func": "if(msg.name==\"Startsida\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 277,
        "y": 1134,
        "wires": [
            [
                "1803ad9d.9710a2"
            ]
        ]
    },
    {
        "id": "1803ad9d.9710a2",
        "type": "delay",
        "z": "b7f67da0.fbf1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 437,
        "y": 1134,
        "wires": [
            [
                "6b8355d0.18512c"
            ]
        ]
    },
    {
        "id": "257d3e61.f15db2",
        "type": "ui_text_input",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Klart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "clear",
        "x": 161,
        "y": 630,
        "wires": [
            [
                "bc73fbe5.bdfd48"
            ]
        ]
    },
    {
        "id": "a1d2b301.cca65",
        "type": "ui_text_input",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Mestadels klart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "mostly_clear",
        "x": 191,
        "y": 679,
        "wires": [
            [
                "bac43b6a.ac8a48"
            ]
        ]
    },
    {
        "id": "3aa1cf7c.e15ef",
        "type": "ui_text_input",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Halvklart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "half_clear",
        "x": 171,
        "y": 728,
        "wires": [
            [
                "22b888d6.4e5778"
            ]
        ]
    },
    {
        "id": "6e9d06f1.c9ebc8",
        "type": "ui_switch",
        "z": "df0dd648.98daa8",
        "name": "Aktivera Solfaktor",
        "label": "Aktivera",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "sun_enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 188,
        "y": 861,
        "wires": [
            [
                "c84a3009.de52b"
            ]
        ]
    },
    {
        "id": "2aa7811b.637b2e",
        "type": "ui_switch",
        "z": "df0dd648.98daa8",
        "name": "Aktivera Vindfaktor",
        "label": "Aktivera",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "wind_enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 188,
        "y": 812,
        "wires": [
            [
                "3f21aae7.95c2e6"
            ]
        ]
    },
    {
        "id": "fc8e2b29.3e7da8",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "setpoint_s1",
        "x": 742,
        "y": 833,
        "wires": [
            [
                "8dbe30.114691d"
            ],
            []
        ]
    },
    {
        "id": "8dbe30.114691d",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "supply_s1",
        "x": 900,
        "y": 833,
        "wires": [
            [
                "c54ce52d.73cd58"
            ],
            []
        ]
    },
    {
        "id": "a8deecfc.3d34b",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Inomhus börvärde",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 5,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": "5",
        "max": "30",
        "step": "0.5",
        "x": 678,
        "y": 182,
        "wires": [
            [
                "e9e08f7a.850de"
            ]
        ]
    },
    {
        "id": "5e3504d0.fd3ffc",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Utomhustemp blockering",
        "tooltip": "",
        "group": "95b0af9c.89089",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "end",
        "topic": "outdoor_set",
        "min": "8",
        "max": "26",
        "step": "1",
        "x": 677,
        "y": 588,
        "wires": [
            [
                "589ea604.984ac8"
            ]
        ]
    },
    {
        "id": "8a3192fa.29d1d",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Faktor för Inomhusgivare",
        "tooltip": "Ställ in hur mycket inomhus givare ska påverka framledningstemperaturen.",
        "group": "a2cfe148.70708",
        "order": 6,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "inside_factor",
        "min": "0",
        "max": "6",
        "step": "0.1",
        "x": 698,
        "y": 280,
        "wires": [
            [
                "7e1732cb.c8f15c"
            ]
        ]
    },
    {
        "id": "e9e08f7a.850de",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_set_s1",
        "x": 934,
        "y": 182,
        "wires": [
            [
                "a8deecfc.3d34b"
            ]
        ]
    },
    {
        "id": "8df4a3c.164c26",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_set_s1",
        "x": 465,
        "y": 182,
        "wires": [
            [],
            [
                "a8deecfc.3d34b",
                "bc50dbcc.0268c8"
            ]
        ]
    },
    {
        "id": "43a637b0.9a2d78",
        "type": "ui_ui_control",
        "z": "358baec9.c8b902",
        "name": "",
        "events": "all",
        "x": 95,
        "y": 182,
        "wires": [
            [
                "a3bbe686.2f1518"
            ]
        ]
    },
    {
        "id": "a3bbe686.2f1518",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "Inomhusreglering",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Inomhusreglering\") {\n    if(time>timeSaved) {\n        context.set('time',(time+30000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 265,
        "y": 182,
        "wires": [
            [
                "d6176cc8.3e0d3",
                "87a83c1.3cd9fc"
            ]
        ]
    },
    {
        "id": "bc50dbcc.0268c8",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "outdoor_set",
        "x": 427,
        "y": 581,
        "wires": [
            [],
            [
                "5e3504d0.fd3ffc",
                "432a1d50.84fbc4"
            ]
        ]
    },
    {
        "id": "589ea604.984ac8",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "outdoor_set",
        "x": 889,
        "y": 588,
        "wires": [
            [
                "5e3504d0.fd3ffc"
            ]
        ]
    },
    {
        "id": "432a1d50.84fbc4",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_factor_s1",
        "x": 444,
        "y": 287,
        "wires": [
            [],
            [
                "8a3192fa.29d1d"
            ]
        ]
    },
    {
        "id": "7e1732cb.c8f15c",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_factor_s1",
        "x": 927,
        "y": 280,
        "wires": [
            [
                "8a3192fa.29d1d"
            ]
        ]
    },
    {
        "id": "e0c9cbe3.dfbd28",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 155,
        "y": 504,
        "wires": [
            [
                "c3c30dd0.f6525"
            ]
        ]
    },
    {
        "id": "8b79bac6.370258",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "lat",
                "type": "str"
            }
        ],
        "x": 1021,
        "y": 525,
        "wires": [
            [
                "c559c6e7.c4b388"
            ],
            []
        ]
    },
    {
        "id": "3118479a.5faed8",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "lon",
                "type": "str"
            }
        ],
        "x": 1021,
        "y": 574,
        "wires": [
            [
                "3698a0bc.b86fc"
            ],
            []
        ]
    },
    {
        "id": "bc73fbe5.bdfd48",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "clear",
                "type": "str"
            }
        ],
        "x": 405,
        "y": 630,
        "wires": [
            [
                "257d3e61.f15db2"
            ],
            []
        ]
    },
    {
        "id": "bac43b6a.ac8a48",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "mostly_clear",
                "type": "str"
            }
        ],
        "x": 405,
        "y": 679,
        "wires": [
            [
                "a1d2b301.cca65"
            ],
            []
        ]
    },
    {
        "id": "22b888d6.4e5778",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "half_clear",
                "type": "str"
            }
        ],
        "x": 405,
        "y": 728,
        "wires": [
            [
                "3aa1cf7c.e15ef"
            ],
            []
        ]
    },
    {
        "id": "3f21aae7.95c2e6",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "wind_enable",
                "type": "str"
            }
        ],
        "x": 405,
        "y": 812,
        "wires": [
            [
                "2aa7811b.637b2e",
                "9489e9a0.cd1268"
            ],
            []
        ]
    },
    {
        "id": "c84a3009.de52b",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "sun_enable",
                "type": "str"
            }
        ],
        "x": 405,
        "y": 861,
        "wires": [
            [
                "6e9d06f1.c9ebc8",
                "740712c9.2bd05c"
            ],
            []
        ]
    },
    {
        "id": "e2a1ad3d.f8237",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "wind_factor_n",
                "type": "str"
            }
        ],
        "x": 1161,
        "y": 735,
        "wires": [
            [
                "3e9a73d2.df1c3c"
            ],
            []
        ]
    },
    {
        "id": "21ec51aa.8d21ce",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "wind_factor_s",
                "type": "str"
            }
        ],
        "x": 1161,
        "y": 784,
        "wires": [
            [
                "e0568cfa.ce37d"
            ],
            []
        ]
    },
    {
        "id": "7ea5d6a2.6b6f78",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "wind_factor_w",
                "type": "str"
            }
        ],
        "x": 1161,
        "y": 833,
        "wires": [
            [
                "c0ca403c.4cd65"
            ],
            []
        ]
    },
    {
        "id": "66f72656.28acb8",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "wind_factor_e",
                "type": "str"
            }
        ],
        "x": 1161,
        "y": 882,
        "wires": [
            [
                "de90adfc.3a51d"
            ],
            []
        ]
    },
    {
        "id": "4b0bab33.266894",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "",
        "events": "all",
        "x": 270,
        "y": 546,
        "wires": [
            [
                "236045ec.27f9ca"
            ]
        ]
    },
    {
        "id": "236045ec.27f9ca",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Inställningar",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Inställningar\") {\n    if(time>timeSaved) {\n        context.set('time',(time+30000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 434,
        "y": 546,
        "wires": [
            [
                "ed4672a6.2a277",
                "a2146cd8.91aae"
            ]
        ]
    },
    {
        "id": "d6658891.e52a68",
        "type": "function",
        "z": "a640aab2.a9f768",
        "name": "",
        "func": "msg.topic = \"nibe/modbus/\"+msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 511,
        "y": 196,
        "wires": [
            []
        ]
    },
    {
        "id": "73d89e64.225e8",
        "type": "mqtt out",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "nibe/modbus/43140/get",
        "qos": "",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 600,
        "y": 371,
        "wires": []
    },
    {
        "id": "4f103a0d.db66e4",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "21",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 235,
        "y": 371,
        "wires": [
            [
                "73d89e64.225e8"
            ]
        ]
    },
    {
        "id": "40cc3431.77f31c",
        "type": "mqtt in",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "nibe/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 190,
        "y": 252,
        "wires": [
            [
                "d0f3b001.831c2"
            ]
        ]
    },
    {
        "id": "d0f3b001.831c2",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "MQTT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 338,
        "y": 252,
        "wires": []
    },
    {
        "id": "42f911f1.97653",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "Config",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 680,
        "y": 259,
        "wires": []
    },
    {
        "id": "55a07470.e2632c",
        "type": "switch",
        "z": "a640aab2.a9f768",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "43144",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 511,
        "y": 259,
        "wires": [
            [
                "42f911f1.97653"
            ]
        ]
    },
    {
        "id": "5a6f14bc.96beac",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Add /",
        "func": "var value = msg.payload;\nvar check = value.endsWith(\"/\");\nif(check===false) {\n    value = value+\"/\";\n}\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 309,
        "y": 322,
        "wires": [
            [
                "2b22f2ea.5b3ece"
            ]
        ]
    },
    {
        "id": "1af7d9b2.8efdc6",
        "type": "mqtt out",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "nibe/modbus/47011/add",
        "qos": "",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 775,
        "y": 455,
        "wires": []
    },
    {
        "id": "5e3ceed5.20f6e",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "21",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 354,
        "y": 418,
        "wires": [
            [
                "1af7d9b2.8efdc6"
            ]
        ]
    },
    {
        "id": "8b76788e.558d58",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 518,
        "y": 462,
        "wires": []
    },
    {
        "id": "652657bf.594d68",
        "type": "function",
        "z": "a640aab2.a9f768",
        "name": "",
        "func": "var data = msg.payload;\nmsgChecksum = data[data[4]+5];\n        var calcChecksum = 0;\n        for(i = 2; i < (data[4] + 5); i++) {\n            calcChecksum ^= data[i];\n            \n                \n        }\n        /*let out = (data[8] & 0xFF) << 8 | (data[7] & 0xFF);\n                if (out > 32767) {\n                    out = out - 65536;\n                    \n                }*/\n                let out = data[7] | data[8] <<8 | data[9] <<16 | data[10] <<24;\n                    if (data >= 32768) {\n                        data = (data - 65536);\n                    }\n        node.send({payload:out/10})\n        if((msgChecksum==calcChecksum) || (msgChecksum==0xC5 && calcChecksum==0x5C)) {\n            node.send({topic:\"Message\",payload:msgChecksum});\n            node.send({topic:\"Calculated\",payload:calcChecksum});\n        } else {\n            node.send({topic:\"Message\",payload:msgChecksum});\n            node.send({topic:\"Calculated\",payload:calcChecksum});\n        }\n        \n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 826,
        "wires": [
            [
                "68af08f6.268128"
            ]
        ]
    },
    {
        "id": "a4db6aac.020c68",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Org första",
        "topic": "",
        "payload": "[92,0,32,106,6,116,168,150,6,96,255,159]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 193,
        "y": 973,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "68af08f6.268128",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 637,
        "y": 826,
        "wires": []
    },
    {
        "id": "d58dbfcb.2d692",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "[92,0,32,106,7,116,168,199,92,92,255,175,92]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 157,
        "y": 854,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "ba40526f.883da",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "[92,0,32,106,7,116,168,150,92,92,255,254,92]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 162,
        "y": 917,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "d3d4aa53.6a2588",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Org senaste",
        "topic": "",
        "payload": "[92,0,32,106,7,89,156,213,92,92,0,93,92]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 202,
        "y": 1019,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "85135148.db02f",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Org senaste",
        "topic": "",
        "payload": "[92,0,32,106,6,84,156,92,255,77,1,54]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 206,
        "y": 1076,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "203fd198.e6670e",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "7",
        "topic": "",
        "payload": "[92,0,32,104,80,147,156,12,0,255,255,0,0,145,156,73,0,255,255,0,0,143,156,92,0,255,255,0,0,201,175,183,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,193]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 449,
        "y": 1043,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "77cb152e.27c0bc",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "6",
        "topic": "",
        "payload": "[92,0,32,104,80,147,156,28,92,0,255,255,0,0,143,156,25,0,255,255,0,0,201,175,184,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,255,255,0,0,211,92,0,32,104,81,147,156]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 456,
        "y": 1085,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "c50249a0.832e18",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "6",
        "topic": "",
        "payload": "[92,0,32,106,7,89,156,215,92,0,0,95,92]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 484,
        "y": 1127,
        "wires": [
            [
                "652657bf.594d68"
            ]
        ]
    },
    {
        "id": "a28e705b.a7739",
        "type": "mqtt out",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "nibe/modbus/40940/get",
        "qos": "",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 663,
        "y": 315,
        "wires": []
    },
    {
        "id": "bd788fb3.1f11",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "21",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 417,
        "y": 334,
        "wires": [
            [
                "a28e705b.a7739"
            ]
        ]
    },
    {
        "id": "ec0195eb.b769a8",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 322,
        "wires": [
            [
                "4f685464.ce3e7c"
            ],
            []
        ]
    },
    {
        "id": "4f685464.ce3e7c",
        "type": "ui_switch",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Aktivera",
        "tooltip": "",
        "group": "7e910a08.c6c984",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "weather/enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 305,
        "y": 322,
        "wires": [
            [
                "c1f92f58.722e9"
            ]
        ]
    },
    {
        "id": "d92d33b1.e333d",
        "type": "nibe-request",
        "z": "c191a5d.5d76258",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 204,
        "y": 168,
        "wires": [
            [],
            [
                "9110855e.8bfd98"
            ]
        ]
    },
    {
        "id": "520d09d6.d3cbb8",
        "type": "inject",
        "z": "c191a5d.5d76258",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 133,
        "y": 231,
        "wires": [
            [
                "d92d33b1.e333d"
            ]
        ]
    },
    {
        "id": "a9a8b1e1.e176b",
        "type": "nibe-input",
        "z": "c191a5d.5d76258",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 92,
        "y": 126,
        "wires": [
            [
                "9110855e.8bfd98"
            ],
            []
        ]
    },
    {
        "id": "c1f92f58.722e9",
        "type": "nibe-weather",
        "z": "df0dd648.98daa8",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s1",
        "sun": true,
        "wind": false,
        "adjust": "0.5",
        "hours": "8",
        "x": 458,
        "y": 245,
        "wires": [
            [
                "5b087f5d.586d1"
            ],
            [
                "73f9e0db.d20a2"
            ]
        ]
    },
    {
        "id": "41e713e6.d3636c",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "43005",
        "payload": "17",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 592,
        "y": 42,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "d9788d5a.89152",
        "type": "ui_button",
        "z": "df0dd648.98daa8",
        "name": "Uppdatera S1",
        "group": "7e910a08.c6c984",
        "order": 5,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny väderdata och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 269,
        "y": 245,
        "wires": [
            [
                "c1f92f58.722e9"
            ]
        ]
    },
    {
        "id": "ed4672a6.2a277",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "heatcurve_s1",
        "x": 206,
        "y": 595,
        "wires": [
            [],
            [
                "d5d861a9.d7ae9"
            ]
        ]
    },
    {
        "id": "2f31d75c.487a68",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "heatcurve_s1",
        "x": 598,
        "y": 595,
        "wires": [
            []
        ]
    },
    {
        "id": "e0bdfc56.66c9e",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "curveadjust",
        "x": 280,
        "y": 175,
        "wires": [
            [
                "c29f08ae.ec2588"
            ],
            []
        ]
    },
    {
        "id": "ff3a96d9.c82cb8",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 112,
        "y": 175,
        "wires": [
            []
        ]
    },
    {
        "id": "f66e6a0.88cd798",
        "type": "ui_chart",
        "z": "df0dd648.98daa8",
        "name": "Prognostemperatur S2",
        "group": "197ce413.27432c",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "System ej anslutet",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1045,
        "y": 483,
        "wires": [
            []
        ]
    },
    {
        "id": "33987348.04de5c",
        "type": "nibe-weather",
        "z": "df0dd648.98daa8",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s2",
        "sun": true,
        "wind": false,
        "adjust": "0",
        "hours": "1",
        "x": 633,
        "y": 462,
        "wires": [
            [
                "f66e6a0.88cd798",
                "c6b38433.c27d98"
            ],
            []
        ]
    },
    {
        "id": "17ff2266.b209be",
        "type": "ui_button",
        "z": "df0dd648.98daa8",
        "name": "Rensa graf S2",
        "group": "197ce413.27432c",
        "order": 5,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 983,
        "y": 567,
        "wires": [
            [
                "7e712cf3.b50024"
            ]
        ]
    },
    {
        "id": "7e712cf3.b50024",
        "type": "change",
        "z": "df0dd648.98daa8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1179,
        "y": 567,
        "wires": [
            [
                "f66e6a0.88cd798"
            ]
        ]
    },
    {
        "id": "e7144dfe.63ec7",
        "type": "ui_button",
        "z": "df0dd648.98daa8",
        "name": "Uppdatera S2",
        "group": "197ce413.27432c",
        "order": 4,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny väderdata och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 437,
        "y": 525,
        "wires": [
            [
                "33987348.04de5c"
            ]
        ]
    },
    {
        "id": "27f7876f.904e08",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Prognostid",
        "tooltip": "",
        "group": "7e910a08.c6c984",
        "order": 7,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "end",
        "topic": "home/hours",
        "min": "0",
        "max": "24",
        "step": "1",
        "x": 329,
        "y": 175,
        "wires": [
            [
                "c1f92f58.722e9"
            ]
        ]
    },
    {
        "id": "65733a0b.1018c4",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hours_s1",
                "type": "str"
            }
        ],
        "x": 139,
        "y": 175,
        "wires": [
            [
                "27f7876f.904e08"
            ],
            []
        ]
    },
    {
        "id": "6321d043.e7772",
        "type": "ui_slider",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Prognostid",
        "tooltip": "",
        "group": "197ce413.27432c",
        "order": 6,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "end",
        "topic": "home/hours",
        "min": "0",
        "max": "24",
        "step": "1",
        "x": 441,
        "y": 413,
        "wires": [
            [
                "33987348.04de5c"
            ]
        ]
    },
    {
        "id": "90f9072d.c6e398",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hours_s2",
                "type": "str"
            }
        ],
        "x": 153,
        "y": 413,
        "wires": [
            [
                "6321d043.e7772"
            ],
            []
        ]
    },
    {
        "id": "c6b38433.c27d98",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "Enable/Disable",
        "func": "if(msg.enabled!==undefined && msg.enabled===false) {\n    node.send(msg);\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Prognosreglering_Prognosreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else if(msg.enabled===true) {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Prognosreglering_Prognosreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 766,
        "y": 539,
        "wires": [
            [
                "17ff2266.b209be",
                "6321d043.e7772",
                "e7144dfe.63ec7",
                "191d7af8.9d5725"
            ],
            [
                "c65b6d8f.e1f51"
            ]
        ]
    },
    {
        "id": "5eaea9fd.2ab8b8",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Host",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "host",
        "x": 127,
        "y": 371,
        "wires": [
            [
                "8e2dcb3b.b540d8"
            ]
        ]
    },
    {
        "id": "8e2dcb3b.b540d8",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "host",
                "type": "str"
            }
        ],
        "x": 300,
        "y": 371,
        "wires": [
            [
                "5eaea9fd.2ab8b8"
            ],
            []
        ]
    },
    {
        "id": "3eed3ea7.c66072",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Port",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "port",
        "x": 127,
        "y": 413,
        "wires": [
            [
                "be65b446.64ee38"
            ]
        ]
    },
    {
        "id": "be65b446.64ee38",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "port",
                "type": "str"
            }
        ],
        "x": 300,
        "y": 413,
        "wires": [
            [
                "3eed3ea7.c66072"
            ],
            []
        ]
    },
    {
        "id": "7cc82e4d.8f653",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "User",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "user",
        "x": 127,
        "y": 455,
        "wires": [
            [
                "50364127.011b3"
            ]
        ]
    },
    {
        "id": "50364127.011b3",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "user",
                "type": "str"
            }
        ],
        "x": 300,
        "y": 455,
        "wires": [
            [
                "7cc82e4d.8f653"
            ],
            []
        ]
    },
    {
        "id": "b4c7f670.d5d7a8",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "pass",
                "type": "str"
            }
        ],
        "x": 314,
        "y": 497,
        "wires": [
            [
                "6fe84622.e973e8"
            ],
            []
        ]
    },
    {
        "id": "6fe84622.e973e8",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "pass",
        "x": 137,
        "y": 497,
        "wires": [
            [
                "b4c7f670.d5d7a8"
            ]
        ]
    },
    {
        "id": "c03aa9f0.099228",
        "type": "ui_slider",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Kurvjustering S1",
        "tooltip": "",
        "group": "605e2041.0137e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "adjust_s1",
        "min": "-2",
        "max": "2",
        "step": "0.5",
        "x": 451,
        "y": 735,
        "wires": [
            [
                "d25aa0c5.71b29"
            ]
        ]
    },
    {
        "id": "d25aa0c5.71b29",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "adjust_s1",
                "type": "str"
            }
        ],
        "x": 643,
        "y": 735,
        "wires": [
            [
                "c03aa9f0.099228"
            ],
            []
        ]
    },
    {
        "id": "3976a9c5.383436",
        "type": "ui_slider",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Kurvjustering S2",
        "tooltip": "",
        "group": "ea24545a.5d7038",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "adjust_s2",
        "min": "-2",
        "max": "2",
        "step": "0.5",
        "x": 451,
        "y": 777,
        "wires": [
            [
                "c216385f.b7bea8"
            ]
        ]
    },
    {
        "id": "c216385f.b7bea8",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "adjust_s2",
                "type": "str"
            }
        ],
        "x": 643,
        "y": 777,
        "wires": [
            [
                "3976a9c5.383436"
            ],
            []
        ]
    },
    {
        "id": "d5d861a9.d7ae9",
        "type": "ui_slider",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Värmekurva S1",
        "tooltip": "",
        "group": "605e2041.0137e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": "0",
        "max": "15",
        "step": "1",
        "x": 402,
        "y": 595,
        "wires": [
            [
                "2f31d75c.487a68"
            ]
        ]
    },
    {
        "id": "1870fc41.cbc664",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "heatcurve_s2",
        "x": 591,
        "y": 644,
        "wires": [
            [],
            [
                "350136be.28c46a"
            ]
        ]
    },
    {
        "id": "73df1de4.6aa284",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "heatcurve_s2",
        "x": 997,
        "y": 637,
        "wires": [
            []
        ]
    },
    {
        "id": "350136be.28c46a",
        "type": "ui_slider",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Värmekurva S2",
        "tooltip": "",
        "group": "ea24545a.5d7038",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": "0",
        "max": "15",
        "step": "1",
        "x": 780,
        "y": 644,
        "wires": [
            [
                "73df1de4.6aa284"
            ]
        ]
    },
    {
        "id": "a2146cd8.91aae",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "supply_s2",
        "x": 193,
        "y": 665,
        "wires": [
            [],
            [
                "6a959097.836b1"
            ]
        ]
    },
    {
        "id": "193ef8d1.aea617",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Uppdatera NibePi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Uppdatering påbörjar",
        "payloadType": "str",
        "topic": "Uppdatering",
        "x": 132,
        "y": 1022,
        "wires": [
            [
                "6dee8bba.615d04",
                "b0027373.12417"
            ]
        ]
    },
    {
        "id": "6dee8bba.615d04",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "cd /tmp && wget https://raw.githubusercontent.com/anerdins/nibepi-flow/master/update/update.sh && bash update.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 673,
        "y": 1022,
        "wires": [
            [
                "b0027373.12417"
            ],
            [],
            [
                "f8fe14b9.8ba808"
            ]
        ]
    },
    {
        "id": "f6e7533e.8d656",
        "type": "exec",
        "z": "df0dd648.98daa8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 414,
        "y": 105,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c6de94c3.8844f8",
        "type": "inject",
        "z": "df0dd648.98daa8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 141,
        "y": 105,
        "wires": [
            [
                "f6e7533e.8d656"
            ]
        ]
    },
    {
        "id": "6042fbae.0ea8b4",
        "type": "ui_toast",
        "z": "b7f67da0.fbf1",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1287,
        "y": 1064,
        "wires": []
    },
    {
        "id": "b0027373.12417",
        "type": "delay",
        "z": "b7f67da0.fbf1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1074,
        "y": 1078,
        "wires": [
            [
                "6042fbae.0ea8b4"
            ]
        ]
    },
    {
        "id": "f8fe14b9.8ba808",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "if(msg.payload.code===0) {\n    msg.payload = \"Uppdatering lyckades, startar om...\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1261,
        "y": 994,
        "wires": [
            [
                "6042fbae.0ea8b4"
            ]
        ]
    },
    {
        "id": "b4a8d4cd.6cc268",
        "type": "http request",
        "z": "b7f67da0.fbf1",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/VERSION",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 546,
        "y": 1288,
        "wires": [
            [
                "5fa859d3.4d18e8"
            ]
        ]
    },
    {
        "id": "d554ae17.fa6f7",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "d": true,
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kolla efter uppdateringar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 186,
        "y": 1328,
        "wires": [
            [
                "b4a8d4cd.6cc268"
            ]
        ]
    },
    {
        "id": "63aacc05.496154",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "check",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "x": 196,
        "y": 1288,
        "wires": [
            [
                "b4a8d4cd.6cc268"
            ]
        ]
    },
    {
        "id": "5fa859d3.4d18e8",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 939,
        "y": 1288,
        "wires": []
    },
    {
        "id": "191d7af8.9d5725",
        "type": "ui_switch",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Aktivera",
        "tooltip": "",
        "group": "197ce413.27432c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "weather/enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 333,
        "y": 462,
        "wires": [
            [
                "33987348.04de5c"
            ]
        ]
    },
    {
        "id": "aab00c37.39668",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_s2",
                "type": "str"
            }
        ],
        "x": 139,
        "y": 462,
        "wires": [
            [
                "191d7af8.9d5725"
            ],
            []
        ]
    },
    {
        "id": "d46527de.09f758",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Add Registers",
        "func": "var register = global.get('register');\nlet icons = {\n    \"\":\"fa-bars\",\n    \"°C\":\"fa-thermometer-three-quarters\",\n    \"A\":\"fa-flash\",\n    \"Hz\":\"fa-bar-chart\",\n    \"min\":\"fa-clock-o\",\n    \"h\":\"fa-clock-o\",\n    \"m\":\"fa-clock-o\",\n    \"kWh\":\"fa-area-chart\",\n    \"W\":\"fa-flash\",\n    \"l/m\":\"fa-leaf\",\n    \"%RH\":\"fa-cloud\",\n    \"%\":\"fa-percent\"\n}\nif(register===undefined) return;\nlet config = msg.payload;\nvar outRegister = [];\nvar remove = [];\nfor( var i = 0; i < register.length; i++){\n    outRegister[i] = {};\n    outRegister[i].title = register[i].register+\" (\"+register[i].mode+\") (\"+register[i].size+\"): \"+register[i].titel;\n    outRegister[i].description = register[i].info;\n    outRegister[i].register = register[i].register;\n    outRegister[i].mode = register[i].mode;\n    outRegister[i].unit = register[i].unit;\n    outRegister[i].icon_name = icons[register[i].unit];\n    for( var n = 0; n < config.registers.length; n++){\n        if(config.registers[n]===register[i].register) {\n            outRegister[i].isChecked = true;\n            let word = register[i].register+\": \"+register[i].titel;\n            remove.push({[word]:register[i].register});\n        }\n    }\n    if(register[i].register==\"45001\") outRegister[i].icon_name = \"fa-warning\";\n    if(register[i].register==\"10001\") outRegister[i].icon_name = \"fa-warning\";\n}\nif(outRegister!==undefined && outRegister!==[]) {\n    node.send({payload:outRegister});\n}\nif(remove!==undefined && remove!==[]) {\n    node.send([null,{options:remove}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 500,
        "y": 1379,
        "wires": [
            [
                "bd1f8046.e4efe"
            ],
            [
                "a06c6ec7.72b5e"
            ]
        ]
    },
    {
        "id": "bd1f8046.e4efe",
        "type": "ui_list",
        "z": "b7f67da0.fbf1",
        "group": "4f8b35d1.5c8fec",
        "name": "Register",
        "order": 4,
        "width": "12",
        "height": "16",
        "lineType": "three",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 676,
        "y": 1379,
        "wires": [
            [
                "3c0e48ab.ada8f8"
            ]
        ]
    },
    {
        "id": "3c0e48ab.ada8f8",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Add/Remove Registers",
        "func": "if(msg.payload.isChecked===true) {\n    node.send({topic:\"addRegister\",payload:msg.payload.register});\n} else if (msg.payload.isChecked===false) {\n    node.send({topic:\"removeRegister\",payload:msg.payload.register});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 866,
        "y": 1379,
        "wires": [
            [
                "1b0cc4df.6a668b"
            ]
        ]
    },
    {
        "id": "1b0cc4df.6a668b",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 1085,
        "y": 1379,
        "wires": [
            []
        ]
    },
    {
        "id": "c6cddead.51a4d",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 134,
        "y": 1379,
        "wires": [
            [
                "d46527de.09f758"
            ],
            []
        ]
    },
    {
        "id": "311a6080.15131",
        "type": "ui_list",
        "z": "b7f67da0.fbf1",
        "group": "bd199d65.157fc",
        "name": "Data",
        "order": 2,
        "width": "12",
        "height": "11",
        "lineType": "three",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 554,
        "y": 1624,
        "wires": [
            [
                "353f9a08.a4fce6"
            ]
        ]
    },
    {
        "id": "79bf305.f523ad",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Data",
        "func": "var data = global.get('data');\nlet icons = {\n    \"\":\"fa-bars\",\n    \"°C\":\"fa-thermometer-three-quarters\",\n    \"A\":\"fa-flash\",\n    \"Hz\":\"fa-bar-chart\",\n    \"min\":\"fa-clock-o\",\n    \"h\":\"fa-clock-o\",\n    \"m\":\"fa-clock-o\",\n    \"kWh\":\"fa-area-chart\",\n    \"W\":\"fa-flash\",\n    \"l/m\":\"fa-leaf\",\n    \"%RH\":\"fa-cloud\",\n    \"%\":\"fa-percent\"\n}\nvar config = global.get('config');\nif(config===undefined) return;\nlet time = Date.now();\nif(data===undefined) return;\nvar outRegister = [];\nfor( var n = 0; n < config.registers.length; n++){\n    for( var i = 0; i < data.length; i++){\n        if(config.registers[n]==data[i].register) {\n            outRegister[n] = {};\n            outRegister[n].title = `${data[i].register}, ${data[i].titel}`;\n            outRegister[n].description = `${data[i].data} ${data[i].unit}`;\n            outRegister[n].register = data[i].register;\n            outRegister[n].icon_name = icons[data[i].unit];\n            outRegister[n].isChecked = data[i].isChecked;\n            if(data[i].register==\"45001\") outRegister[n].icon_name = \"fa-warning\";\n            if(data[i].register==\"10001\") outRegister[n].icon_name = \"fa-warning\";\n        }\n    }\n    \n}\noutRegister.sort((a, b) => (a.register > b.register) ? 1 : -1)\nif(outRegister!==undefined && outRegister!==[]) {\n    node.send({payload:outRegister});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 365,
        "y": 1624,
        "wires": [
            [
                "311a6080.15131"
            ]
        ]
    },
    {
        "id": "7af5eaeb.53f964",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "check",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 195,
        "y": 1624,
        "wires": [
            [
                "79bf305.f523ad"
            ]
        ]
    },
    {
        "id": "703f2fcb.ebd69",
        "type": "ui_list",
        "z": "9e6c8a27.1c7bd8",
        "group": "794cdfce.3f74f",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "5",
        "lineType": "three",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "7506959b.9f3e7c"
            ]
        ]
    },
    {
        "id": "c8b3c4a8.d97668",
        "type": "inject",
        "z": "9e6c8a27.1c7bd8",
        "name": "Fruits",
        "topic": "",
        "payload": "[{\"title\":\"<b>Apple</b>\",\"description\":\"This is description of <font color=\\\"red\\\"><b>Apple</b></b>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Red_Apple.jpg/500px-Red_Apple.jpg\"},{\"title\":\"<b>Banana</b>\",\"description\":\"This is description of <font color=\\\"yellow\\\"><b>Banana</b></font>(no picture).\",\"icon\":null},{\"title\":\"<b>Orange</b>\",\"description\":\"This is description of <font color=\\\"orange\\\"><b>Orange</b></font>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Ambersweet_oranges.jpg/440px-Ambersweet_oranges.jpg\"},{\"title\":\"<b>Watermelon</b>\",\"description\":\"This is description of <font color=\\\"green\\\"><b>Watermelon</b></font>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Vampire_watermelon.jpg/440px-Vampire_watermelon.jpg\"}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "703f2fcb.ebd69"
            ]
        ]
    },
    {
        "id": "7506959b.9f3e7c",
        "type": "debug",
        "z": "9e6c8a27.1c7bd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "5ac5d7cf.86ea98",
        "type": "inject",
        "z": "9e6c8a27.1c7bd8",
        "name": "WiFi",
        "topic": "",
        "payload": "[{\"title\":\"No WiFi Signal\",\"description\":\"Lost network connection\",\"icon_name\":\"signal_wifi_0_bar\"},{\"title\":\"Weak WiFi Signal\",\"description\":\"May lose network connection\",\"icon_name\":\"signal_wifi_2_bar\"},{\"title\":\"Strong WiFi Signal\",\"description\":\"Connected to network\",\"icon_name\":\"signal_wifi_4_bar\"}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 106,
        "y": 175,
        "wires": [
            [
                "6f563a2c.9420e4"
            ]
        ]
    },
    {
        "id": "84963d57.263ba",
        "type": "ui_list",
        "z": "9e6c8a27.1c7bd8",
        "group": "794cdfce.3f74f",
        "name": "",
        "order": 3,
        "width": "4",
        "height": "7",
        "lineType": "one",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "c8d6ebfb.ba5eb8"
            ]
        ]
    },
    {
        "id": "b18156df.f42538",
        "type": "inject",
        "z": "9e6c8a27.1c7bd8",
        "name": "Day of Week",
        "topic": "",
        "payload": "[{\"title\":\"Sunday\",\"isChecked\":true},{\"title\":\"Monday\"},{\"title\":\"Tuesday\"},{\"title\":\"Wednesday\"},{\"title\":\"Thursday\"},{\"title\":\"Friday\"},{\"title\":\"Saturday\",\"isChecked\":true}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 260,
        "wires": [
            [
                "84963d57.263ba"
            ]
        ]
    },
    {
        "id": "c8d6ebfb.ba5eb8",
        "type": "debug",
        "z": "9e6c8a27.1c7bd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "6f563a2c.9420e4",
        "type": "ui_list",
        "z": "9e6c8a27.1c7bd8",
        "group": "794cdfce.3f74f",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "5",
        "lineType": "two",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 1,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "2391a708.feb858"
            ]
        ]
    },
    {
        "id": "2391a708.feb858",
        "type": "debug",
        "z": "9e6c8a27.1c7bd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "322482fe.944ede",
        "type": "ui_list",
        "z": "9e6c8a27.1c7bd8",
        "group": "794cdfce.3f74f",
        "name": "",
        "order": 3,
        "width": "4",
        "height": "4",
        "lineType": "one",
        "actionType": "switch",
        "allowHTML": false,
        "outputs": 1,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "5abeb3c6.bccb2c"
            ]
        ]
    },
    {
        "id": "8b91a934.bd7678",
        "type": "inject",
        "z": "9e6c8a27.1c7bd8",
        "name": "Drink",
        "topic": "",
        "payload": "[{\"title\":\"Coffee\",\"isChecked\":true},{\"title\":\"Tea\",\"isChecked\":false},{\"title\":\"Green Tea\",\"isChecked\":true}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 340,
        "wires": [
            [
                "322482fe.944ede"
            ]
        ]
    },
    {
        "id": "5abeb3c6.bccb2c",
        "type": "debug",
        "z": "9e6c8a27.1c7bd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 340,
        "wires": []
    },
    {
        "id": "cdd2783a.2c4218",
        "type": "ui_list",
        "z": "9e6c8a27.1c7bd8",
        "group": "794cdfce.3f74f",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "2",
        "lineType": "one",
        "actionType": "menu",
        "allowHTML": false,
        "outputs": 1,
        "x": 290,
        "y": 420,
        "wires": [
            [
                "ea797217.68d2"
            ]
        ]
    },
    {
        "id": "2c02df77.b0bb3",
        "type": "inject",
        "z": "9e6c8a27.1c7bd8",
        "name": "Move",
        "topic": "",
        "payload": "[{\"title\":\"Direction\",\"menu\":[\"East\",\"West\",\"South\",\"North\"]},{\"title\":\"Speed\",\"menu\":[\"High\",\"Middle\",\"Low\"]}]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 420,
        "wires": [
            [
                "cdd2783a.2c4218"
            ]
        ]
    },
    {
        "id": "ea797217.68d2",
        "type": "debug",
        "z": "9e6c8a27.1c7bd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 420,
        "wires": []
    },
    {
        "id": "353f9a08.a4fce6",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "var data = global.get('data');\nvar time = Date.now();\nif(data===undefined) return;\nif(msg.payload.isChecked!==undefined) {\n        let index = data.findIndex(n => n.register == msg.payload.register);\n    if(index!==-1) {\n        data[index].isChecked = msg.payload.isChecked;\n        global.set('data',data);\n    } else {\n        \n    }\n} else {\n    for( var i = 0; i < data.length; i++){\n        if(data[i].isChecked===true) {\n            if(data[i].raw_data>-3276) {\n                node.send({topic:data[i].titel,payload:data[i].raw_data,timestamp:time});\n            }\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 777,
        "y": 1680,
        "wires": [
            [
                "3e55e8d3.612298",
                "bdd50741.a958d8"
            ]
        ]
    },
    {
        "id": "6b107a4c.37da94",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 855,
        "y": 1631,
        "wires": [
            [
                "3e55e8d3.612298"
            ]
        ]
    },
    {
        "id": "3e55e8d3.612298",
        "type": "ui_chart",
        "z": "b7f67da0.fbf1",
        "name": "Graf",
        "group": "261b1f51.5c37e",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Data saknas",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 987,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "7add9b61.438214",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "check",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 580,
        "y": 1680,
        "wires": [
            [
                "353f9a08.a4fce6"
            ]
        ]
    },
    {
        "id": "bdd50741.a958d8",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1008,
        "y": 1722,
        "wires": []
    },
    {
        "id": "7bce371c.40e5f8",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "Rensa graf",
        "group": "261b1f51.5c37e",
        "order": 2,
        "width": "18",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 833,
        "y": 1589,
        "wires": [
            [
                "3e55e8d3.612298"
            ]
        ]
    },
    {
        "id": "3d76f90c.3a1716",
        "type": "ui_template",
        "z": "b7f67da0.fbf1",
        "group": "4f8b35d1.5c8fec",
        "name": "Registerinfo",
        "order": 1,
        "width": "12",
        "height": "2",
        "format": "<div><p>Välj vilka register som ska hämtas från värmepumpen<br>\nRegister aktiverade med LOG.SET är förvalda och går ej ta bort.<br>\n</p></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 672,
        "y": 1337,
        "wires": [
            []
        ]
    },
    {
        "id": "f7bb30d9.a8d72",
        "type": "ui_template",
        "z": "b7f67da0.fbf1",
        "group": "bd199d65.157fc",
        "name": "Datainfo",
        "order": 1,
        "width": "12",
        "height": "2",
        "format": "<div><p>Alla valda register visas här under, inkl. nuvarande värde.<br>\nFör att visa data i graf nedan, markera register.<br>\n</p></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 536,
        "y": 1582,
        "wires": [
            []
        ]
    },
    {
        "id": "9489e9a0.cd1268",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "Enable/Disable",
        "func": "msg = {\n    enabled:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 633,
        "y": 812,
        "wires": [
            [
                "3e9a73d2.df1c3c",
                "e0568cfa.ce37d",
                "c0ca403c.4cd65",
                "de90adfc.3a51d",
                "d9645915.c269b8"
            ]
        ]
    },
    {
        "id": "6905e0f5.dd875",
        "type": "trigger",
        "z": "c191a5d.5d76258",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "500",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 528,
        "y": 168,
        "wires": [
            []
        ]
    },
    {
        "id": "740712c9.2bd05c",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "Enable/Disable",
        "func": "msg = {\n    enabled:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 633,
        "y": 868,
        "wires": [
            [
                "257d3e61.f15db2",
                "a1d2b301.cca65",
                "3aa1cf7c.e15ef"
            ]
        ]
    },
    {
        "id": "56ef8656.34a448",
        "type": "ui_switch",
        "z": "df0dd648.98daa8",
        "name": "Aktivera Prognoskorrigering",
        "label": "Aktivera Prognoskorrigering",
        "tooltip": "",
        "group": "33ed6fb8.2f3ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "forecast_adjust",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 218,
        "y": 980,
        "wires": [
            [
                "ff911f0f.b33a1"
            ]
        ]
    },
    {
        "id": "ff911f0f.b33a1",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "weather",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "forecast_adjust",
                "type": "str"
            }
        ],
        "x": 461,
        "y": 980,
        "wires": [
            [
                "56ef8656.34a448"
            ],
            []
        ]
    },
    {
        "id": "ed8eca.7d185138",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "33ed6fb8.2f3ce",
        "name": "Prognoskorrigering text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Prognoskorrigering jämför nuvarande utomhustemperatur mot nuvarande prognostemperatur.\n    Samma avvikelse appliceras även på framtida prognostemperatur.\n    <br>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 316,
        "y": 924,
        "wires": [
            []
        ]
    },
    {
        "id": "6df21a09.04d1f4",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "d342c0ba.f2418",
        "name": "Solfaktor text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Vid mycket solinstrålning så går det att ställa en solfaktor.\n    Värdet som valts läggs till på prognostemperaturen.\n    <br>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 161,
        "y": 588,
        "wires": [
            []
        ]
    },
    {
        "id": "31a20aae.3f8386",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "455ba55e.e91e8c",
        "name": "Vindfaktor text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Om fastigheten är utsatt för mycket vind kan man ta med detta\n     i prognosen och kompensera med höjt börvärde. Justeringsfaktorn är ställbart från varje väderstreck.\n    <br>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1039,
        "y": 693,
        "wires": [
            []
        ]
    },
    {
        "id": "560fbe9d.0f52c",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "7e910a08.c6c984",
        "name": "Prognosreglering text S1",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Prognosreglering för klimatsystem 1. Styr värmeproduktionen efter prognostemperatur istället.\n    Rekommenderas framför allt för golvvärme.\n    <br>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 565,
        "y": 175,
        "wires": [
            []
        ]
    },
    {
        "id": "654ec70b.5a5818",
        "type": "ui_template",
        "z": "df0dd648.98daa8",
        "group": "197ce413.27432c",
        "name": "Prognosreglering text S2",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Prognosreglering för klimatsystem 2. Styr värmeproduktionen efter prognostemperatur istället.\n    Rekommenderas framför allt för golvvärme.\n    <br>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 712,
        "y": 413,
        "wires": [
            []
        ]
    },
    {
        "id": "c65b6d8f.e1f51",
        "type": "ui_ui_control",
        "z": "df0dd648.98daa8",
        "name": "Disable Group S2",
        "events": "all",
        "x": 888,
        "y": 623,
        "wires": [
            []
        ]
    },
    {
        "id": "122b1739.bf0d69",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "",
        "events": "change",
        "x": 144,
        "y": 1428,
        "wires": [
            [
                "45726bd6.629654"
            ]
        ]
    },
    {
        "id": "45726bd6.629654",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Datahantering",
        "func": "if(msg.name==\"Datahantering\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 311,
        "y": 1428,
        "wires": [
            [
                "4048162e.e23ad8"
            ]
        ]
    },
    {
        "id": "4048162e.e23ad8",
        "type": "delay",
        "z": "b7f67da0.fbf1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 514,
        "y": 1428,
        "wires": [
            [
                "bd243274.ffbda"
            ]
        ]
    },
    {
        "id": "bd243274.ffbda",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 666,
        "y": 1428,
        "wires": [
            [],
            [
                "d46527de.09f758"
            ]
        ]
    },
    {
        "id": "7767041b.f6a2ac",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "New Inside sensors",
        "func": "let topic = msg.payload.topic;\nlet name = msg.payload.name;\nlet mqtt = msg.payload.mqtt;\n\nlet config = msg.config;\nif(config.home.inside_sensors===undefined) config.home.inside_sensors = [];\nif(name!==\"\") {\n    let newSensor = true;\n    for (const arr of config.home.inside_sensors) {\n        if(arr.register!==undefined && arr.register===topic) {\n            newSensor = false;\n            node.error('Inomhusgivare',{topic:\"Inomhusgivare\",payload:\"Givare finns redan\"})\n        }\n    }\n    if(newSensor===true) {\n        let source = \"nibe\";\n        if(mqtt===true) {\n            source = \"mqtt\";\n        }\n        config.home.inside_sensors.push({name:name,register:topic,source:source});\n        node.send({topic:\"addSensor\",payload:config});\n    }\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 741,
        "y": 1820,
        "wires": [
            [
                "af5403b7.bf541"
            ]
        ]
    },
    {
        "id": "fc464c80.f957e",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1086,
        "y": 2051,
        "wires": []
    },
    {
        "id": "e20b901b.2d06d",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 519,
        "y": 1820,
        "wires": [
            [
                "7767041b.f6a2ac"
            ],
            []
        ]
    },
    {
        "id": "130a1b17.cc1ea5",
        "type": "ui_form",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Lägg till givare",
        "group": "fb207b28.da59b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "MQTT",
                "value": "mqtt",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Namn",
                "value": "name",
                "type": "text",
                "required": true
            },
            {
                "label": "Register / Topic",
                "value": "topic",
                "type": "text",
                "required": true
            }
        ],
        "formValue": {
            "mqtt": false,
            "name": "",
            "topic": ""
        },
        "payload": "",
        "submit": "Lägg till",
        "cancel": "Avbryt",
        "topic": "",
        "x": 308,
        "y": 1820,
        "wires": [
            [
                "e20b901b.2d06d"
            ]
        ]
    },
    {
        "id": "1ce07a10.589406",
        "type": "ui_dropdown",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Ta bort",
        "tooltip": "",
        "place": "Välj",
        "group": "fb207b28.da59b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "removeSensor",
        "x": 974,
        "y": 1883,
        "wires": [
            [
                "fc464c80.f957e",
                "af5403b7.bf541"
            ]
        ]
    },
    {
        "id": "e9b65b68.0cdfb8",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 533,
        "y": 1883,
        "wires": [
            [
                "2498c1b9.89a73e"
            ],
            []
        ]
    },
    {
        "id": "2498c1b9.89a73e",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "var sensors = msg.payload.home.inside_sensors||[];\nvar output = [];\nif(sensors.length!==0) {\n    for (const arr of sensors) {\n        output.push({[arr.name]:arr})\n    }\n}\nif(output!==undefined) {\n    node.send({options:output});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 854,
        "y": 1883,
        "wires": [
            [
                "1ce07a10.589406"
            ]
        ]
    },
    {
        "id": "af5403b7.bf541",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 1155,
        "y": 1827,
        "wires": [
            []
        ]
    },
    {
        "id": "aa92aa28.ba94f8",
        "type": "catch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "scope": [
            "7767041b.f6a2ac"
        ],
        "uncaught": false,
        "x": 610,
        "y": 1953,
        "wires": [
            [
                "70afba29.2d0e34"
            ]
        ]
    },
    {
        "id": "70afba29.2d0e34",
        "type": "ui_toast",
        "z": "b7f67da0.fbf1",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 874,
        "y": 1953,
        "wires": []
    },
    {
        "id": "88479ffd.f321c",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "let config = msg.config;\nif(config.home.inside_sensors!==undefined) {\n    let i = config.home.inside_sensors.findIndex(i => i.register == msg.payload.register);\n    if(i!==-1) {\n        config.home.inside_sensors.splice(i,1);\n        node.send({topic:\"setConfig\",payload:config});\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 1946,
        "wires": [
            []
        ]
    },
    {
        "id": "fbe205f1.95af88",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 1100,
        "y": 1981,
        "wires": [
            [
                "88479ffd.f321c"
            ],
            []
        ]
    },
    {
        "id": "112e4ce5.d4a8c3",
        "type": "ui_dropdown",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "33ed6fb8.2f3ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "weather/sensor",
        "x": 573,
        "y": 371,
        "wires": [
            [
                "c1f92f58.722e9"
            ]
        ]
    },
    {
        "id": "10e30751.e4e639",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "",
        "func": "var sensors = msg.payload.home.inside_sensors||[];\nvar output = [\"Ingen\"];\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    node.send({payload:msg.payload.weather.sensor_s1})\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 406,
        "y": 371,
        "wires": [
            [
                "112e4ce5.d4a8c3"
            ]
        ]
    },
    {
        "id": "334236ca.6e53ba",
        "type": "nibe-input",
        "z": "df0dd648.98daa8",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 85,
        "y": 371,
        "wires": [
            [
                "10e30751.e4e639"
            ],
            []
        ]
    },
    {
        "id": "e9a893c0.59865",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "",
        "events": "change",
        "x": 214,
        "y": 2016,
        "wires": [
            [
                "a22ff0ff.aa4fa"
            ]
        ]
    },
    {
        "id": "a22ff0ff.aa4fa",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Inställningar",
        "func": "if(msg.name==\"Inställningar\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 371,
        "y": 2016,
        "wires": [
            [
                "f7fce578.ff4a68"
            ]
        ]
    },
    {
        "id": "f7fce578.ff4a68",
        "type": "delay",
        "z": "b7f67da0.fbf1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 584,
        "y": 2016,
        "wires": [
            [
                "e021eb6c.058688"
            ]
        ]
    },
    {
        "id": "e021eb6c.058688",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 736,
        "y": 2016,
        "wires": [
            [],
            [
                "2498c1b9.89a73e"
            ]
        ]
    },
    {
        "id": "72520bf5.692d14",
        "type": "nibe-input",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 127,
        "y": 427,
        "wires": [
            [
                "dff05253.9f618"
            ],
            []
        ]
    },
    {
        "id": "dff05253.9f618",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "var sensors = msg.payload.home.inside_sensors||[];\nvar output = [\"Ingen\"];\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    if(msg.payload.indoor!==undefined) {\n        node.send({payload:msg.payload.indoor.sensor_s1})\n    }\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 421,
        "y": 427,
        "wires": [
            [
                "f421e95f.a41718"
            ]
        ]
    },
    {
        "id": "f421e95f.a41718",
        "type": "ui_dropdown",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "a2cfe148.70708",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "indoor/sensor",
        "x": 629,
        "y": 427,
        "wires": [
            [
                "fdd4d594.2498b8"
            ]
        ]
    },
    {
        "id": "fdd4d594.2498b8",
        "type": "nibe-indoor",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s1",
        "adjust": "0.5",
        "x": 857,
        "y": 378,
        "wires": [
            [
                "7c62f68b.7e53a8"
            ],
            []
        ]
    },
    {
        "id": "a10195f0.da9188",
        "type": "ui_chart",
        "z": "358baec9.c8b902",
        "name": "Inomhusreglering S1",
        "group": "a2cfe148.70708",
        "order": 9,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Data ej tillgängligt ännu.",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1276,
        "y": 371,
        "wires": [
            []
        ]
    },
    {
        "id": "d68a22ce.9289d",
        "type": "ui_button",
        "z": "358baec9.c8b902",
        "name": "Uppdatera S1",
        "group": "a2cfe148.70708",
        "order": 10,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny data och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 633,
        "y": 364,
        "wires": [
            [
                "fdd4d594.2498b8"
            ]
        ]
    },
    {
        "id": "c0a999e9.8d63b8",
        "type": "ui_switch",
        "z": "358baec9.c8b902",
        "name": "Aktivera Gradminut återställning",
        "label": "Gradminut återställning",
        "tooltip": "",
        "group": "95b0af9c.89089",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "dm_reset_enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 256,
        "y": 1393,
        "wires": [
            [
                "c3b3d118.e4f23"
            ]
        ]
    },
    {
        "id": "c3b3d118.e4f23",
        "type": "subflow:c191a5d.5d76258",
        "z": "358baec9.c8b902",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "indoor",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "dm_reset_enable",
                "type": "str"
            }
        ],
        "x": 517,
        "y": 1393,
        "wires": [
            [
                "c0a999e9.8d63b8",
                "bb501ea0.7f712"
            ],
            []
        ]
    },
    {
        "id": "5e1062d0.a33cbc",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "a2cfe148.70708",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Inomhustemperatur",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "x": 1189,
        "y": 98,
        "wires": []
    },
    {
        "id": "7c62f68b.7e53a8",
        "type": "switch",
        "z": "358baec9.c8b902",
        "name": "Data",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Inomhustemperatur",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Utomhustemperatur",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gradminuter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tid",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Avvikelse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Kurvjustering",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1058,
        "y": 371,
        "wires": [
            [
                "5e1062d0.a33cbc",
                "a10195f0.da9188"
            ],
            [
                "61436d60.0601e4",
                "a10195f0.da9188"
            ],
            [
                "5f8c6837.106e18"
            ],
            [],
            [
                "cf0c0b96.d635f8"
            ],
            [
                "a10195f0.da9188",
                "c475b1a1.ae577"
            ]
        ]
    },
    {
        "id": "61436d60.0601e4",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "70965431.b26cbc",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Utomhustemperatur",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "x": 1157,
        "y": 756,
        "wires": []
    },
    {
        "id": "5f8c6837.106e18",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "70965431.b26cbc",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Gradminuter",
        "label": "Gradminuter",
        "format": "{{msg.payload}} ºM",
        "layout": "row-spread",
        "x": 1127,
        "y": 714,
        "wires": []
    },
    {
        "id": "9f4e48ae.0cdd88",
        "type": "ui_template",
        "z": "358baec9.c8b902",
        "group": "95b0af9c.89089",
        "name": "Gradminut info",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "När inomhusbörvärdet är uppnått så återställs gradminuter till startvärdet<br><br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1137,
        "y": 581,
        "wires": [
            []
        ]
    },
    {
        "id": "67e507d8.25dac8",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_enable_s1",
        "x": 433,
        "y": 133,
        "wires": [
            [
                "d23336a5.00c4a8"
            ],
            [
                "8df4a3c.164c26"
            ]
        ]
    },
    {
        "id": "e1739c13.ca664",
        "type": "ui_template",
        "z": "358baec9.c8b902",
        "group": "a2cfe148.70708",
        "name": "Välj Inomhusgivare info",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "Välj en temperaturgivare som ska användas i grafen och för ekvationen.<br><br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 327,
        "y": 364,
        "wires": [
            []
        ]
    },
    {
        "id": "8ebe60ad.11b1d",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "70965431.b26cbc",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Senast uppdaterad",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1266,
        "y": 798,
        "wires": []
    },
    {
        "id": "e78514aa.0d9f28",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "msg.payload = getFormattedDate(msg.raw.timestamp);\nreturn msg;\nfunction getFormattedDate() {\n    var date = new Date();\n\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hour = date.getHours();\n    var min = date.getMinutes();\n    var sec = date.getSeconds();\n\n    month = (month < 10 ? \"0\" : \"\") + month;\n    day = (day < 10 ? \"0\" : \"\") + day;\n    hour = (hour < 10 ? \"0\" : \"\") + hour;\n    min = (min < 10 ? \"0\" : \"\") + min;\n    sec = (sec < 10 ? \"0\" : \"\") + sec;\n\n    var str = hour + \":\" + min + \":\" + sec;\n\n    /*alert(str);*/\n\n    return str;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1093,
        "y": 798,
        "wires": [
            [
                "8ebe60ad.11b1d"
            ]
        ]
    },
    {
        "id": "5725972f.b219a8",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "a2cfe148.70708",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Avvikelse",
        "label": "Avvikelse",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "x": 1306,
        "y": 182,
        "wires": []
    },
    {
        "id": "cf0c0b96.d635f8",
        "type": "range",
        "z": "358baec9.c8b902",
        "minin": "1",
        "maxin": "2",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 1145,
        "y": 182,
        "wires": [
            [
                "5725972f.b219a8"
            ]
        ]
    },
    {
        "id": "5f8083e9.9e082c",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "43005",
        "payload": "9.2",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 732,
        "y": 98,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "20c6fa93.75be86",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "43005",
        "payload": "-50",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 718,
        "y": 147,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "2b4a42fb.8ce44e",
        "type": "function",
        "z": "a640aab2.a9f768",
        "name": "",
        "func": "var buf = msg.payload;\n\nvar data = buf[7] <<16 | buf[8]<<24 | buf[9] | buf[10] <<8;\n                    if (data >=2147483647) {\n                        data = (data - 4294967295);\n                    }\nnode.warn(data);",
        "outputs": 1,
        "noerr": 0,
        "x": 722,
        "y": 896,
        "wires": [
            []
        ]
    },
    {
        "id": "12b54f87.55f4b",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "43144",
        "topic": "",
        "payload": "[92,0,32,106,6,136,168,37,0,38,185,214]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 526,
        "y": 875,
        "wires": [
            [
                "2b4a42fb.8ce44e"
            ]
        ]
    },
    {
        "id": "67d2e97d.14efa8",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Word Swap 1",
        "topic": "48852",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 819,
        "y": 49,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "2ac56771.e74d18",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "Word Swap 0",
        "topic": "48852",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 931,
        "y": 105,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "94b8f83a.16bdd8",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "43424",
        "topic": "",
        "payload": "[92,0,32,106,6,160,169,0,0,88,35,62]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 537,
        "y": 925,
        "wires": [
            [
                "2b4a42fb.8ce44e"
            ]
        ]
    },
    {
        "id": "38e828c7.6fcf38",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "43005",
        "payload": "-1000",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 732,
        "y": 197,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "169f69e0.ff63a6",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "43305",
        "topic": "",
        "payload": "[92,0,32,104,80,1,1,234,40,0,0]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 582,
        "y": 966,
        "wires": [
            [
                "2b4a42fb.8ce44e",
                "6192d15.01f5f3"
            ]
        ]
    },
    {
        "id": "6192d15.01f5f3",
        "type": "function",
        "z": "a640aab2.a9f768",
        "name": "",
        "func": "var buf = msg.payload;\n\nvar data = (buf[7] & 0xFF) << 8 | (buf[8] & 0xFF)<<16;\n                    data = data>>>0;\n                    data = data/100\nnode.warn(data);",
        "outputs": 1,
        "noerr": 0,
        "x": 778,
        "y": 959,
        "wires": [
            []
        ]
    },
    {
        "id": "c475b1a1.ae577",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "a2cfe148.70708",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Kurvjustering",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1204,
        "y": 140,
        "wires": []
    },
    {
        "id": "8dd4be0a.86e46",
        "type": "nibe-price",
        "z": "960078e.e3e6d88",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s1",
        "adjust": "0",
        "x": 615,
        "y": 56,
        "wires": [
            [
                "63612ac7.366764",
                "9179d381.0be36",
                "91d8769c.f63f68"
            ],
            [
                "63612ac7.366764"
            ]
        ]
    },
    {
        "id": "3925bdab.14e9a2",
        "type": "ui_switch",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "NibePis Elprisreglering",
        "tooltip": "",
        "group": "f481a5f0.f9f1c8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 156,
        "y": 903,
        "wires": [
            [
                "d54ff528.d710e8",
                "321fde4.84f6d22"
            ]
        ]
    },
    {
        "id": "eafa7076.636ee",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt högt pris",
        "tooltip": "Varmvattenproduktion vid väldigt högt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_very_expensive",
        "x": 822,
        "y": 1099,
        "wires": [
            [
                "40e36211.562a3c"
            ]
        ]
    },
    {
        "id": "4a4b467b.cb3d98",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Normalt pris",
        "tooltip": "Varmvattenproduktion vid normalt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_normal",
        "x": 812,
        "y": 1190,
        "wires": [
            [
                "58a6446.c8ceebc"
            ]
        ]
    },
    {
        "id": "64b8af88.aedae",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Lågt pris",
        "tooltip": "Varmvattenproduktion vid lågt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_cheap",
        "x": 802,
        "y": 1239,
        "wires": [
            [
                "5ea44899.ef5278"
            ]
        ]
    },
    {
        "id": "3b93422b.85e62e",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt lågt pris",
        "tooltip": "Varmvattenproduktion vid väldigtlågt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_very_cheap",
        "x": 822,
        "y": 1288,
        "wires": [
            [
                "57585f07.0f133"
            ]
        ]
    },
    {
        "id": "e0b7517f.586f3",
        "type": "ui_switch",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Varmvattenreglering",
        "tooltip": "Vill du att varmvattnet ska reglera sig efter elpriset enligt nedan",
        "group": "2e9c7d75.ee6312",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "hotwater_enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 824,
        "y": 1393,
        "wires": [
            [
                "d67cd90b.4e8bd8"
            ]
        ]
    },
    {
        "id": "b18004d5.977448",
        "type": "ui_text_input",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Tibber Token",
        "tooltip": "",
        "group": "f481a5f0.f9f1c8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "token",
        "x": 987,
        "y": 791,
        "wires": [
            [
                "73a31dd2.de8774"
            ]
        ]
    },
    {
        "id": "9179d381.0be36",
        "type": "ui_chart",
        "z": "960078e.e3e6d88",
        "name": "",
        "group": "90803197.41c34",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Kostnad",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 886,
        "y": 49,
        "wires": [
            []
        ]
    },
    {
        "id": "74d25b08.542be4",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "44908",
        "payload": "10",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 396,
        "y": 77,
        "wires": [
            [
                "70b95995.bde3e8"
            ]
        ]
    },
    {
        "id": "8af5cb53.d25198",
        "type": "ui_ui_control",
        "z": "960078e.e3e6d88",
        "name": "",
        "events": "all",
        "x": 193,
        "y": 847,
        "wires": [
            [
                "912b5ed8.d07cf"
            ]
        ]
    },
    {
        "id": "912b5ed8.d07cf",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Elprisreglering",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Elprisreglering\") {\n    if(time>timeSaved) {\n        context.set('time',(time+60000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 353,
        "y": 847,
        "wires": [
            [
                "1e4f140c.04c97c",
                "419d4955.0dded8"
            ]
        ]
    },
    {
        "id": "1e4f140c.04c97c",
        "type": "nibe-request",
        "z": "960078e.e3e6d88",
        "server": "844659a2.8d8508",
        "name": "price_enable",
        "x": 546,
        "y": 847,
        "wires": [
            [],
            [
                "54bb4384.e1936c",
                "9ff28997.48cac8",
                "d383b3f8.c2437"
            ]
        ]
    },
    {
        "id": "54bb4384.e1936c",
        "type": "ui_switch",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Nibes Elprisreglering",
        "tooltip": "",
        "group": "f481a5f0.f9f1c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "30",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "10",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 758,
        "y": 847,
        "wires": [
            []
        ]
    },
    {
        "id": "d54ff528.d710e8",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable",
                "type": "str"
            }
        ],
        "x": 384,
        "y": 903,
        "wires": [
            [
                "3925bdab.14e9a2"
            ],
            [
                "217bd6b8.16c73a"
            ]
        ]
    },
    {
        "id": "2ec7e694.30d2ea",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Datakälla",
        "tooltip": "Välj vart elprisuppgifter ska hämtas från",
        "place": "Välj datakälla",
        "group": "f481a5f0.f9f1c8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [],
        "payload": "",
        "topic": "source",
        "x": 228,
        "y": 1015,
        "wires": [
            [
                "f6c2eadb.af1c28"
            ]
        ]
    },
    {
        "id": "f6c2eadb.af1c28",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "source",
                "type": "str"
            }
        ],
        "x": 391,
        "y": 1057,
        "wires": [
            [
                "2ec7e694.30d2ea"
            ],
            [
                "dc3a27b1.8a8ef8"
            ]
        ]
    },
    {
        "id": "4d63b4e4.90710c",
        "type": "ui_button",
        "z": "960078e.e3e6d88",
        "name": "Uppdatera S1",
        "group": "90803197.41c34",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny data och uppdatera med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 367,
        "y": 56,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "68d91eb2.2d481",
        "type": "ui_switch",
        "z": "960078e.e3e6d88",
        "name": "Aktivera S1",
        "label": "Aktivera",
        "tooltip": "",
        "group": "1b40f24f.7b6d9e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "price/enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 322,
        "y": 98,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "12912295.62786d",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 98,
        "wires": [
            [
                "68d91eb2.2d481"
            ],
            []
        ]
    },
    {
        "id": "254cff77.34a55",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_s2",
                "type": "str"
            }
        ],
        "x": 111,
        "y": 777,
        "wires": [
            [
                "4849d6b9.2a3868"
            ],
            []
        ]
    },
    {
        "id": "4849d6b9.2a3868",
        "type": "ui_switch",
        "z": "960078e.e3e6d88",
        "name": "Aktivera S2",
        "label": "Aktivera",
        "tooltip": "",
        "group": "94305680.d32c48",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "price/enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 301,
        "y": 777,
        "wires": [
            [
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "360796e8.919dfa",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "token",
                "type": "str"
            }
        ],
        "x": 1336,
        "y": 791,
        "wires": [
            [
                "5a685251.39ba2c"
            ],
            []
        ]
    },
    {
        "id": "aa3b6866.eabab8",
        "type": "nibe-price",
        "z": "960078e.e3e6d88",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s2",
        "adjust": "0",
        "x": 601,
        "y": 756,
        "wires": [
            [
                "ef64204.7fdb6e"
            ],
            []
        ]
    },
    {
        "id": "44279d43.2995f4",
        "type": "ui_form",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Skicka värde",
        "group": "bd199d65.157fc",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Register",
                "value": "register",
                "type": "number",
                "required": true
            },
            {
                "label": "Värde",
                "value": "value",
                "type": "number",
                "required": true
            }
        ],
        "formValue": {
            "register": "",
            "value": ""
        },
        "payload": "",
        "submit": "Skicka",
        "cancel": "",
        "topic": "",
        "x": 335,
        "y": 1533,
        "wires": [
            [
                "2effd06.0f5ca3"
            ]
        ]
    },
    {
        "id": "4539bf17.179d5",
        "type": "nibe-output",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 742,
        "y": 1533,
        "wires": [
            [
                "79bf305.f523ad"
            ]
        ]
    },
    {
        "id": "2effd06.0f5ca3",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "msg.topic = msg.payload.register;\nmsg.payload = msg.payload.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 526,
        "y": 1533,
        "wires": [
            [
                "4539bf17.179d5"
            ]
        ]
    },
    {
        "id": "5a685251.39ba2c",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Hide token",
        "func": "if(msg.payload!==\"\" && msg.payload!==undefined) {\n    msg.payload = \"Token inlagd\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 819,
        "y": 791,
        "wires": [
            [
                "b18004d5.977448"
            ]
        ]
    },
    {
        "id": "73a31dd2.de8774",
        "type": "switch",
        "z": "960078e.e3e6d88",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Token inlagd",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1162,
        "y": 791,
        "wires": [
            [
                "360796e8.919dfa"
            ]
        ]
    },
    {
        "id": "63612ac7.366764",
        "type": "debug",
        "z": "960078e.e3e6d88",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 882,
        "y": 105,
        "wires": []
    },
    {
        "id": "488fef9f.5c0c",
        "type": "debug",
        "z": "960078e.e3e6d88",
        "name": "Tibber",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 981,
        "y": 1057,
        "wires": []
    },
    {
        "id": "b10876b6.f61048",
        "type": "http request",
        "z": "960078e.e3e6d88",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://api.tibber.com/v1-beta/gql",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 792,
        "y": 1053,
        "wires": [
            [
                "488fef9f.5c0c"
            ]
        ]
    },
    {
        "id": "483d9b64.2cbfa4",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "",
        "func": "var config = global.get('config');\nvar token = config.price.token;\nmsg.headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n};\n\nmsg.payload = { \"query\": \"{\\\n  viewer {\\\n    homes {\\\n      currentSubscription {\\\n        status\\\n        priceInfo {\\\n          today{\\\n            startsAt\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n          }\\\n          current{\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n            startsAt\\\n          }\\\n          tomorrow {\\\n            startsAt\\\n            total\\\n            level\\\n            energy\\\n            tax\\\n          }\\\n        }\\\n      }\\\n      consumption(resolution: HOURLY, last: 48) {\\\n        nodes {\\\n          from\\\n          to\\\n          consumption\\\n          consumptionUnit\\\n        }\\\n      }\\\n    }\\\n  }\\\n}\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 592,
        "y": 1053,
        "wires": [
            [
                "b10876b6.f61048"
            ]
        ]
    },
    {
        "id": "23a807b6.1785c8",
        "type": "inject",
        "z": "960078e.e3e6d88",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 392,
        "y": 1113,
        "wires": [
            [
                "483d9b64.2cbfa4"
            ]
        ]
    },
    {
        "id": "40e36211.562a3c",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_very_expensive",
                "type": "str"
            }
        ],
        "x": 1035,
        "y": 1099,
        "wires": [
            [
                "eafa7076.636ee"
            ],
            []
        ]
    },
    {
        "id": "9e47d1c5.a1f6a",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Högt pris",
        "tooltip": "Varmvattenproduktion vid högt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_expensive",
        "x": 802,
        "y": 1141,
        "wires": [
            [
                "21d246a8.2de9aa"
            ]
        ]
    },
    {
        "id": "21d246a8.2de9aa",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_expensive",
                "type": "str"
            }
        ],
        "x": 986,
        "y": 1141,
        "wires": [
            [
                "9e47d1c5.a1f6a"
            ],
            []
        ]
    },
    {
        "id": "58a6446.c8ceebc",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_normal",
                "type": "str"
            }
        ],
        "x": 1007,
        "y": 1190,
        "wires": [
            [
                "4a4b467b.cb3d98"
            ],
            []
        ]
    },
    {
        "id": "5ea44899.ef5278",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_cheap",
                "type": "str"
            }
        ],
        "x": 1007,
        "y": 1239,
        "wires": [
            [
                "64b8af88.aedae"
            ],
            []
        ]
    },
    {
        "id": "57585f07.0f133",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_very_cheap",
                "type": "str"
            }
        ],
        "x": 1021,
        "y": 1288,
        "wires": [
            [
                "3b93422b.85e62e"
            ],
            []
        ]
    },
    {
        "id": "d67cd90b.4e8bd8",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "hotwater_enable",
                "type": "str"
            }
        ],
        "x": 1042,
        "y": 1393,
        "wires": [
            [
                "e0b7517f.586f3"
            ],
            []
        ]
    },
    {
        "id": "40c00df0.72a6e4",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Högt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är högt pris?",
        "group": "1b40f24f.7b6d9e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_expensive",
        "min": "-10",
        "max": "0",
        "step": 1,
        "x": 312,
        "y": 203,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "b30b63c9.c96a9",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är lågt pris?",
        "group": "1b40f24f.7b6d9e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_cheap",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 312,
        "y": 252,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "b3a09f2.d70226",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är väldigt lågt pris?",
        "group": "1b40f24f.7b6d9e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_very_cheap",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 332,
        "y": 301,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "1e82db4e.4957f5",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_expensive_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 203,
        "wires": [
            [
                "40c00df0.72a6e4"
            ],
            []
        ]
    },
    {
        "id": "c30269ad.b26128",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt högt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är väldigt högt pris?",
        "group": "1b40f24f.7b6d9e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_very_expensive",
        "min": "-10",
        "max": "0",
        "step": 1,
        "x": 332,
        "y": 154,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "a44c9b0.7de6a68",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_very_expensive_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 154,
        "wires": [
            [
                "c30269ad.b26128"
            ],
            []
        ]
    },
    {
        "id": "59781121.2432f",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_cheap_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 252,
        "wires": [
            [
                "b30b63c9.c96a9"
            ],
            []
        ]
    },
    {
        "id": "2691b2ec.33f61e",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_very_cheap_s1",
                "type": "str"
            }
        ],
        "x": 132,
        "y": 301,
        "wires": [
            [
                "b3a09f2.d70226"
            ],
            []
        ]
    },
    {
        "id": "523b61b1.02fb1",
        "type": "ui_text",
        "z": "960078e.e3e6d88",
        "group": "e6946a7.5e1e698",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nuvarande Elpris",
        "format": "{{msg.payload}} öre",
        "layout": "row-spread",
        "x": 1028,
        "y": 161,
        "wires": []
    },
    {
        "id": "800a0005.55ffc",
        "type": "ui_text",
        "z": "960078e.e3e6d88",
        "group": "e6946a7.5e1e698",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nuvarande Elprisnivå",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1038,
        "y": 203,
        "wires": []
    },
    {
        "id": "91d8769c.f63f68",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "",
        "func": "let level = {\n    UNKNOWN: \"Okänt\",\n    VERY_CHEAP: \"Väldigt lågt pris\",\n    CHEAP: \"Lågt pris\",\n    NORMAL:\"Normalt pris\",\n    EXPENSIVE: \"Högt pris\",\n    VERY_EXPENSIVE: \"Väldigt högt pris\"\n}\nif(msg.topic==\"Nuvarande Elpris\") {\n    node.send([{payload:msg.payload}])\n} else if(msg.topic==\"Nuvarande Elprisnivå\") {\n    node.send([null,{payload:level[msg.payload]}])\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 848,
        "y": 175,
        "wires": [
            [
                "523b61b1.02fb1"
            ],
            [
                "800a0005.55ffc"
            ]
        ]
    },
    {
        "id": "dc3a27b1.8a8ef8",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Enable/Disable Source",
        "func": "let source = msg.payload.price.source;\nif(source==\"tibber\") {\n    msg = {\n    enabled:true\n};\nreturn msg;\n} else if(source==\"nibe\") {\n    msg = {\n    enabled:false\n};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 569,
        "y": 973,
        "wires": [
            [
                "eafa7076.636ee",
                "3b93422b.85e62e",
                "c30269ad.b26128",
                "b3a09f2.d70226",
                "b18004d5.977448",
                "d07cb165.8756a",
                "b0a104eb.836b28"
            ]
        ]
    },
    {
        "id": "a38b1ef.5259be",
        "type": "trigger",
        "z": "c191a5d.5d76258",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "500",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 528,
        "y": 210,
        "wires": [
            []
        ]
    },
    {
        "id": "ef64204.7fdb6e",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Enable/Disable",
        "func": "if(msg.enabled!==undefined) {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Elprisreglering_Elprisreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Elprisreglering_Elprisreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 822,
        "y": 728,
        "wires": [
            [],
            [
                "a2a91bd1.6ad658"
            ]
        ]
    },
    {
        "id": "a2a91bd1.6ad658",
        "type": "ui_ui_control",
        "z": "960078e.e3e6d88",
        "name": "Disable Group S2",
        "events": "all",
        "x": 1035,
        "y": 728,
        "wires": [
            []
        ]
    },
    {
        "id": "217bd6b8.16c73a",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Enable/Disable NibePi",
        "func": "let source = msg.payload.price.enable;\nif(source===true) {\n    msg = {\n    enabled:true\n};\nreturn msg;\n} else if(source===false) {\n    msg = {\n    enabled:false\n};\n\nreturn msg;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1052,
        "y": 567,
        "wires": [
            [
                "eafa7076.636ee",
                "9e47d1c5.a1f6a",
                "4a4b467b.cb3d98",
                "64b8af88.aedae",
                "3b93422b.85e62e",
                "e0b7517f.586f3",
                "2ec7e694.30d2ea",
                "b18004d5.977448",
                "4849d6b9.2a3868",
                "b3a09f2.d70226",
                "b30b63c9.c96a9",
                "40c00df0.72a6e4",
                "c30269ad.b26128",
                "68d91eb2.2d481",
                "d07cb165.8756a",
                "1bb82fc2.e8b78",
                "de834f9d.9b477",
                "b0a104eb.836b28"
            ],
            [
                "8dd4be0a.86e46",
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "1bb82fc2.e8b78",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Högt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är högt pris?",
        "group": "94305680.d32c48",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_expensive",
        "min": "-10",
        "max": "0",
        "step": 1,
        "x": 291,
        "y": 609,
        "wires": [
            [
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "de834f9d.9b477",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är lågt pris?",
        "group": "94305680.d32c48",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_cheap",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 291,
        "y": 658,
        "wires": [
            [
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "b0a104eb.836b28",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är väldigt lågt pris?",
        "group": "94305680.d32c48",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_very_cheap",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 311,
        "y": 707,
        "wires": [
            [
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "d2766d78.d5abf",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_expensive_s2",
                "type": "str"
            }
        ],
        "x": 111,
        "y": 609,
        "wires": [
            [
                "1bb82fc2.e8b78"
            ],
            []
        ]
    },
    {
        "id": "d07cb165.8756a",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Väldigt högt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är väldigt högt pris?",
        "group": "94305680.d32c48",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/heat_very_expensive",
        "min": "-10",
        "max": "0",
        "step": 1,
        "x": 311,
        "y": 560,
        "wires": [
            [
                "aa3b6866.eabab8"
            ]
        ]
    },
    {
        "id": "5ed538ba.60f5e8",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_very_expensive_s2",
                "type": "str"
            }
        ],
        "x": 111,
        "y": 560,
        "wires": [
            [
                "d07cb165.8756a"
            ],
            []
        ]
    },
    {
        "id": "a3c9c25b.1c4fc",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_cheap_s2",
                "type": "str"
            }
        ],
        "x": 111,
        "y": 658,
        "wires": [
            [
                "de834f9d.9b477"
            ],
            []
        ]
    },
    {
        "id": "eb82842d.507e48",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "heat_very_cheap_s2",
                "type": "str"
            }
        ],
        "x": 111,
        "y": 707,
        "wires": [
            [
                "b0a104eb.836b28"
            ],
            []
        ]
    },
    {
        "id": "9958a8f1.7abba8",
        "type": "ui_text",
        "z": "960078e.e3e6d88",
        "group": "f481a5f0.f9f1c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "SmartPrice Info",
        "label": "",
        "format": "OBS. För att kunna använda prisnivåer från Nibe Uplink måste Nibes SmartPrice vara aktiverat i värmepumpen manuellt under meny 4.1.6 Smart Price Adaption.",
        "layout": "row-spread",
        "x": 843,
        "y": 637,
        "wires": []
    },
    {
        "id": "9ff28997.48cac8",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "Enable/Disable SmartPrice",
        "func": "let source = msg.payload;\nif(source==\"30\") {\n    msg = {\n    enabled:true\n};\nreturn msg;\n} else if(source==\"10\") {\n    msg = {\n    enabled:false\n};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 603,
        "y": 665,
        "wires": [
            [
                "9958a8f1.7abba8",
                "65bf37a8.e18928"
            ]
        ]
    },
    {
        "id": "ff40dfba.607c5",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "[244,255]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 193,
        "y": 1218,
        "wires": [
            [
                "9d021adb.f45e68"
            ]
        ]
    },
    {
        "id": "3f1cf8d3.166058",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 672,
        "y": 1239,
        "wires": []
    },
    {
        "id": "9d021adb.f45e68",
        "type": "function",
        "z": "a640aab2.a9f768",
        "name": "",
        "func": "let r = {};\nr[40004] = ((msg.payload[1] & 0xFF) << 8 | (msg.payload[0] & 0xFF));\n    if(r[40004]>=32768) { r[40004] = r[40004]+5 } else { r[40004] = r[40004]-5 }\n    if (r[40004] >= 32768) {\n        r[40004] = r[40004] - 65536;\n    }  \nmsg.payload = r[40004];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 392,
        "y": 1218,
        "wires": [
            [
                "3f1cf8d3.166058"
            ]
        ]
    },
    {
        "id": "17c83ad6.5385b5",
        "type": "inject",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "",
        "payload": "[245,255]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 184,
        "y": 1267,
        "wires": [
            [
                "9d021adb.f45e68"
            ]
        ]
    },
    {
        "id": "f5bfde4f.200e",
        "type": "ui_dropdown",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Inomhusreglering",
        "tooltip": "",
        "place": "Välj",
        "group": "a2cfe148.70708",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "Avaktiverat",
                "value": "off",
                "type": "str"
            },
            {
                "label": "Nibes Inomhusreglering",
                "value": "nibe",
                "type": "str"
            },
            {
                "label": "NibePis Inomhusreglering",
                "value": "nibepi",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "site",
        "x": 412,
        "y": 35,
        "wires": [
            [
                "8cec67c8.150f68"
            ]
        ]
    },
    {
        "id": "d23336a5.00c4a8",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "let nibe = msg.inside_enable_s1;\nlet nibepi = msg.config.indoor.enable_s1;\nmsg.topic = \"red\";\nif(nibe===1 && (nibepi===undefined || nibepi===false)) {\n    msg.payload = \"nibe\";\n} else if(nibe===0 && nibepi===true) {\n    msg.payload = \"nibepi\";\n} else {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 239,
        "y": 35,
        "wires": [
            [
                "f5bfde4f.200e",
                "f65e7c49.0cfac"
            ]
        ]
    },
    {
        "id": "f65e7c49.0cfac",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "let config = msg.config;\nlet topic = msg.topic;\nif(msg.payload==\"nibe\") {\n    config.indoor.enable_s1 = false;\n    config.indoor.sensor_s1 = undefined;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s1\",payload:1},{topic:\"setConfig\",payload:config},{enabled:true},{enabled:false}]);\n    } else {\n        node.send([null,null,{enabled:true},{enabled:false}]);\n    }\n    \n} else if(msg.payload==\"nibepi\") {\n    config.indoor.enable_s1 = true;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s1\",payload:0},{topic:\"setConfig\",payload:config},{enabled:true},{enabled:true}]);\n    } else {\n        node.send([null,null,{enabled:true},{enabled:true}]);\n    }\n} else {\n    config.indoor.enable_s1 = false;\n    config.indoor.sensor_s1 = undefined;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s1\",payload:0},{topic:\"setConfig\",payload:config},{enabled:false},{enabled:false}]);\n    } else {\n        node.send([null,null,{enabled:false},{enabled:false}]);\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 729,
        "y": 35,
        "wires": [
            [
                "f9a0b44f.224b78"
            ],
            [
                "f9a0b44f.224b78"
            ],
            [
                "a8deecfc.3d34b",
                "8a3192fa.29d1d",
                "d68a22ce.9289d",
                "c0a999e9.8d63b8",
                "9f4e48ae.0cdd88",
                "a10195f0.da9188"
            ],
            [
                "e1739c13.ca664",
                "f421e95f.a41718"
            ]
        ]
    },
    {
        "id": "d6176cc8.3e0d3",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 260,
        "y": 133,
        "wires": [
            [
                "67e507d8.25dac8"
            ],
            []
        ]
    },
    {
        "id": "8cec67c8.150f68",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 582,
        "y": 35,
        "wires": [
            [
                "f65e7c49.0cfac"
            ],
            []
        ]
    },
    {
        "id": "f9a0b44f.224b78",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 903,
        "y": 35,
        "wires": [
            []
        ]
    },
    {
        "id": "d136e0d4.36424",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Inomhus börvärde",
        "tooltip": "",
        "group": "6ee1e12a.a6f04",
        "order": 5,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "",
        "min": "5",
        "max": "30",
        "step": "0.5",
        "x": 685,
        "y": 1015,
        "wires": [
            [
                "b78dec32.a1881"
            ]
        ]
    },
    {
        "id": "d5bb2eff.594fe",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Faktor för Inomhusgivare",
        "tooltip": "Ställ in hur mycket inomhus givare ska påverka framledningstemperaturen.",
        "group": "6ee1e12a.a6f04",
        "order": 6,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "inside_factor",
        "min": "0",
        "max": "6",
        "step": "0.1",
        "x": 705,
        "y": 1113,
        "wires": [
            [
                "f74bcb8.67d6438"
            ]
        ]
    },
    {
        "id": "b78dec32.a1881",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_set_s2",
        "x": 941,
        "y": 1015,
        "wires": [
            [
                "d136e0d4.36424"
            ]
        ]
    },
    {
        "id": "64fe7e0e.2c1d6",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_set_s2",
        "x": 472,
        "y": 1022,
        "wires": [
            [],
            [
                "d136e0d4.36424",
                "2c965701.af9058"
            ]
        ]
    },
    {
        "id": "6696956c.64474c",
        "type": "ui_ui_control",
        "z": "358baec9.c8b902",
        "name": "",
        "events": "all",
        "x": 102,
        "y": 1015,
        "wires": [
            [
                "81278907.1d9f08"
            ]
        ]
    },
    {
        "id": "81278907.1d9f08",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "Inomhusreglering",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Inomhusreglering\") {\n    if(time>timeSaved) {\n        context.set('time',(time+30000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 272,
        "y": 1015,
        "wires": [
            [
                "b123c693.644da8"
            ]
        ]
    },
    {
        "id": "2c965701.af9058",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_factor_s2",
        "x": 472,
        "y": 1113,
        "wires": [
            [],
            [
                "d5bb2eff.594fe"
            ]
        ]
    },
    {
        "id": "f74bcb8.67d6438",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_factor_s2",
        "x": 934,
        "y": 1113,
        "wires": [
            [
                "d5bb2eff.594fe"
            ]
        ]
    },
    {
        "id": "4990a4f.f34705c",
        "type": "nibe-input",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 134,
        "y": 1260,
        "wires": [
            [
                "47ac4ac3.4282f4"
            ],
            []
        ]
    },
    {
        "id": "47ac4ac3.4282f4",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "var sensors = msg.payload.home.inside_sensors||[];\nvar output = [\"Ingen\"];\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    if(msg.payload.indoor!==undefined) {\n        node.send({payload:msg.payload.indoor.sensor_s2})\n    }\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 442,
        "y": 1260,
        "wires": [
            [
                "49524e59.d3921"
            ]
        ]
    },
    {
        "id": "49524e59.d3921",
        "type": "ui_dropdown",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "6ee1e12a.a6f04",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "indoor/sensor",
        "x": 636,
        "y": 1260,
        "wires": [
            [
                "26c121a.21b7bde"
            ]
        ]
    },
    {
        "id": "26c121a.21b7bde",
        "type": "nibe-indoor",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s2",
        "adjust": "0",
        "x": 850,
        "y": 1211,
        "wires": [
            [
                "24024128.b41ebe",
                "76dc2468.d143ec"
            ],
            []
        ]
    },
    {
        "id": "9ad9efa4.3453",
        "type": "ui_chart",
        "z": "358baec9.c8b902",
        "name": "Inomhusreglering S2",
        "group": "6ee1e12a.a6f04",
        "order": 9,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Data ej tillgängligt ännu.",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1283,
        "y": 1204,
        "wires": [
            []
        ]
    },
    {
        "id": "98a2ba00.9574c8",
        "type": "ui_button",
        "z": "358baec9.c8b902",
        "name": "Uppdatera S2",
        "group": "6ee1e12a.a6f04",
        "order": 10,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny data och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 640,
        "y": 1197,
        "wires": [
            [
                "26c121a.21b7bde"
            ]
        ]
    },
    {
        "id": "2f4cb05b.407d1",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "6ee1e12a.a6f04",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Inomhustemperatur",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "x": 1196,
        "y": 931,
        "wires": []
    },
    {
        "id": "24024128.b41ebe",
        "type": "switch",
        "z": "358baec9.c8b902",
        "name": "Data",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Inomhustemperatur",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Utomhustemperatur",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gradminuter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tid",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Avvikelse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Kurvjustering",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1065,
        "y": 1204,
        "wires": [
            [
                "2f4cb05b.407d1",
                "9ad9efa4.3453"
            ],
            [
                "9ad9efa4.3453"
            ],
            [],
            [],
            [
                "8d1f9f48.44fef"
            ],
            [
                "9ad9efa4.3453",
                "ced9439e.afef"
            ]
        ]
    },
    {
        "id": "38c0fc67.e35064",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "inside_enable_s2",
        "x": 440,
        "y": 966,
        "wires": [
            [
                "15058f79.4342b1"
            ],
            [
                "64fe7e0e.2c1d6"
            ]
        ]
    },
    {
        "id": "a20f3f7d.f9096",
        "type": "ui_template",
        "z": "358baec9.c8b902",
        "group": "6ee1e12a.a6f04",
        "name": "Välj Inomhusgivare info",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "Välj en temperaturgivare som ska användas i grafen och för ekvationen.<br><br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 334,
        "y": 1197,
        "wires": [
            []
        ]
    },
    {
        "id": "8cf9b82c.df7338",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "6ee1e12a.a6f04",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Avvikelse",
        "label": "Avvikelse",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "x": 1313,
        "y": 1015,
        "wires": []
    },
    {
        "id": "8d1f9f48.44fef",
        "type": "range",
        "z": "358baec9.c8b902",
        "minin": "1",
        "maxin": "2",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 1152,
        "y": 1015,
        "wires": [
            [
                "8cf9b82c.df7338"
            ]
        ]
    },
    {
        "id": "ced9439e.afef",
        "type": "ui_text",
        "z": "358baec9.c8b902",
        "group": "6ee1e12a.a6f04",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Kurvjustering",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1176,
        "y": 973,
        "wires": []
    },
    {
        "id": "67f0bc49.0491c4",
        "type": "ui_dropdown",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Inomhusreglering",
        "tooltip": "",
        "place": "Välj",
        "group": "6ee1e12a.a6f04",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "Avaktiverat",
                "value": "off",
                "type": "str"
            },
            {
                "label": "Nibes Inomhusreglering",
                "value": "nibe",
                "type": "str"
            },
            {
                "label": "NibePis Inomhusreglering",
                "value": "nibepi",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "site",
        "x": 419,
        "y": 868,
        "wires": [
            [
                "f8a95348.53c3c"
            ]
        ]
    },
    {
        "id": "15058f79.4342b1",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "let nibe = msg.inside_enable_s2;\nlet nibepi = msg.config.indoor.enable_s2;\nmsg.topic = \"red\";\nif(nibe===1 && (nibepi===undefined || nibepi===false)) {\n    msg.payload = \"nibe\";\n} else if(nibe===0 && nibepi===true) {\n    msg.payload = \"nibepi\";\n} else {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 246,
        "y": 868,
        "wires": [
            [
                "67f0bc49.0491c4",
                "edac8d3e.c5625"
            ]
        ]
    },
    {
        "id": "edac8d3e.c5625",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "",
        "func": "let config = msg.config;\nlet topic = msg.topic;\nif(msg.payload==\"nibe\") {\n    config.indoor.enable_s2 = false;\n    config.indoor.sensor_s2 = undefined;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s2\",payload:1},{topic:\"setConfig\",payload:config},{enabled:true},{enabled:false}]);\n    } else {\n        node.send([null,null,{enabled:true},{enabled:false}]);\n    }\n    \n} else if(msg.payload==\"nibepi\") {\n    config.indoor.enable_s2 = true;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s2\",payload:0},{topic:\"setConfig\",payload:config},{enabled:true},{enabled:true}]);\n    } else {\n        node.send([null,null,{enabled:true},{enabled:true}]);\n    }\n} else {\n    config.indoor.enable_s2 = false;\n    config.indoor.sensor_s2 = undefined;\n    if(topic==\"site\") {\n        node.send([{topic:\"inside_enable_s2\",payload:0},{topic:\"setConfig\",payload:config},{enabled:false},{enabled:false}]);\n    } else {\n        node.send([null,null,{enabled:false},{enabled:false}]);\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 736,
        "y": 868,
        "wires": [
            [
                "f27d9d77.fbdb"
            ],
            [
                "f27d9d77.fbdb"
            ],
            [
                "d136e0d4.36424",
                "d5bb2eff.594fe",
                "98a2ba00.9574c8",
                "9ad9efa4.3453"
            ],
            [
                "a20f3f7d.f9096",
                "49524e59.d3921"
            ]
        ]
    },
    {
        "id": "b123c693.644da8",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 267,
        "y": 966,
        "wires": [
            [
                "38c0fc67.e35064"
            ],
            []
        ]
    },
    {
        "id": "f8a95348.53c3c",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 589,
        "y": 868,
        "wires": [
            [
                "edac8d3e.c5625"
            ],
            []
        ]
    },
    {
        "id": "f27d9d77.fbdb",
        "type": "nibe-output",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "",
        "x": 910,
        "y": 868,
        "wires": [
            []
        ]
    },
    {
        "id": "76dc2468.d143ec",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "Enable/Disable",
        "func": "if(msg.enabled!==undefined) {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Inomhusreglering_Inomhusreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Inomhusreglering_Inomhusreglering_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 906,
        "y": 1288,
        "wires": [
            [],
            [
                "9410373f.75f968"
            ]
        ]
    },
    {
        "id": "9410373f.75f968",
        "type": "ui_ui_control",
        "z": "358baec9.c8b902",
        "name": "Disable Group S2",
        "events": "all",
        "x": 1126,
        "y": 1288,
        "wires": [
            []
        ]
    },
    {
        "id": "4711e827.788878",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "system",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "readonly",
                "type": "str"
            }
        ],
        "x": 1154,
        "y": 399,
        "wires": [
            [
                "9414a4e7.3d88c8"
            ],
            []
        ]
    },
    {
        "id": "9414a4e7.3d88c8",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Read-only",
        "tooltip": "",
        "group": "da3c0db0.9c6aa",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "readonly",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 959,
        "y": 399,
        "wires": [
            [
                "4711e827.788878"
            ]
        ]
    },
    {
        "id": "6a959097.836b1",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Enable/Disable",
        "func": "if(msg.payload<=-3275) {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Inställningar_Värmekurva_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Inställningar_Värmekurva_S2\"]\n            }\n        }\n    node.send([msg,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 367,
        "y": 665,
        "wires": [
            [
                "b532e9d.acf2018",
                "1870fc41.cbc664"
            ],
            []
        ]
    },
    {
        "id": "b532e9d.acf2018",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "Disable Group S2",
        "events": "all",
        "x": 601,
        "y": 686,
        "wires": [
            []
        ]
    },
    {
        "id": "8039fae0.f63558",
        "type": "mqtt in",
        "z": "a640aab2.a9f768",
        "name": "",
        "topic": "homeassistant/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 836,
        "y": 553,
        "wires": [
            [
                "cafa5197.8328"
            ]
        ]
    },
    {
        "id": "cafa5197.8328",
        "type": "debug",
        "z": "a640aab2.a9f768",
        "name": "MQTT Discovery",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1049,
        "y": 553,
        "wires": []
    },
    {
        "id": "fe91dfd1.92491",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "HA Discovery",
        "tooltip": "",
        "group": "723a0250.fd7dcc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "discovery",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 157,
        "y": 273,
        "wires": [
            [
                "cdec2513.52ee18"
            ]
        ]
    },
    {
        "id": "cdec2513.52ee18",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "mqtt",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "discovery",
                "type": "str"
            }
        ],
        "x": 395,
        "y": 273,
        "wires": [
            [
                "fe91dfd1.92491"
            ],
            []
        ]
    },
    {
        "id": "536a060f.983278",
        "type": "nibe-hotwater",
        "z": "fa4686d6.c21688",
        "server": "844659a2.8d8508",
        "name": "",
        "enable_autoluxury": true,
        "enable_hw_priority": true,
        "autoluxury_diff": "20",
        "autoluxury_time": "10",
        "x": 388,
        "y": 203,
        "wires": [
            [
                "7f37b8e4.ad3808"
            ],
            [
                "2b767fd6.e7bdd"
            ]
        ]
    },
    {
        "id": "7f37b8e4.ad3808",
        "type": "ui_chart",
        "z": "fa4686d6.c21688",
        "name": "Automatisk tillfällig lyx",
        "group": "bcb5f9e4.9bc858",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 709,
        "y": 168,
        "wires": [
            []
        ]
    },
    {
        "id": "2b767fd6.e7bdd",
        "type": "ui_chart",
        "z": "fa4686d6.c21688",
        "name": "Varmvatten prioritet",
        "group": "38b6d907.520796",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 692,
        "y": 231,
        "wires": [
            []
        ]
    },
    {
        "id": "cabc9c9b.934ca",
        "type": "ui_button",
        "z": "fa4686d6.c21688",
        "name": "Uppdatera",
        "group": "bcb5f9e4.9bc858",
        "order": 5,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny data och uppdatera med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 175,
        "y": 203,
        "wires": [
            [
                "536a060f.983278"
            ]
        ]
    },
    {
        "id": "9b8580ac.45b4c",
        "type": "ui_button",
        "z": "fa4686d6.c21688",
        "name": "Uppdatera",
        "group": "38b6d907.520796",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny data och uppdatera med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "update",
        "x": 175,
        "y": 245,
        "wires": [
            [
                "536a060f.983278"
            ]
        ]
    },
    {
        "id": "2fa37aef.af11c6",
        "type": "subflow:c191a5d.5d76258",
        "z": "fa4686d6.c21688",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "hotwater",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_autoluxury",
                "type": "str"
            }
        ],
        "x": 496,
        "y": 84,
        "wires": [
            [
                "50a77016.79477"
            ],
            []
        ]
    },
    {
        "id": "50a77016.79477",
        "type": "ui_switch",
        "z": "fa4686d6.c21688",
        "name": "Aktivera Automatisk tillfällig lyx",
        "label": "Aktivera",
        "tooltip": "",
        "group": "bcb5f9e4.9bc858",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "enable_autoluxury",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 228,
        "y": 84,
        "wires": [
            [
                "2fa37aef.af11c6"
            ]
        ]
    },
    {
        "id": "7fdfc0b5.b1058",
        "type": "ui_switch",
        "z": "fa4686d6.c21688",
        "name": "Aktivera Varmvatten prioritet",
        "label": "Aktivera",
        "tooltip": "",
        "group": "38b6d907.520796",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "enable_hw_priority",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 225,
        "y": 133,
        "wires": [
            [
                "2678da12.da8146"
            ]
        ]
    },
    {
        "id": "2678da12.da8146",
        "type": "subflow:c191a5d.5d76258",
        "z": "fa4686d6.c21688",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "hotwater",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable_hw_priority",
                "type": "str"
            }
        ],
        "x": 496,
        "y": 133,
        "wires": [
            [
                "7fdfc0b5.b1058"
            ],
            []
        ]
    },
    {
        "id": "4fefdad9.0edc14",
        "type": "ui_slider",
        "z": "fa4686d6.c21688",
        "name": "",
        "label": "Differens",
        "tooltip": "",
        "group": "bcb5f9e4.9bc858",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "diff",
        "min": "5",
        "max": "50",
        "step": "1",
        "x": 179,
        "y": 343,
        "wires": [
            [
                "9efc9a73.8d9468"
            ]
        ]
    },
    {
        "id": "9efc9a73.8d9468",
        "type": "subflow:c191a5d.5d76258",
        "z": "fa4686d6.c21688",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "hotwater",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "diff",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 343,
        "wires": [
            [
                "4fefdad9.0edc14"
            ],
            []
        ]
    },
    {
        "id": "61c95762.533568",
        "type": "ui_slider",
        "z": "fa4686d6.c21688",
        "name": "",
        "label": "Tidfaktor",
        "tooltip": "",
        "group": "bcb5f9e4.9bc858",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "time",
        "min": 0,
        "max": "50",
        "step": "1",
        "x": 179,
        "y": 385,
        "wires": [
            [
                "34388b96.e63974"
            ]
        ]
    },
    {
        "id": "34388b96.e63974",
        "type": "subflow:c191a5d.5d76258",
        "z": "fa4686d6.c21688",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "hotwater",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "time",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 385,
        "wires": [
            [
                "61c95762.533568"
            ],
            []
        ]
    },
    {
        "id": "9e4523cf.0fe29",
        "type": "ui_toast",
        "z": "b7f67da0.fbf1",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 706,
        "y": 21,
        "wires": []
    },
    {
        "id": "ae0eda11.749f58",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 540,
        "y": 70,
        "wires": []
    },
    {
        "id": "a95abf3c.1467c",
        "type": "delay",
        "z": "b7f67da0.fbf1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 507,
        "y": 21,
        "wires": [
            [
                "9e4523cf.0fe29"
            ]
        ]
    },
    {
        "id": "4ee74939.4db6e8",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "error",
        "x": 134,
        "y": 42,
        "wires": [
            [
                "a95abf3c.1467c",
                "ae0eda11.749f58"
            ],
            []
        ]
    },
    {
        "id": "22798341.63387c",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Loggning på",
        "tooltip": "",
        "group": "97526682.5406d8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 300,
        "y": 2226,
        "wires": [
            [
                "ad9a955e.bca628"
            ]
        ]
    },
    {
        "id": "ad9a955e.bca628",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "log",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "enable",
                "type": "str"
            }
        ],
        "x": 524,
        "y": 2226,
        "wires": [
            [
                "22798341.63387c",
                "d464fe8e.e8ef7"
            ],
            []
        ]
    },
    {
        "id": "df3307ec.65d498",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "INFO",
        "tooltip": "",
        "group": "97526682.5406d8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "info",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 281,
        "y": 2275,
        "wires": [
            [
                "68bba490.cea85c"
            ]
        ]
    },
    {
        "id": "68bba490.cea85c",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "log",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "info",
                "type": "str"
            }
        ],
        "x": 525,
        "y": 2275,
        "wires": [
            [
                "df3307ec.65d498"
            ],
            []
        ]
    },
    {
        "id": "d464fe8e.e8ef7",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Enable/Disable",
        "func": "msg = {\n    enabled:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 759,
        "y": 2226,
        "wires": [
            [
                "df3307ec.65d498",
                "c548dfa7.e7696",
                "4b9a995c.0f11b8",
                "3b259789.2e49a8"
            ]
        ]
    },
    {
        "id": "c548dfa7.e7696",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "ERROR",
        "tooltip": "",
        "group": "97526682.5406d8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "error",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 291,
        "y": 2324,
        "wires": [
            [
                "9f0b5119.f9854"
            ]
        ]
    },
    {
        "id": "9f0b5119.f9854",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "log",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "error",
                "type": "str"
            }
        ],
        "x": 525,
        "y": 2324,
        "wires": [
            [
                "c548dfa7.e7696"
            ],
            []
        ]
    },
    {
        "id": "4b9a995c.0f11b8",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "DEBUG",
        "tooltip": "",
        "group": "97526682.5406d8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "debug",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 291,
        "y": 2373,
        "wires": [
            [
                "fbd484b.8d81e78"
            ]
        ]
    },
    {
        "id": "fbd484b.8d81e78",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "log",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "debug",
                "type": "str"
            }
        ],
        "x": 525,
        "y": 2373,
        "wires": [
            [
                "4b9a995c.0f11b8"
            ],
            []
        ]
    },
    {
        "id": "3b259789.2e49a8",
        "type": "ui_switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "CORE",
        "tooltip": "",
        "group": "97526682.5406d8",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "core",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 281,
        "y": 2422,
        "wires": [
            [
                "d695de6d.24616"
            ]
        ]
    },
    {
        "id": "d695de6d.24616",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "log",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "core",
                "type": "str"
            }
        ],
        "x": 525,
        "y": 2422,
        "wires": [
            [
                "3b259789.2e49a8"
            ],
            []
        ]
    },
    {
        "id": "950de0aa.51125",
        "type": "ui_template",
        "z": "b7f67da0.fbf1",
        "group": "97526682.5406d8",
        "name": "Loggning Info",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<p>Loggning sker till \"/tmp/nibepi.log\"<br>I SSH kör kommando \"tail -f /tmp/nibepi.log\"<br><br></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 349,
        "y": 2177,
        "wires": [
            []
        ]
    },
    {
        "id": "3b6f4ac6.4ef9b6",
        "type": "mqtt in",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "nibe/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 911,
        "y": 462,
        "wires": [
            [
                "274b71aa.648abe"
            ]
        ]
    },
    {
        "id": "274b71aa.648abe",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "MQTT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1059,
        "y": 462,
        "wires": []
    },
    {
        "id": "b4a9d18b.4c69a",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Enable/Disable",
        "func": "if(msg.payload===true) {\n    node.send({enabled:false});\n} else {\n    node.send({enabled:true});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 612,
        "y": 245,
        "wires": [
            [
                "3f2df90a.87e2f6",
                "5eaea9fd.2ab8b8",
                "3eed3ea7.c66072",
                "7cc82e4d.8f653",
                "6fe84622.e973e8"
            ]
        ]
    },
    {
        "id": "485ac39d.e1262c",
        "type": "ui_ui_control",
        "z": "df0dd648.98daa8",
        "name": "",
        "events": "all",
        "x": 690,
        "y": 112,
        "wires": [
            [
                "b21fd6b9.6b28e8"
            ]
        ]
    },
    {
        "id": "b21fd6b9.6b28e8",
        "type": "function",
        "z": "df0dd648.98daa8",
        "name": "Prognosreglering",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Prognosreglering\") {\n    if(time>timeSaved) {\n        context.set('time',(time+30000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 112,
        "wires": [
            [
                "8a714b3a.55fa18"
            ]
        ]
    },
    {
        "id": "8a714b3a.55fa18",
        "type": "nibe-request",
        "z": "df0dd648.98daa8",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 1044,
        "y": 112,
        "wires": [
            [],
            [
                "10e30751.e4e639"
            ]
        ]
    },
    {
        "id": "87a83c1.3cd9fc",
        "type": "nibe-request",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 127,
        "y": 385,
        "wires": [
            [],
            [
                "dff05253.9f618"
            ]
        ]
    },
    {
        "id": "e0751200.e40b5",
        "type": "ui_switch",
        "z": "358baec9.c8b902",
        "name": "Aktivera Stoppa värmeproduktion",
        "label": "Stoppa värmeproduktion",
        "tooltip": "",
        "group": "95b0af9c.89089",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "dm_reset_enable_stop",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 280,
        "y": 1442,
        "wires": [
            [
                "c5d3afd1.ce899"
            ]
        ]
    },
    {
        "id": "c5d3afd1.ce899",
        "type": "subflow:c191a5d.5d76258",
        "z": "358baec9.c8b902",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "indoor",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "dm_reset_enable_stop",
                "type": "str"
            }
        ],
        "x": 545,
        "y": 1442,
        "wires": [
            [
                "e0751200.e40b5",
                "49abf480.acd38c"
            ],
            []
        ]
    },
    {
        "id": "5abdd88.e5f8628",
        "type": "subflow:c191a5d.5d76258",
        "z": "358baec9.c8b902",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "indoor",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "dm_reset_stop_diff",
                "type": "str"
            }
        ],
        "x": 545,
        "y": 1498,
        "wires": [
            [
                "46fd6a28.346e94"
            ],
            []
        ]
    },
    {
        "id": "46fd6a28.346e94",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Differens",
        "tooltip": "",
        "group": "95b0af9c.89089",
        "order": 6,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "end",
        "topic": "dm_reset_stop_diff",
        "min": "0.5",
        "max": "3",
        "step": "0.1",
        "x": 284,
        "y": 1498,
        "wires": [
            [
                "5abdd88.e5f8628"
            ]
        ]
    },
    {
        "id": "bb2ea9a3.783e38",
        "type": "subflow:c191a5d.5d76258",
        "z": "358baec9.c8b902",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "indoor",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "dm_reset_slow_diff",
                "type": "str"
            }
        ],
        "x": 545,
        "y": 1547,
        "wires": [
            [
                "a56e3e6c.baf92"
            ],
            []
        ]
    },
    {
        "id": "a56e3e6c.baf92",
        "type": "ui_slider",
        "z": "358baec9.c8b902",
        "name": "",
        "label": "Differens",
        "tooltip": "",
        "group": "95b0af9c.89089",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "end",
        "topic": "dm_reset_slow_diff",
        "min": "0.1",
        "max": "3",
        "step": "0.1",
        "x": 284,
        "y": 1547,
        "wires": [
            [
                "bb2ea9a3.783e38"
            ]
        ]
    },
    {
        "id": "49abf480.acd38c",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "Enable/Disable",
        "func": "msg = {\n    enabled:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 773,
        "y": 1442,
        "wires": [
            [
                "46fd6a28.346e94"
            ]
        ]
    },
    {
        "id": "bb501ea0.7f712",
        "type": "function",
        "z": "358baec9.c8b902",
        "name": "Enable/Disable",
        "func": "msg = {\n    enabled:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 1393,
        "wires": [
            [
                "e0751200.e40b5",
                "46fd6a28.346e94",
                "a56e3e6c.baf92"
            ]
        ]
    },
    {
        "id": "54f823ff.b8206c",
        "type": "ui_ui_control",
        "z": "eee76599.b5f0d8",
        "name": "",
        "events": "all",
        "x": 144,
        "y": 210,
        "wires": [
            [
                "b59bafd9.45e65"
            ]
        ]
    },
    {
        "id": "b59bafd9.45e65",
        "type": "function",
        "z": "eee76599.b5f0d8",
        "name": "Inomhusreglering",
        "func": "var timeSaved = context.get('time')||(Date.now()-1000);\nvar time = Date.now();\nif(msg.name==\"Inställningar\") {\n    if(time>timeSaved) {\n        context.set('time',(time+30000));\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 314,
        "y": 210,
        "wires": [
            [
                "893baad1.277128"
            ]
        ]
    },
    {
        "id": "893baad1.277128",
        "type": "nibe-request",
        "z": "eee76599.b5f0d8",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 260,
        "y": 252,
        "wires": [
            [],
            [
                "d85ce7ca.219c78",
                "8820ada.454c85"
            ]
        ]
    },
    {
        "id": "d85ce7ca.219c78",
        "type": "function",
        "z": "eee76599.b5f0d8",
        "name": "Update list",
        "func": "var sensors = msg.payload.home.inside_sensors;\nvar output = [\"Ingen\"];\nif(sensors.length===0) {\n    return;\n}\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    if(msg.payload.indoor!==undefined) {\n        node.send({payload:msg.payload.rmu.sensor_s1})\n    }\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 434,
        "y": 308,
        "wires": [
            [
                "120d7487.c214bb"
            ]
        ]
    },
    {
        "id": "120d7487.c214bb",
        "type": "ui_dropdown",
        "z": "eee76599.b5f0d8",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "ef983ace.21f138",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rmu/sensor",
        "x": 622,
        "y": 308,
        "wires": [
            [
                "17916cf8.c093b3"
            ]
        ]
    },
    {
        "id": "dc42d90.1df3a28",
        "type": "subflow:c191a5d.5d76258",
        "z": "eee76599.b5f0d8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "rmu",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "sensor_s1",
                "type": "str"
            }
        ],
        "x": 237,
        "y": 308,
        "wires": [
            [],
            [
                "d85ce7ca.219c78"
            ]
        ]
    },
    {
        "id": "17916cf8.c093b3",
        "type": "nibe-rmu",
        "z": "eee76599.b5f0d8",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s1",
        "sensor": "",
        "x": 738,
        "y": 371,
        "wires": [
            [
                "ed7a28da.800c78"
            ],
            []
        ]
    },
    {
        "id": "15852af8.995215",
        "type": "inject",
        "z": "eee76599.b5f0d8",
        "name": "",
        "topic": "update",
        "payload": "Uppdatera",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 524,
        "y": 371,
        "wires": [
            [
                "17916cf8.c093b3"
            ]
        ]
    },
    {
        "id": "8820ada.454c85",
        "type": "function",
        "z": "eee76599.b5f0d8",
        "name": "Update list",
        "func": "var sensors = msg.payload.home.inside_sensors;\nvar output = [\"Ingen\"];\nif(sensors.length===0) {\n    return;\n}\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    if(msg.payload.indoor!==undefined) {\n        node.send({payload:msg.payload.rmu.sensor_s2})\n    }\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 434,
        "y": 441,
        "wires": [
            [
                "c9b16100.9942c"
            ]
        ]
    },
    {
        "id": "c9b16100.9942c",
        "type": "ui_dropdown",
        "z": "eee76599.b5f0d8",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "32b15b25.77ef94",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rmu/sensor",
        "x": 622,
        "y": 441,
        "wires": [
            [
                "9e04abe.ef6d058"
            ]
        ]
    },
    {
        "id": "9eada6bf.9eade8",
        "type": "subflow:c191a5d.5d76258",
        "z": "eee76599.b5f0d8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "rmu",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "sensor_s2",
                "type": "str"
            }
        ],
        "x": 237,
        "y": 441,
        "wires": [
            [],
            [
                "8820ada.454c85"
            ]
        ]
    },
    {
        "id": "9e04abe.ef6d058",
        "type": "nibe-rmu",
        "z": "eee76599.b5f0d8",
        "server": "844659a2.8d8508",
        "name": "",
        "system": "s2",
        "sensor": "",
        "x": 738,
        "y": 504,
        "wires": [
            [
                "66a2f83a.e878d8",
                "f86092a6.e0f16"
            ],
            []
        ]
    },
    {
        "id": "911f0c0d.14384",
        "type": "inject",
        "z": "eee76599.b5f0d8",
        "name": "",
        "topic": "update",
        "payload": "Uppdatera",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 524,
        "y": 504,
        "wires": [
            [
                "9e04abe.ef6d058"
            ]
        ]
    },
    {
        "id": "66a2f83a.e878d8",
        "type": "function",
        "z": "eee76599.b5f0d8",
        "name": "Enable/Disable",
        "func": "if(msg.enabled!==undefined && msg.enabled===true) {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Inställningar_RMU40_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else if(msg.enabled===false) {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Inställningar_RMU40_S2\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 913,
        "y": 588,
        "wires": [
            [],
            [
                "4ae37d2f.ae3654"
            ]
        ]
    },
    {
        "id": "4ae37d2f.ae3654",
        "type": "ui_ui_control",
        "z": "eee76599.b5f0d8",
        "name": "Disable Group S2",
        "events": "all",
        "x": 1133,
        "y": 588,
        "wires": [
            []
        ]
    },
    {
        "id": "ed7a28da.800c78",
        "type": "debug",
        "z": "eee76599.b5f0d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 960,
        "y": 371,
        "wires": []
    },
    {
        "id": "f86092a6.e0f16",
        "type": "debug",
        "z": "eee76599.b5f0d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 949,
        "y": 467,
        "wires": []
    },
    {
        "id": "bbeace10.c8e3d",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "Disable View",
        "events": "all",
        "x": 1204,
        "y": 1204,
        "wires": [
            []
        ]
    },
    {
        "id": "9961a077.ae64e",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "sensor_timeout",
                "type": "str"
            }
        ],
        "x": 559,
        "y": 1771,
        "wires": [
            [
                "85e36ab1.21f178"
            ],
            []
        ]
    },
    {
        "id": "85e36ab1.21f178",
        "type": "ui_slider",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Timeout tid för MQTT givare",
        "tooltip": "Givaren måste uppdateras inom detta interval annars ignoreras den. OBS \"0\" inaktiverar timeout.",
        "group": "fb207b28.da59b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "sensor_timeout",
        "min": 0,
        "max": "120",
        "step": 1,
        "x": 337,
        "y": 1764,
        "wires": [
            [
                "9961a077.ae64e"
            ]
        ]
    },
    {
        "id": "bc033700.b4f528",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 974,
        "y": 119,
        "wires": [
            [
                "96e5be75.41ca7"
            ],
            [
                "96e5be75.41ca7"
            ],
            []
        ]
    },
    {
        "id": "8c94d6ec.86fc68",
        "type": "nibe-input",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "dM",
        "add": false,
        "x": 876,
        "y": 686,
        "wires": [
            [
                "5f8c6837.106e18"
            ],
            [
                "e78514aa.0d9f28"
            ]
        ]
    },
    {
        "id": "23951e95.29e3a2",
        "type": "nibe-input",
        "z": "358baec9.c8b902",
        "server": "844659a2.8d8508",
        "name": "outside",
        "add": false,
        "x": 876,
        "y": 735,
        "wires": [
            [
                "61436d60.0601e4"
            ],
            [
                "e78514aa.0d9f28"
            ]
        ]
    },
    {
        "id": "60eab66c.e5a1b8",
        "type": "ui_template",
        "z": "b7f67da0.fbf1",
        "group": "fe94277c.dcd118",
        "name": "",
        "order": 2,
        "width": "12",
        "height": "5",
        "format": "<p>{{msg.payload}}</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1278,
        "y": 119,
        "wires": [
            []
        ]
    },
    {
        "id": "96e5be75.41ca7",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "var data = global.get('cmdLog')||[];\nlet time = Date.now();\nlet da = msg.payload//.replace('\\n','<br>')\nnode.send({payload:da});\n/*\ndata.unshift([da]);\nglobal.set('cmdLog',data);\nif(da!==undefined && da!==[]) {\n    node.send({payload:data});\n}*/",
        "outputs": 1,
        "noerr": 0,
        "x": 1128,
        "y": 119,
        "wires": [
            [
                "60eab66c.e5a1b8"
            ]
        ]
    },
    {
        "id": "db8da946.5afd58",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "Model",
        "env": [
            {
                "name": "Name",
                "value": "system",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "pump",
                "type": "str"
            }
        ],
        "x": 1051,
        "y": 714,
        "wires": [
            [
                "3a72bbe0.7394c4"
            ],
            []
        ]
    },
    {
        "id": "c89baea1.1190b",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "Firmware",
        "env": [
            {
                "name": "Name",
                "value": "system",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "firmware",
                "type": "str"
            }
        ],
        "x": 1061,
        "y": 756,
        "wires": [
            [
                "d9877026.b0431"
            ],
            []
        ]
    },
    {
        "id": "3a72bbe0.7394c4",
        "type": "ui_text",
        "z": "b7f67da0.fbf1",
        "group": "4a7ab836.172ae8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Nibe",
        "label": "",
        "format": "Nibe {{msg.payload}}",
        "layout": "row-left",
        "x": 1226,
        "y": 714,
        "wires": []
    },
    {
        "id": "d9877026.b0431",
        "type": "ui_text",
        "z": "b7f67da0.fbf1",
        "group": "4a7ab836.172ae8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Firmware",
        "label": "",
        "format": "Firmware {{msg.payload}}",
        "layout": "row-left",
        "x": 1222,
        "y": 756,
        "wires": []
    },
    {
        "id": "e3908904.192158",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Kör kommando",
        "tooltip": "Skriv ett kommando. Återkoppling i rutan nedan",
        "group": "fe94277c.dcd118",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 780,
        "y": 119,
        "wires": [
            [
                "bc033700.b4f528"
            ]
        ]
    },
    {
        "id": "95df0257.5f871",
        "type": "ui_text_input",
        "z": "fa4686d6.c21688",
        "d": true,
        "name": "",
        "label": "Start",
        "tooltip": "",
        "group": "38b6d907.520796",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "time",
        "delay": "0",
        "topic": "priority_time_start1",
        "x": 442,
        "y": 476,
        "wires": [
            [
                "4b2e686f.1be868"
            ]
        ]
    },
    {
        "id": "4b2e686f.1be868",
        "type": "subflow:c191a5d.5d76258",
        "z": "fa4686d6.c21688",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "hotwater",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "priority_time_start1",
                "type": "str"
            }
        ],
        "x": 643,
        "y": 476,
        "wires": [
            [
                "95df0257.5f871"
            ],
            []
        ]
    },
    {
        "id": "a06c6ec7.72b5e",
        "type": "ui_dropdown",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Ta bort Register",
        "tooltip": "",
        "place": "Välj register",
        "group": "bd199d65.157fc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "removeRegister",
        "x": 871,
        "y": 1421,
        "wires": [
            [
                "1b0cc4df.6a668b"
            ]
        ]
    },
    {
        "id": "77e503d5.77b63c",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "",
        "func": "var sensors = msg.payload.home.inside_sensors||[];\nvar output = [\"Ingen\"];\nfor (const arr of sensors) {\n    output.push(arr.name)\n}\nif(output!==undefined && output!==[]) {\n    node.send({options:output});\n    if(msg.payload.price!==undefined) {\n        node.send({payload:msg.payload.price.sensor_s1})\n    }\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 428,
        "y": 420,
        "wires": [
            [
                "5b35fb44.679dc4"
            ]
        ]
    },
    {
        "id": "9c5f816f.d0c84",
        "type": "nibe-input",
        "z": "960078e.e3e6d88",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 134,
        "y": 420,
        "wires": [
            [
                "77e503d5.77b63c"
            ],
            []
        ]
    },
    {
        "id": "419d4955.0dded8",
        "type": "nibe-request",
        "z": "960078e.e3e6d88",
        "server": "844659a2.8d8508",
        "name": "Config",
        "x": 134,
        "y": 378,
        "wires": [
            [],
            [
                "77e503d5.77b63c"
            ]
        ]
    },
    {
        "id": "5b35fb44.679dc4",
        "type": "ui_dropdown",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Välj Inomhusgivare",
        "tooltip": "",
        "place": "Välj",
        "group": "b561c5cd.249a58",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "price/sensor",
        "x": 601,
        "y": 420,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "551009f1.15c058",
        "type": "ui_slider",
        "z": "960078e.e3e6d88",
        "name": "",
        "label": "Differens",
        "tooltip": "Lägsta temperaturdifferens jämfört mot Inomhusbörvärdet.",
        "group": "b561c5cd.249a58",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "price/temp_low",
        "min": "-3",
        "max": "0",
        "step": "0.1",
        "x": 1033,
        "y": 315,
        "wires": [
            [
                "8dd4be0a.86e46"
            ]
        ]
    },
    {
        "id": "84e8bdd0.e775f",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "temp_low_s1",
                "type": "str"
            }
        ],
        "x": 853,
        "y": 315,
        "wires": [
            [
                "551009f1.15c058"
            ],
            []
        ]
    },
    {
        "id": "69d448f5.49a7d8",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "setpoint_s2",
        "x": 742,
        "y": 903,
        "wires": [
            [
                "490c35f1.10b10c"
            ],
            []
        ]
    },
    {
        "id": "490c35f1.10b10c",
        "type": "nibe-request",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "supply_s2",
        "x": 893,
        "y": 903,
        "wires": [
            [
                "ec4077fa.6625d8"
            ],
            []
        ]
    },
    {
        "id": "ec4077fa.6625d8",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "\nif(msg.supply_s2>-3276) {\nnode.send({timestamp:msg.payload,topic:\"Börvärde S2\",payload:msg.setpoint_s2});\nnode.send({timestamp:msg.payload,topic:\"Framledning S2\",payload:msg.supply_s2});\n} else if(msg.supply_s2===undefined) {\n    \n} else {\n    flow.set('s2',false);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1051,
        "y": 903,
        "wires": [
            [
                "ef643ddd.c667f"
            ]
        ]
    },
    {
        "id": "d267ee3c.9e4e9",
        "type": "switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "property": "s2",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 554,
        "y": 903,
        "wires": [
            [],
            [
                "69d448f5.49a7d8"
            ]
        ]
    },
    {
        "id": "cf821e30.dde36",
        "type": "ui_text_input",
        "z": "b7f67da0.fbf1",
        "name": "",
        "label": "Serieport",
        "tooltip": "",
        "group": "fe94277c.dcd118",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "port",
        "x": 1012,
        "y": 1491,
        "wires": [
            [
                "f0042dae.d44d"
            ]
        ]
    },
    {
        "id": "f0042dae.d44d",
        "type": "subflow:c191a5d.5d76258",
        "z": "b7f67da0.fbf1",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "serial",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "port",
                "type": "str"
            }
        ],
        "x": 1189,
        "y": 1491,
        "wires": [
            [
                "cf821e30.dde36"
            ],
            []
        ]
    },
    {
        "id": "9a16797e.af4448",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "fe94277c.dcd118",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta Samba",
        "tooltip": "Startar fildelningsservern och sätter NibePi i skrivläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 395,
        "y": 2520,
        "wires": [
            [
                "7c23dc92.d4de34"
            ]
        ]
    },
    {
        "id": "7c23dc92.d4de34",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 653,
        "y": 2520,
        "wires": [
            [],
            [],
            [
                "53907b6b.f7ca84"
            ]
        ]
    },
    {
        "id": "53907b6b.f7ca84",
        "type": "switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 863,
        "y": 2534,
        "wires": [
            [
                "431f5eda.16be7"
            ]
        ]
    },
    {
        "id": "431f5eda.16be7",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "sudo service smbd start",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1049,
        "y": 2534,
        "wires": [
            [],
            [],
            [
                "1028bc02.3efb04"
            ]
        ]
    },
    {
        "id": "1028bc02.3efb04",
        "type": "switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 828,
        "y": 2611,
        "wires": [
            [
                "4b487231.b42a6c"
            ]
        ]
    },
    {
        "id": "4b487231.b42a6c",
        "type": "change",
        "z": "b7f67da0.fbf1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba startad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 981,
        "y": 2611,
        "wires": [
            [
                "9a132183.4d71"
            ]
        ]
    },
    {
        "id": "9a132183.4d71",
        "type": "ui_toast",
        "z": "b7f67da0.fbf1",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1247,
        "y": 2611,
        "wires": []
    },
    {
        "id": "c6b8ea30.00e938",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "fe94277c.dcd118",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Stoppa Samba",
        "tooltip": "Stoppar fildelningsservern och sätter NibePi i läsläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 318,
        "y": 2660,
        "wires": [
            [
                "b6efd9d4.d18858"
            ]
        ]
    },
    {
        "id": "b6efd9d4.d18858",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "sudo service smbd stop",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 558,
        "y": 2660,
        "wires": [
            [],
            [],
            [
                "38046291.6ece6e"
            ]
        ]
    },
    {
        "id": "38046291.6ece6e",
        "type": "switch",
        "z": "b7f67da0.fbf1",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 864,
        "y": 2674,
        "wires": [
            [
                "d4c42e0f.896dd"
            ]
        ]
    },
    {
        "id": "fa2d2ae9.938078",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "fe94277c.dcd118",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta om Node-RED",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 178,
        "y": 2898,
        "wires": [
            [
                "7e7da779.2a9ea8",
                "9a132183.4d71"
            ]
        ]
    },
    {
        "id": "7e7da779.2a9ea8",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "sudo service nodered restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 457,
        "y": 2898,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "85d5ca03.843578",
        "type": "ui_button",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "fe94277c.dcd118",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Starta om NibePi hårdvara",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 205,
        "y": 2968,
        "wires": [
            [
                "1601f8.7c0cee09"
            ]
        ]
    },
    {
        "id": "1601f8.7c0cee09",
        "type": "exec",
        "z": "b7f67da0.fbf1",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 414,
        "y": 2968,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d4c42e0f.896dd",
        "type": "change",
        "z": "b7f67da0.fbf1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba stoppad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1053,
        "y": 2674,
        "wires": [
            [
                "9a132183.4d71"
            ]
        ]
    },
    {
        "id": "d0af1b69.cb7df8",
        "type": "ui_text_input",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Latitud",
        "tooltip": "",
        "group": "33ed6fb8.2f3ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lat",
        "x": 1037,
        "y": 28,
        "wires": [
            [
                "d3afa237.f2b84"
            ]
        ]
    },
    {
        "id": "18e3ee8f.596ea1",
        "type": "ui_text_input",
        "z": "df0dd648.98daa8",
        "name": "",
        "label": "Longitud",
        "tooltip": "",
        "group": "33ed6fb8.2f3ce",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lon",
        "x": 1047,
        "y": 77,
        "wires": [
            [
                "4bd5cd01.e7f284"
            ]
        ]
    },
    {
        "id": "d3afa237.f2b84",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "lat",
                "type": "str"
            }
        ],
        "x": 1238,
        "y": 28,
        "wires": [
            [
                "d0af1b69.cb7df8"
            ],
            []
        ]
    },
    {
        "id": "4bd5cd01.e7f284",
        "type": "subflow:c191a5d.5d76258",
        "z": "df0dd648.98daa8",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "home",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "lon",
                "type": "str"
            }
        ],
        "x": 1238,
        "y": 77,
        "wires": [
            [
                "18e3ee8f.596ea1"
            ],
            []
        ]
    },
    {
        "id": "65bf37a8.e18928",
        "type": "ui_text",
        "z": "960078e.e3e6d88",
        "group": "f481a5f0.f9f1c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "SmartPrice Info 2",
        "label": "",
        "format": "Alla åtgärder ska däremot nollställas för att NibePi ska kunna styra.",
        "layout": "row-spread",
        "x": 853,
        "y": 679,
        "wires": []
    },
    {
        "id": "d383b3f8.c2437",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "",
        "func": "var output = [{Tibber:\"tibber\"},{Nibe:\"nibe\"}];\nif(msg.payload===10) {\n    output = [{Tibber:\"tibber\"}];\n}\n\nnode.send({options:output});",
        "outputs": 1,
        "noerr": 0,
        "x": 127,
        "y": 1078,
        "wires": [
            [
                "2ec7e694.30d2ea"
            ]
        ]
    },
    {
        "id": "50e1598f.5e01d8",
        "type": "subflow:c191a5d.5d76258",
        "z": "960078e.e3e6d88",
        "name": "",
        "env": [
            {
                "name": "Name",
                "value": "price",
                "type": "str"
            },
            {
                "name": "Function",
                "value": "source",
                "type": "str"
            }
        ],
        "x": 419,
        "y": 1232,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "321fde4.84f6d22",
        "type": "function",
        "z": "960078e.e3e6d88",
        "name": "",
        "func": "if(msg.payload===false) {\n    msg.payload = \"\";\n    msg.topic = \"source\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 246,
        "y": 1232,
        "wires": [
            [
                "50e1598f.5e01d8"
            ]
        ]
    },
    {
        "id": "4a8d9c43.5fb4c4",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "40083",
        "add": false,
        "x": 183,
        "y": 3073,
        "wires": [
            [
                "7190cf5b.062c2"
            ],
            []
        ]
    },
    {
        "id": "e3cb9196.ba931",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "40081",
        "add": false,
        "x": 183,
        "y": 3122,
        "wires": [
            [
                "7190cf5b.062c2"
            ],
            []
        ]
    },
    {
        "id": "94c9449e.eb7068",
        "type": "nibe-input",
        "z": "b7f67da0.fbf1",
        "server": "844659a2.8d8508",
        "name": "40079",
        "add": false,
        "x": 183,
        "y": 3171,
        "wires": [
            [
                "7190cf5b.062c2"
            ],
            []
        ]
    },
    {
        "id": "7190cf5b.062c2",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "",
        "func": "let data = context.get('data')||{};\nif(msg.topic==\"40083\") {\n    data.L1 = msg.payload;\n} else if(msg.topic==\"40081\") {\n    data.L2 = msg.payload;\n} else if(msg.topic==\"40079\") {\n    data.L3 = msg.payload;\n}\ncontext.set('data',data);\nif(data.L1!==undefined && data.L2!==undefined && data.L3!==undefined) {\n    let ampere = data.L1+data.L2+data.L3;\nlet volt = 230;\nlet watt = Number((volt*ampere).toFixed(0));\nnode.send({topic:\"Förbrukning\",payload:watt})\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 399,
        "y": 3122,
        "wires": [
            [
                "649fa78e.58fc48",
                "e0eef71b.f47198",
                "4d701d7a.3c5a54"
            ]
        ]
    },
    {
        "id": "649fa78e.58fc48",
        "type": "debug",
        "z": "b7f67da0.fbf1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 609,
        "y": 3073,
        "wires": []
    },
    {
        "id": "e0eef71b.f47198",
        "type": "ui_chart",
        "z": "b7f67da0.fbf1",
        "name": "",
        "group": "6dbad083.a9946",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Förbrukning strömavkännare",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Inga värden än.",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 652,
        "y": 3122,
        "wires": [
            []
        ]
    },
    {
        "id": "6f65686e.7365c8",
        "type": "inject",
        "z": "b7f67da0.fbf1",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 336,
        "y": 3206,
        "wires": [
            [
                "4d701d7a.3c5a54"
            ]
        ]
    },
    {
        "id": "558394be.fe0c4c",
        "type": "ui_ui_control",
        "z": "b7f67da0.fbf1",
        "name": "Disable Group S2",
        "events": "all",
        "x": 741,
        "y": 3206,
        "wires": [
            []
        ]
    },
    {
        "id": "4d701d7a.3c5a54",
        "type": "function",
        "z": "b7f67da0.fbf1",
        "name": "Enable/Disable",
        "func": "if(msg.topic!==\"\") {\n    let hide = {\n        \"group\":\n            {\"show\":\n                [\"Startsida_Förbrukning_strömavkännare\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n} else {\n    let hide = {\n        \"group\":\n            {\"hide\":\n                [\"Startsida_Förbrukning_strömavkännare\"]\n            }\n        }\n    node.send([null,{payload:hide}]);\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 521,
        "y": 3206,
        "wires": [
            [],
            [
                "558394be.fe0c4c"
            ]
        ]
    }
]